

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Apr 18 18:57:36 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210                           
   211                           	psect	strings
   212  01C1                     __pstrings:
   213  01C1                     stringtab:
   214  01C1                     __stringtab:
   215  01C1                     stringcode:	
   216                           ;	String table - string pointers are 1 byte each
   217                           
   218  01C1                     stringdir:
   219  01C1  3001               	movlw	high stringdir
   220  01C2  008A               	movwf	10
   221  01C3  0804               	movf	4,w
   222  01C4  0A84               	incf	4,f
   223  01C5  0782               	addwf	2,f
   224  01C6                     __stringbase:
   225  01C6  3400               	retlw	0
   226  01C7                     __end_of__stringtab:
   227  01C7                     _tabla:
   228  01C7  343F               	retlw	63
   229  01C8  3406               	retlw	6
   230  01C9  345B               	retlw	91
   231  01CA  344F               	retlw	79
   232  01CB  3466               	retlw	102
   233  01CC  346D               	retlw	109
   234  01CD  347D               	retlw	125
   235  01CE  3407               	retlw	7
   236  01CF  347F               	retlw	127
   237  01D0                     __end_of_tabla:
   238                           
   239                           	psect	nvCOMMON
   240  0075                     __pnvCOMMON:
   241  0075                     _i:
   242  0075                     	ds	1
   243  0076                     _c:
   244  0076                     	ds	1
   245  0077                     _d:
   246  0077                     	ds	1
   247  0078                     _u:
   248  0078                     	ds	1
   249  0009                     _PORTE	set	9
   250  0005                     _PORTA	set	5
   251  0001                     _TMR0	set	1
   252  000B                     _INTCONbits	set	11
   253  0007                     _PORTC	set	7
   254  0006                     _PORTB	set	6
   255  0008                     _PORTD	set	8
   256  0031                     _RB1	set	49
   257  0030                     _RB0	set	48
   258  0058                     _RBIF	set	88
   259  0035                     _RB5	set	53
   260  0036                     _RB6	set	54
   261  0037                     _RB7	set	55
   262  005A                     _T0IF	set	90
   263  008F                     _OSCCONbits	set	143
   264  0095                     _WPUB	set	149
   265  0096                     _IOCB	set	150
   266  0081                     _OPTION_REGbits	set	129
   267  0089                     _TRISE	set	137
   268  0088                     _TRISD	set	136
   269  0086                     _TRISB	set	134
   270  0085                     _TRISA	set	133
   271  0189                     _ANSELH	set	393
   272  0188                     _ANSEL	set	392
   273                           
   274                           	psect	cinit
   275  0015                     start_initialization:	
   276                           ; #config settings
   277                           
   278  0015                     __initialization:
   279                           
   280                           ; Clear objects allocated to COMMON
   281  0015  01F9               	clrf	__pbssCOMMON& (0+127)
   282  0016                     end_of_initialization:	
   283                           ;End of C runtime variable initialization code
   284                           
   285  0016                     __end_of__initialization:
   286  0016  0183               	clrf	3
   287  0017  120A  118A  2883   	ljmp	_main	;jump to C main() function
   288                           
   289                           	psect	bssCOMMON
   290  0079                     __pbssCOMMON:
   291  0079                     _f:
   292  0079                     	ds	1
   293                           
   294                           	psect	cstackCOMMON
   295  0070                     __pcstackCOMMON:
   296  0070                     ?_setup:
   297  0070                     ?_isr:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     ??_isr:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0070                     ?_main:	
   304                           ; 1 bytes @ 0x0
   305                           
   306                           
   307                           ; 1 bytes @ 0x0
   308  0070                     	ds	5
   309                           
   310                           	psect	cstackBANK0
   311  0020                     __pcstackBANK0:
   312  0020                     ??_setup:
   313  0020                     ?___bmul:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0020                     ?___wmul:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0020                     ___bmul@multiplicand:	
   320                           ; 2 bytes @ 0x0
   321                           
   322  0020                     ___wmul@multiplier:	
   323                           ; 1 bytes @ 0x0
   324                           
   325                           
   326                           ; 2 bytes @ 0x0
   327  0020                     	ds	1
   328  0021                     ??___bmul:
   329                           
   330                           ; 1 bytes @ 0x1
   331  0021                     	ds	1
   332  0022                     ___bmul@product:
   333  0022                     ___wmul@multiplicand:	
   334                           ; 1 bytes @ 0x2
   335                           
   336                           
   337                           ; 2 bytes @ 0x2
   338  0022                     	ds	1
   339  0023                     ___bmul@multiplier:
   340                           
   341                           ; 1 bytes @ 0x3
   342  0023                     	ds	1
   343  0024                     ??___wmul:
   344  0024                     ___wmul@product:	
   345                           ; 1 bytes @ 0x4
   346                           
   347                           
   348                           ; 2 bytes @ 0x4
   349  0024                     	ds	2
   350  0026                     ?___awdiv:
   351  0026                     ___awdiv@divisor:	
   352                           ; 2 bytes @ 0x6
   353                           
   354                           
   355                           ; 2 bytes @ 0x6
   356  0026                     	ds	2
   357  0028                     ___awdiv@dividend:
   358                           
   359                           ; 2 bytes @ 0x8
   360  0028                     	ds	2
   361  002A                     ??___awdiv:
   362                           
   363                           ; 1 bytes @ 0xA
   364  002A                     	ds	1
   365  002B                     ___awdiv@counter:
   366                           
   367                           ; 1 bytes @ 0xB
   368  002B                     	ds	1
   369  002C                     ___awdiv@sign:
   370                           
   371                           ; 1 bytes @ 0xC
   372  002C                     	ds	1
   373  002D                     ___awdiv@quotient:
   374                           
   375                           ; 2 bytes @ 0xD
   376  002D                     	ds	2
   377  002F                     ??_main:
   378                           
   379                           ; 1 bytes @ 0xF
   380  002F                     	ds	4
   381                           
   382                           	psect	maintext
   383  0083                     __pmaintext:	
   384 ;;
   385 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   386 ;;
   387 ;; *************** function _main *****************
   388 ;; Defined at:
   389 ;;		line 95 in file "Codigo_C.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;		None
   392 ;; Auto vars:     Size  Location     Type
   393 ;;		None
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      void 
   396 ;; Registers used:
   397 ;;		wreg, status,2, status,0, pclath, cstack
   398 ;; Tracked objects:
   399 ;;		On entry : B00/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   403 ;;      Params:         0       0       0       0       0
   404 ;;      Locals:         0       0       0       0       0
   405 ;;      Temps:          0       4       0       0       0
   406 ;;      Totals:         0       4       0       0       0
   407 ;;Total ram usage:        4 bytes
   408 ;; Hardware stack levels required when called:    3
   409 ;; This function calls:
   410 ;;		___awdiv
   411 ;;		___bmul
   412 ;;		___wmul
   413 ;;		_setup
   414 ;; This function is called by:
   415 ;;		Startup code after reset
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419                           
   420                           ;psect for function _main
   421  0083                     _main:
   422  0083                     l1068:	
   423                           ;incstack = 0
   424                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   425                           
   426                           
   427                           ;Codigo_C.c: 96:     setup();
   428  0083  120A  118A  2151  120A  118A  	fcall	_setup
   429  0088                     l82:	
   430                           ;Codigo_C.c: 99:     while(1){
   431                           
   432                           
   433                           ;Codigo_C.c: 101:         c = PORTA/100;
   434  0088  3064               	movlw	100
   435  0089  1283               	bcf	3,5	;RP0=0, select bank0
   436  008A  1303               	bcf	3,6	;RP1=0, select bank0
   437  008B  00A6               	movwf	___awdiv@divisor
   438  008C  3000               	movlw	0
   439  008D  00A7               	movwf	___awdiv@divisor+1
   440  008E  0805               	movf	5,w	;volatile
   441  008F  00AF               	movwf	??_main
   442  0090  01B0               	clrf	??_main+1
   443  0091  082F               	movf	??_main,w
   444  0092  00A8               	movwf	___awdiv@dividend
   445  0093  0830               	movf	??_main+1,w
   446  0094  00A9               	movwf	___awdiv@dividend+1
   447  0095  120A  118A  201A  120A  118A  	fcall	___awdiv
   448  009A  1283               	bcf	3,5	;RP0=0, select bank0
   449  009B  1303               	bcf	3,6	;RP1=0, select bank0
   450  009C  0826               	movf	?___awdiv,w
   451  009D  00B1               	movwf	??_main+2
   452  009E  0831               	movf	??_main+2,w
   453  009F  00F6               	movwf	_c
   454                           
   455                           ;Codigo_C.c: 102:         d = (PORTA -(c * 100))/10;
   456  00A0  300A               	movlw	10
   457  00A1  00A6               	movwf	___awdiv@divisor
   458  00A2  3000               	movlw	0
   459  00A3  00A7               	movwf	___awdiv@divisor+1
   460  00A4  0876               	movf	_c,w
   461  00A5  00AF               	movwf	??_main
   462  00A6  01B0               	clrf	??_main+1
   463  00A7  082F               	movf	??_main,w
   464  00A8  00A0               	movwf	___wmul@multiplier
   465  00A9  0830               	movf	??_main+1,w
   466  00AA  00A1               	movwf	___wmul@multiplier+1
   467  00AB  309C               	movlw	156
   468  00AC  00A2               	movwf	___wmul@multiplicand
   469  00AD  30FF               	movlw	255
   470  00AE  00A3               	movwf	___wmul@multiplicand+1
   471  00AF  120A  118A  2183  120A  118A  	fcall	___wmul
   472  00B4  1283               	bcf	3,5	;RP0=0, select bank0
   473  00B5  1303               	bcf	3,6	;RP1=0, select bank0
   474  00B6  0805               	movf	5,w	;volatile
   475  00B7  0720               	addwf	?___wmul,w
   476  00B8  00A8               	movwf	___awdiv@dividend
   477  00B9  0821               	movf	?___wmul+1,w
   478  00BA  1803               	skipnc
   479  00BB  0A21               	incf	?___wmul+1,w
   480  00BC  00A9               	movwf	___awdiv@dividend+1
   481  00BD  120A  118A  201A  120A  118A  	fcall	___awdiv
   482  00C2  1283               	bcf	3,5	;RP0=0, select bank0
   483  00C3  1303               	bcf	3,6	;RP1=0, select bank0
   484  00C4  0826               	movf	?___awdiv,w
   485  00C5  00B1               	movwf	??_main+2
   486  00C6  0831               	movf	??_main+2,w
   487  00C7  00F7               	movwf	_d
   488                           
   489                           ;Codigo_C.c: 103:         u = PORTA - (c * 100) - (d *10);
   490  00C8  309C               	movlw	156
   491  00C9  00AF               	movwf	??_main
   492  00CA  082F               	movf	??_main,w
   493  00CB  00A0               	movwf	___bmul@multiplicand
   494  00CC  0876               	movf	_c,w
   495  00CD  120A  118A  21AA  120A  118A  	fcall	___bmul
   496  00D2  1283               	bcf	3,5	;RP0=0, select bank0
   497  00D3  1303               	bcf	3,6	;RP1=0, select bank0
   498  00D4  00B0               	movwf	??_main+1
   499  00D5  30F6               	movlw	246
   500  00D6  00B1               	movwf	??_main+2
   501  00D7  0831               	movf	??_main+2,w
   502  00D8  00A0               	movwf	___bmul@multiplicand
   503  00D9  0877               	movf	_d,w
   504  00DA  120A  118A  21AA  120A  118A  	fcall	___bmul
   505  00DF  1283               	bcf	3,5	;RP0=0, select bank0
   506  00E0  1303               	bcf	3,6	;RP1=0, select bank0
   507  00E1  0730               	addwf	??_main+1,w
   508  00E2  0705               	addwf	5,w	;volatile
   509  00E3  00B2               	movwf	??_main+3
   510  00E4  0832               	movf	??_main+3,w
   511  00E5  00F8               	movwf	_u
   512  00E6  2888               	goto	l82
   513  00E7  120A  118A  2812   	ljmp	start
   514  00EA                     __end_of_main:
   515                           
   516                           	psect	text1
   517  0151                     __ptext1:	
   518 ;; *************** function _setup *****************
   519 ;; Defined at:
   520 ;;		line 109 in file "Codigo_C.c"
   521 ;; Parameters:    Size  Location     Type
   522 ;;		None
   523 ;; Auto vars:     Size  Location     Type
   524 ;;		None
   525 ;; Return value:  Size  Location     Type
   526 ;;                  1    wreg      void 
   527 ;; Registers used:
   528 ;;		wreg, status,2
   529 ;; Tracked objects:
   530 ;;		On entry : 0/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   534 ;;      Params:         0       0       0       0       0
   535 ;;      Locals:         0       0       0       0       0
   536 ;;      Temps:          0       1       0       0       0
   537 ;;      Totals:         0       1       0       0       0
   538 ;;Total ram usage:        1 bytes
   539 ;; Hardware stack levels used:    1
   540 ;; Hardware stack levels required when called:    2
   541 ;; This function calls:
   542 ;;		Nothing
   543 ;; This function is called by:
   544 ;;		_main
   545 ;; This function uses a non-reentrant model
   546 ;;
   547                           
   548                           
   549                           ;psect for function _setup
   550  0151                     _setup:
   551  0151                     l978:	
   552                           ;incstack = 0
   553                           ; Regs used in _setup: [wreg+status,2]
   554                           
   555                           
   556                           ;Codigo_C.c: 111:     ANSEL = 0x00;
   557  0151  1683               	bsf	3,5	;RP0=1, select bank3
   558  0152  1703               	bsf	3,6	;RP1=1, select bank3
   559  0153  0188               	clrf	8	;volatile
   560                           
   561                           ;Codigo_C.c: 112:     ANSELH = 0x00;
   562  0154  0189               	clrf	9	;volatile
   563                           
   564                           ;Codigo_C.c: 114:     TRISA = 0x00;
   565  0155  1683               	bsf	3,5	;RP0=1, select bank1
   566  0156  1303               	bcf	3,6	;RP1=0, select bank1
   567  0157  0185               	clrf	5	;volatile
   568  0158                     l980:
   569                           
   570                           ;Codigo_C.c: 115:     TRISB = 0x03;
   571  0158  3003               	movlw	3
   572  0159  0086               	movwf	6	;volatile
   573  015A                     l982:
   574                           
   575                           ;Codigo_C.c: 116:     TRISD = 0x00;
   576  015A  0188               	clrf	8	;volatile
   577  015B                     l984:
   578                           
   579                           ;Codigo_C.c: 117:     TRISE = 0x00;
   580  015B  0189               	clrf	9	;volatile
   581  015C                     l986:
   582                           
   583                           ;Codigo_C.c: 119:     PORTB = 0x00;
   584  015C  1283               	bcf	3,5	;RP0=0, select bank0
   585  015D  1303               	bcf	3,6	;RP1=0, select bank0
   586  015E  0186               	clrf	6	;volatile
   587  015F                     l988:
   588                           
   589                           ;Codigo_C.c: 120:     PORTA = 0x00;
   590  015F  0185               	clrf	5	;volatile
   591  0160                     l990:
   592                           
   593                           ;Codigo_C.c: 121:     PORTD = 0x00;
   594  0160  0188               	clrf	8	;volatile
   595  0161                     l992:
   596                           
   597                           ;Codigo_C.c: 122:     PORTE = 0x00;
   598  0161  0189               	clrf	9	;volatile
   599  0162                     l994:
   600                           
   601                           ;Codigo_C.c: 124:     OPTION_REGbits.nRBPU=0;
   602  0162  1683               	bsf	3,5	;RP0=1, select bank1
   603  0163  1303               	bcf	3,6	;RP1=0, select bank1
   604  0164  1381               	bcf	1,7	;volatile
   605  0165                     l996:
   606                           
   607                           ;Codigo_C.c: 125:     IOCB=0x03;
   608  0165  3003               	movlw	3
   609  0166  0096               	movwf	22	;volatile
   610  0167                     l998:
   611                           
   612                           ;Codigo_C.c: 126:     WPUB=0x03;
   613  0167  3003               	movlw	3
   614  0168  0095               	movwf	21	;volatile
   615  0169                     l1000:
   616                           
   617                           ;Codigo_C.c: 129:     OSCCONbits.IRCF2 =1;
   618  0169  170F               	bsf	15,6	;volatile
   619  016A                     l1002:
   620                           
   621                           ;Codigo_C.c: 130:     OSCCONbits.IRCF1 =1;
   622  016A  168F               	bsf	15,5	;volatile
   623  016B                     l1004:
   624                           
   625                           ;Codigo_C.c: 131:     OSCCONbits.IRCF0 =0;
   626  016B  120F               	bcf	15,4	;volatile
   627  016C                     l1006:
   628                           
   629                           ;Codigo_C.c: 132:     OSCCONbits.SCS =1;
   630  016C  140F               	bsf	15,0	;volatile
   631  016D                     l1008:
   632                           
   633                           ;Codigo_C.c: 135:     OPTION_REGbits.T0CS =0;
   634  016D  1281               	bcf	1,5	;volatile
   635  016E                     l1010:
   636                           
   637                           ;Codigo_C.c: 136:     OPTION_REGbits.PSA =0;
   638  016E  1181               	bcf	1,3	;volatile
   639  016F                     l1012:
   640                           
   641                           ;Codigo_C.c: 137:     OPTION_REGbits.PS2 =1;
   642  016F  1501               	bsf	1,2	;volatile
   643  0170                     l1014:
   644                           
   645                           ;Codigo_C.c: 138:     OPTION_REGbits.PS1 =1;
   646  0170  1481               	bsf	1,1	;volatile
   647  0171                     l1016:
   648                           
   649                           ;Codigo_C.c: 139:     OPTION_REGbits.PS0 =1;
   650  0171  1401               	bsf	1,0	;volatile
   651  0172                     l1018:
   652                           
   653                           ;Codigo_C.c: 140:     TMR0 = 236;
   654  0172  30EC               	movlw	236
   655  0173  1283               	bcf	3,5	;RP0=0, select bank0
   656  0174  1303               	bcf	3,6	;RP1=0, select bank0
   657  0175  0081               	movwf	1	;volatile
   658  0176                     l1020:
   659                           
   660                           ;Codigo_C.c: 143:     INTCONbits.T0IF =0;
   661  0176  110B               	bcf	11,2	;volatile
   662  0177                     l1022:
   663                           
   664                           ;Codigo_C.c: 144:     INTCONbits.T0IE =1;
   665  0177  168B               	bsf	11,5	;volatile
   666  0178                     l1024:
   667                           
   668                           ;Codigo_C.c: 147:     INTCONbits.RBIF =1;
   669  0178  140B               	bsf	11,0	;volatile
   670  0179                     l1026:
   671                           
   672                           ;Codigo_C.c: 148:     INTCONbits.RBIE=1;
   673  0179  158B               	bsf	11,3	;volatile
   674  017A                     l1028:
   675                           
   676                           ;Codigo_C.c: 149:     INTCONbits.GIE=1;
   677  017A  178B               	bsf	11,7	;volatile
   678  017B                     l1030:
   679                           
   680                           ;Codigo_C.c: 151:     i = 4;
   681  017B  3004               	movlw	4
   682  017C  00A0               	movwf	??_setup
   683  017D  0820               	movf	??_setup,w
   684  017E  00F5               	movwf	_i
   685  017F                     l1032:
   686                           
   687                           ;Codigo_C.c: 152:     u = 0;
   688  017F  01F8               	clrf	_u
   689  0180                     l1034:
   690                           
   691                           ;Codigo_C.c: 153:     d = 0;
   692  0180  01F7               	clrf	_d
   693  0181                     l1036:
   694                           
   695                           ;Codigo_C.c: 154:     c = 0;
   696  0181  01F6               	clrf	_c
   697  0182                     l88:
   698  0182  0008               	return
   699  0183                     __end_of_setup:
   700                           
   701                           	psect	text2
   702  0183                     __ptext2:	
   703 ;; *************** function ___wmul *****************
   704 ;; Defined at:
   705 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
   706 ;; Parameters:    Size  Location     Type
   707 ;;  multiplier      2    0[BANK0 ] unsigned int 
   708 ;;  multiplicand    2    2[BANK0 ] unsigned int 
   709 ;; Auto vars:     Size  Location     Type
   710 ;;  product         2    4[BANK0 ] unsigned int 
   711 ;; Return value:  Size  Location     Type
   712 ;;                  2    0[BANK0 ] unsigned int 
   713 ;; Registers used:
   714 ;;		wreg, status,2, status,0
   715 ;; Tracked objects:
   716 ;;		On entry : 0/0
   717 ;;		On exit  : 0/0
   718 ;;		Unchanged: 0/0
   719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   720 ;;      Params:         0       4       0       0       0
   721 ;;      Locals:         0       2       0       0       0
   722 ;;      Temps:          0       0       0       0       0
   723 ;;      Totals:         0       6       0       0       0
   724 ;;Total ram usage:        6 bytes
   725 ;; Hardware stack levels used:    1
   726 ;; Hardware stack levels required when called:    2
   727 ;; This function calls:
   728 ;;		Nothing
   729 ;; This function is called by:
   730 ;;		_main
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           
   735                           ;psect for function ___wmul
   736  0183                     ___wmul:
   737  0183                     l1040:	
   738                           ;incstack = 0
   739                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   740                           
   741  0183  1283               	bcf	3,5	;RP0=0, select bank0
   742  0184  1303               	bcf	3,6	;RP1=0, select bank0
   743  0185  01A4               	clrf	___wmul@product
   744  0186  01A5               	clrf	___wmul@product+1
   745  0187                     l1042:
   746  0187  1C20               	btfss	___wmul@multiplier,0
   747  0188  298A               	goto	u491
   748  0189  298B               	goto	u490
   749  018A                     u491:
   750  018A  2991               	goto	l174
   751  018B                     u490:
   752  018B                     l1044:
   753  018B  0822               	movf	___wmul@multiplicand,w
   754  018C  07A4               	addwf	___wmul@product,f
   755  018D  1803               	skipnc
   756  018E  0AA5               	incf	___wmul@product+1,f
   757  018F  0823               	movf	___wmul@multiplicand+1,w
   758  0190  07A5               	addwf	___wmul@product+1,f
   759  0191                     l174:
   760  0191  3001               	movlw	1
   761  0192                     u505:
   762  0192  1003               	clrc
   763  0193  0DA2               	rlf	___wmul@multiplicand,f
   764  0194  0DA3               	rlf	___wmul@multiplicand+1,f
   765  0195  3EFF               	addlw	-1
   766  0196  1D03               	skipz
   767  0197  2992               	goto	u505
   768  0198                     l1046:
   769  0198  3001               	movlw	1
   770  0199                     u515:
   771  0199  1003               	clrc
   772  019A  0CA1               	rrf	___wmul@multiplier+1,f
   773  019B  0CA0               	rrf	___wmul@multiplier,f
   774  019C  3EFF               	addlw	-1
   775  019D  1D03               	skipz
   776  019E  2999               	goto	u515
   777  019F                     l1048:
   778  019F  0820               	movf	___wmul@multiplier,w
   779  01A0  0421               	iorwf	___wmul@multiplier+1,w
   780  01A1  1D03               	btfss	3,2
   781  01A2  29A4               	goto	u521
   782  01A3  29A5               	goto	u520
   783  01A4                     u521:
   784  01A4  2987               	goto	l1042
   785  01A5                     u520:
   786  01A5                     l1050:
   787  01A5  0825               	movf	___wmul@product+1,w
   788  01A6  00A1               	movwf	?___wmul+1
   789  01A7  0824               	movf	___wmul@product,w
   790  01A8  00A0               	movwf	?___wmul
   791  01A9                     l176:
   792  01A9  0008               	return
   793  01AA                     __end_of___wmul:
   794                           
   795                           	psect	text3
   796  01AA                     __ptext3:	
   797 ;; *************** function ___bmul *****************
   798 ;; Defined at:
   799 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;  multiplier      1    wreg     unsigned char 
   802 ;;  multiplicand    1    0[BANK0 ] unsigned char 
   803 ;; Auto vars:     Size  Location     Type
   804 ;;  multiplier      1    3[BANK0 ] unsigned char 
   805 ;;  product         1    2[BANK0 ] unsigned char 
   806 ;; Return value:  Size  Location     Type
   807 ;;                  1    wreg      unsigned char 
   808 ;; Registers used:
   809 ;;		wreg, status,2, status,0
   810 ;; Tracked objects:
   811 ;;		On entry : 0/0
   812 ;;		On exit  : 0/0
   813 ;;		Unchanged: 0/0
   814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   815 ;;      Params:         0       1       0       0       0
   816 ;;      Locals:         0       2       0       0       0
   817 ;;      Temps:          0       1       0       0       0
   818 ;;      Totals:         0       4       0       0       0
   819 ;;Total ram usage:        4 bytes
   820 ;; Hardware stack levels used:    1
   821 ;; Hardware stack levels required when called:    2
   822 ;; This function calls:
   823 ;;		Nothing
   824 ;; This function is called by:
   825 ;;		_main
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           
   830                           ;psect for function ___bmul
   831  01AA                     ___bmul:
   832                           
   833                           ;incstack = 0
   834                           ; Regs used in ___bmul: [wreg+status,2+status,0]
   835                           ;___bmul@multiplier stored from wreg
   836  01AA  1283               	bcf	3,5	;RP0=0, select bank0
   837  01AB  1303               	bcf	3,6	;RP1=0, select bank0
   838  01AC  00A3               	movwf	___bmul@multiplier
   839  01AD                     l1054:
   840  01AD  01A2               	clrf	___bmul@product
   841  01AE                     l1056:
   842  01AE  1C23               	btfss	___bmul@multiplier,0
   843  01AF  29B1               	goto	u531
   844  01B0  29B2               	goto	u530
   845  01B1                     u531:
   846  01B1  29B6               	goto	l1060
   847  01B2                     u530:
   848  01B2                     l1058:
   849  01B2  0820               	movf	___bmul@multiplicand,w
   850  01B3  00A1               	movwf	??___bmul
   851  01B4  0821               	movf	??___bmul,w
   852  01B5  07A2               	addwf	___bmul@product,f
   853  01B6                     l1060:
   854  01B6  1003               	clrc
   855  01B7  0DA0               	rlf	___bmul@multiplicand,f
   856  01B8                     l1062:
   857  01B8  1003               	clrc
   858  01B9  0CA3               	rrf	___bmul@multiplier,f
   859  01BA  0823               	movf	___bmul@multiplier,w
   860  01BB  1D03               	btfss	3,2
   861  01BC  29BE               	goto	u541
   862  01BD  29BF               	goto	u540
   863  01BE                     u541:
   864  01BE  29AE               	goto	l1056
   865  01BF                     u540:
   866  01BF                     l1064:
   867  01BF  0822               	movf	___bmul@product,w
   868  01C0                     l200:
   869  01C0  0008               	return
   870  01C1                     __end_of___bmul:
   871                           
   872                           	psect	text4
   873  001A                     __ptext4:	
   874 ;; *************** function ___awdiv *****************
   875 ;; Defined at:
   876 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;  divisor         2    6[BANK0 ] int 
   879 ;;  dividend        2    8[BANK0 ] int 
   880 ;; Auto vars:     Size  Location     Type
   881 ;;  quotient        2   13[BANK0 ] int 
   882 ;;  sign            1   12[BANK0 ] unsigned char 
   883 ;;  counter         1   11[BANK0 ] unsigned char 
   884 ;; Return value:  Size  Location     Type
   885 ;;                  2    6[BANK0 ] int 
   886 ;; Registers used:
   887 ;;		wreg, status,2, status,0
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   893 ;;      Params:         0       4       0       0       0
   894 ;;      Locals:         0       4       0       0       0
   895 ;;      Temps:          0       1       0       0       0
   896 ;;      Totals:         0       9       0       0       0
   897 ;;Total ram usage:        9 bytes
   898 ;; Hardware stack levels used:    1
   899 ;; Hardware stack levels required when called:    2
   900 ;; This function calls:
   901 ;;		Nothing
   902 ;; This function is called by:
   903 ;;		_main
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907                           
   908                           ;psect for function ___awdiv
   909  001A                     ___awdiv:
   910  001A                     l888:	
   911                           ;incstack = 0
   912                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   913                           
   914  001A  1283               	bcf	3,5	;RP0=0, select bank0
   915  001B  1303               	bcf	3,6	;RP1=0, select bank0
   916  001C  01AC               	clrf	___awdiv@sign
   917  001D                     l890:
   918  001D  1FA7               	btfss	___awdiv@divisor+1,7
   919  001E  2820               	goto	u311
   920  001F  2821               	goto	u310
   921  0020                     u311:
   922  0020  2828               	goto	l896
   923  0021                     u310:
   924  0021                     l892:
   925  0021  09A6               	comf	___awdiv@divisor,f
   926  0022  09A7               	comf	___awdiv@divisor+1,f
   927  0023  0AA6               	incf	___awdiv@divisor,f
   928  0024  1903               	skipnz
   929  0025  0AA7               	incf	___awdiv@divisor+1,f
   930  0026                     l894:
   931  0026  01AC               	clrf	___awdiv@sign
   932  0027  0AAC               	incf	___awdiv@sign,f
   933  0028                     l896:
   934  0028  1FA9               	btfss	___awdiv@dividend+1,7
   935  0029  282B               	goto	u321
   936  002A  282C               	goto	u320
   937  002B                     u321:
   938  002B  2835               	goto	l902
   939  002C                     u320:
   940  002C                     l898:
   941  002C  09A8               	comf	___awdiv@dividend,f
   942  002D  09A9               	comf	___awdiv@dividend+1,f
   943  002E  0AA8               	incf	___awdiv@dividend,f
   944  002F  1903               	skipnz
   945  0030  0AA9               	incf	___awdiv@dividend+1,f
   946  0031                     l900:
   947  0031  3001               	movlw	1
   948  0032  00AA               	movwf	??___awdiv
   949  0033  082A               	movf	??___awdiv,w
   950  0034  06AC               	xorwf	___awdiv@sign,f
   951  0035                     l902:
   952  0035  01AD               	clrf	___awdiv@quotient
   953  0036  01AE               	clrf	___awdiv@quotient+1
   954  0037                     l904:
   955  0037  0826               	movf	___awdiv@divisor,w
   956  0038  0427               	iorwf	___awdiv@divisor+1,w
   957  0039  1903               	btfsc	3,2
   958  003A  283C               	goto	u331
   959  003B  283D               	goto	u330
   960  003C                     u331:
   961  003C  2874               	goto	l924
   962  003D                     u330:
   963  003D                     l906:
   964  003D  01AB               	clrf	___awdiv@counter
   965  003E  0AAB               	incf	___awdiv@counter,f
   966  003F  284B               	goto	l912
   967  0040                     l908:
   968  0040  3001               	movlw	1
   969  0041                     u345:
   970  0041  1003               	clrc
   971  0042  0DA6               	rlf	___awdiv@divisor,f
   972  0043  0DA7               	rlf	___awdiv@divisor+1,f
   973  0044  3EFF               	addlw	-1
   974  0045  1D03               	skipz
   975  0046  2841               	goto	u345
   976  0047                     l910:
   977  0047  3001               	movlw	1
   978  0048  00AA               	movwf	??___awdiv
   979  0049  082A               	movf	??___awdiv,w
   980  004A  07AB               	addwf	___awdiv@counter,f
   981  004B                     l912:
   982  004B  1FA7               	btfss	___awdiv@divisor+1,7
   983  004C  284E               	goto	u351
   984  004D  284F               	goto	u350
   985  004E                     u351:
   986  004E  2840               	goto	l908
   987  004F                     u350:
   988  004F                     l914:
   989  004F  3001               	movlw	1
   990  0050                     u365:
   991  0050  1003               	clrc
   992  0051  0DAD               	rlf	___awdiv@quotient,f
   993  0052  0DAE               	rlf	___awdiv@quotient+1,f
   994  0053  3EFF               	addlw	-1
   995  0054  1D03               	skipz
   996  0055  2850               	goto	u365
   997  0056  0827               	movf	___awdiv@divisor+1,w
   998  0057  0229               	subwf	___awdiv@dividend+1,w
   999  0058  1D03               	skipz
  1000  0059  285C               	goto	u375
  1001  005A  0826               	movf	___awdiv@divisor,w
  1002  005B  0228               	subwf	___awdiv@dividend,w
  1003  005C                     u375:
  1004  005C  1C03               	skipc
  1005  005D  285F               	goto	u371
  1006  005E  2860               	goto	u370
  1007  005F                     u371:
  1008  005F  2867               	goto	l920
  1009  0060                     u370:
  1010  0060                     l916:
  1011  0060  0826               	movf	___awdiv@divisor,w
  1012  0061  02A8               	subwf	___awdiv@dividend,f
  1013  0062  0827               	movf	___awdiv@divisor+1,w
  1014  0063  1C03               	skipc
  1015  0064  03A9               	decf	___awdiv@dividend+1,f
  1016  0065  02A9               	subwf	___awdiv@dividend+1,f
  1017  0066                     l918:
  1018  0066  142D               	bsf	___awdiv@quotient,0
  1019  0067                     l920:
  1020  0067  3001               	movlw	1
  1021  0068                     u385:
  1022  0068  1003               	clrc
  1023  0069  0CA7               	rrf	___awdiv@divisor+1,f
  1024  006A  0CA6               	rrf	___awdiv@divisor,f
  1025  006B  3EFF               	addlw	-1
  1026  006C  1D03               	skipz
  1027  006D  2868               	goto	u385
  1028  006E                     l922:
  1029  006E  3001               	movlw	1
  1030  006F  02AB               	subwf	___awdiv@counter,f
  1031  0070  1D03               	btfss	3,2
  1032  0071  2873               	goto	u391
  1033  0072  2874               	goto	u390
  1034  0073                     u391:
  1035  0073  284F               	goto	l914
  1036  0074                     u390:
  1037  0074                     l924:
  1038  0074  082C               	movf	___awdiv@sign,w
  1039  0075  1903               	btfsc	3,2
  1040  0076  2878               	goto	u401
  1041  0077  2879               	goto	u400
  1042  0078                     u401:
  1043  0078  287E               	goto	l928
  1044  0079                     u400:
  1045  0079                     l926:
  1046  0079  09AD               	comf	___awdiv@quotient,f
  1047  007A  09AE               	comf	___awdiv@quotient+1,f
  1048  007B  0AAD               	incf	___awdiv@quotient,f
  1049  007C  1903               	skipnz
  1050  007D  0AAE               	incf	___awdiv@quotient+1,f
  1051  007E                     l928:
  1052  007E  082E               	movf	___awdiv@quotient+1,w
  1053  007F  00A7               	movwf	?___awdiv+1
  1054  0080  082D               	movf	___awdiv@quotient,w
  1055  0081  00A6               	movwf	?___awdiv
  1056  0082                     l327:
  1057  0082  0008               	return
  1058  0083                     __end_of___awdiv:
  1059                           
  1060                           	psect	text5
  1061  00EA                     __ptext5:	
  1062 ;; *************** function _isr *****************
  1063 ;; Defined at:
  1064 ;;		line 52 in file "Codigo_C.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;		None
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;		None
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1078 ;;      Params:         0       0       0       0       0
  1079 ;;      Locals:         0       0       0       0       0
  1080 ;;      Temps:          5       0       0       0       0
  1081 ;;      Totals:         5       0       0       0       0
  1082 ;;Total ram usage:        5 bytes
  1083 ;; Hardware stack levels used:    2
  1084 ;; This function calls:
  1085 ;;		Nothing
  1086 ;; This function is called by:
  1087 ;;		Interrupt level 1
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           
  1092                           ;psect for function _isr
  1093  00EA                     _isr:
  1094  00EA                     i1l932:
  1095                           
  1096                           ;Codigo_C.c: 55:     if (T0IF==1){
  1097  00EA  1D0B               	btfss	11,2	;volatile
  1098  00EB  28ED               	goto	u41_21
  1099  00EC  28EE               	goto	u41_20
  1100  00ED                     u41_21:
  1101  00ED  2933               	goto	i1l964
  1102  00EE                     u41_20:
  1103  00EE                     i1l934:
  1104                           
  1105                           ;Codigo_C.c: 56:         PORTD++;
  1106  00EE  3001               	movlw	1
  1107  00EF  00F0               	movwf	??_isr
  1108  00F0  0870               	movf	??_isr,w
  1109  00F1  0788               	addwf	8,f	;volatile
  1110  00F2                     i1l936:
  1111                           
  1112                           ;Codigo_C.c: 57:         PORTB =0;
  1113  00F2  0186               	clrf	6	;volatile
  1114  00F3                     i1l938:
  1115                           
  1116                           ;Codigo_C.c: 59:         if (i==4){
  1117  00F3  3004               	movlw	4
  1118  00F4  0675               	xorwf	_i,w
  1119  00F5  1D03               	btfss	3,2
  1120  00F6  28F8               	goto	u42_21
  1121  00F7  28F9               	goto	u42_20
  1122  00F8                     u42_21:
  1123  00F8  2904               	goto	i1l944
  1124  00F9                     u42_20:
  1125  00F9                     i1l940:
  1126                           
  1127                           ;Codigo_C.c: 61:             RB7 = 1;
  1128  00F9  1786               	bsf	6,7	;volatile
  1129  00FA                     i1l942:
  1130                           
  1131                           ;Codigo_C.c: 62:             PORTC = (tabla[c]);
  1132  00FA  0876               	movf	_c,w
  1133  00FB  3E01               	addlw	low ((_tabla-__stringbase)| (0+32768))
  1134  00FC  0084               	movwf	4
  1135  00FD  120A  118A  21C1  120A  118A  	fcall	stringdir
  1136  0102  0087               	movwf	7	;volatile
  1137                           
  1138                           ;Codigo_C.c: 63:         }
  1139  0103  2925               	goto	i1l956
  1140  0104                     i1l944:
  1141  0104  3003               	movlw	3
  1142  0105  0675               	xorwf	_i,w
  1143  0106  1D03               	btfss	3,2
  1144  0107  2909               	goto	u43_21
  1145  0108  290A               	goto	u43_20
  1146  0109                     u43_21:
  1147  0109  2915               	goto	i1l950
  1148  010A                     u43_20:
  1149  010A                     i1l946:
  1150                           
  1151                           ;Codigo_C.c: 65:             RB6 = 1;
  1152  010A  1706               	bsf	6,6	;volatile
  1153  010B                     i1l948:
  1154                           
  1155                           ;Codigo_C.c: 66:             PORTC = (tabla[d]);
  1156  010B  0877               	movf	_d,w
  1157  010C  3E01               	addlw	low ((_tabla-__stringbase)| (0+32768))
  1158  010D  0084               	movwf	4
  1159  010E  120A  118A  21C1  120A  118A  	fcall	stringdir
  1160  0113  0087               	movwf	7	;volatile
  1161                           
  1162                           ;Codigo_C.c: 67:         }
  1163  0114  2925               	goto	i1l956
  1164  0115                     i1l950:
  1165  0115  3002               	movlw	2
  1166  0116  0675               	xorwf	_i,w
  1167  0117  1D03               	btfss	3,2
  1168  0118  291A               	goto	u44_21
  1169  0119  291B               	goto	u44_20
  1170  011A                     u44_21:
  1171  011A  2925               	goto	i1l956
  1172  011B                     u44_20:
  1173  011B                     i1l952:
  1174                           
  1175                           ;Codigo_C.c: 69:             RB5 =1;
  1176  011B  1686               	bsf	6,5	;volatile
  1177  011C                     i1l954:
  1178                           
  1179                           ;Codigo_C.c: 70:             PORTC =(tabla[u]);
  1180  011C  0878               	movf	_u,w
  1181  011D  3E01               	addlw	low ((_tabla-__stringbase)| (0+32768))
  1182  011E  0084               	movwf	4
  1183  011F  120A  118A  21C1  120A  118A  	fcall	stringdir
  1184  0124  0087               	movwf	7	;volatile
  1185  0125                     i1l956:
  1186                           
  1187                           ;Codigo_C.c: 73:         i--;
  1188  0125  3001               	movlw	1
  1189  0126  02F5               	subwf	_i,f
  1190  0127                     i1l958:
  1191                           
  1192                           ;Codigo_C.c: 74:         if(i==1){
  1193  0127  0375               	decf	_i,w
  1194  0128  1D03               	btfss	3,2
  1195  0129  292B               	goto	u45_21
  1196  012A  292C               	goto	u45_20
  1197  012B                     u45_21:
  1198  012B  2930               	goto	i1l962
  1199  012C                     u45_20:
  1200  012C                     i1l960:
  1201                           
  1202                           ;Codigo_C.c: 75:             i=4;
  1203  012C  3004               	movlw	4
  1204  012D  00F0               	movwf	??_isr
  1205  012E  0870               	movf	??_isr,w
  1206  012F  00F5               	movwf	_i
  1207  0130                     i1l962:
  1208                           
  1209                           ;Codigo_C.c: 78:         INTCONbits.T0IF = 0;
  1210  0130  110B               	bcf	11,2	;volatile
  1211                           
  1212                           ;Codigo_C.c: 79:         TMR0= 236;
  1213  0131  30EC               	movlw	236
  1214  0132  0081               	movwf	1	;volatile
  1215  0133                     i1l964:
  1216                           
  1217                           ;Codigo_C.c: 82:     if (RBIF==1){
  1218  0133  1C0B               	btfss	11,0	;volatile
  1219  0134  2936               	goto	u46_21
  1220  0135  2937               	goto	u46_20
  1221  0136                     u46_21:
  1222  0136  2946               	goto	i1l77
  1223  0137                     u46_20:
  1224  0137                     i1l966:
  1225                           
  1226                           ;Codigo_C.c: 84:         if (RB0==0){
  1227  0137  1806               	btfsc	6,0	;volatile
  1228  0138  293A               	goto	u47_21
  1229  0139  293B               	goto	u47_20
  1230  013A                     u47_21:
  1231  013A  293F               	goto	i1l970
  1232  013B                     u47_20:
  1233  013B                     i1l968:
  1234                           
  1235                           ;Codigo_C.c: 85:             PORTA++;
  1236  013B  3001               	movlw	1
  1237  013C  00F0               	movwf	??_isr
  1238  013D  0870               	movf	??_isr,w
  1239  013E  0785               	addwf	5,f	;volatile
  1240  013F                     i1l970:
  1241                           
  1242                           ;Codigo_C.c: 87:         if (RB1==0){
  1243  013F  1886               	btfsc	6,1	;volatile
  1244  0140  2942               	goto	u48_21
  1245  0141  2943               	goto	u48_20
  1246  0142                     u48_21:
  1247  0142  2945               	goto	i1l974
  1248  0143                     u48_20:
  1249  0143                     i1l972:
  1250                           
  1251                           ;Codigo_C.c: 88:             PORTA--;
  1252  0143  3001               	movlw	1
  1253  0144  0285               	subwf	5,f	;volatile
  1254  0145                     i1l974:
  1255                           
  1256                           ;Codigo_C.c: 90:         INTCONbits.RBIF=0;
  1257  0145  100B               	bcf	11,0	;volatile
  1258  0146                     i1l77:
  1259  0146  0874               	movf	??_isr+4,w
  1260  0147  00FF               	movwf	btemp+1
  1261  0148  0873               	movf	??_isr+3,w
  1262  0149  008A               	movwf	10
  1263  014A  0872               	movf	??_isr+2,w
  1264  014B  0084               	movwf	4
  1265  014C  0E71               	swapf	??_isr+1,w
  1266  014D  0083               	movwf	3
  1267  014E  0EFE               	swapf	btemp,f
  1268  014F  0E7E               	swapf	btemp,w
  1269  0150  0009               	retfie
  1270  0151                     __end_of_isr:
  1271  007E                     btemp	set	126	;btemp
  1272  007E                     wtemp0	set	126
  1273                           
  1274                           	psect	intentry
  1275  0004                     __pintentry:	
  1276                           ;incstack = 0
  1277                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath]
  1278                           
  1279  0004                     interrupt_function:
  1280  007E                     saved_w	set	btemp
  1281  0004  00FE               	movwf	btemp
  1282  0005  0E03               	swapf	3,w
  1283  0006  00F1               	movwf	??_isr+1
  1284  0007  0804               	movf	4,w
  1285  0008  00F2               	movwf	??_isr+2
  1286  0009  080A               	movf	10,w
  1287  000A  00F3               	movwf	??_isr+3
  1288  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1289  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1290  000D  087F               	movf	btemp+1,w
  1291  000E  00F4               	movwf	??_isr+4
  1292  000F  120A  118A  28EA   	ljmp	_isr
  1293                           
  1294                           	psect	config
  1295                           
  1296                           ;Config register CONFIG1 @ 0x2007
  1297                           ;	Oscillator Selection bits
  1298                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1299                           ;	Watchdog Timer Enable bit
  1300                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1301                           ;	Power-up Timer Enable bit
  1302                           ;	PWRTE = OFF, PWRT disabled
  1303                           ;	RE3/MCLR pin function select bit
  1304                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1305                           ;	Code Protection bit
  1306                           ;	CP = OFF, Program memory code protection is disabled
  1307                           ;	Data Code Protection bit
  1308                           ;	CPD = OFF, Data memory code protection is disabled
  1309                           ;	Brown Out Reset Selection bits
  1310                           ;	BOREN = OFF, BOR disabled
  1311                           ;	Internal External Switchover bit
  1312                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1313                           ;	Fail-Safe Clock Monitor Enabled bit
  1314                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1315                           ;	Low Voltage Programming Enable bit
  1316                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1317                           ;	In-Circuit Debugger Mode bit
  1318                           ;	DEBUG = 0x1, unprogrammed default
  1319  2007                     	org	8199
  1320  2007  30D4               	dw	12500
  1321                           
  1322                           ;Config register CONFIG2 @ 0x2008
  1323                           ;	Brown-out Reset Selection bit
  1324                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1325                           ;	Flash Program Memory Self Write Enable bits
  1326                           ;	WRT = OFF, Write protection off
  1327  2008                     	org	8200
  1328  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    9
    Data        0
    BSS         1
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     19      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1236
                                             15 BANK0      4     4      0
                            ___awdiv
                             ___bmul
                             ___wmul
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     316
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___wmul (ARG)
   ___bmul
   ___wmul
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      13       5       23.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1D      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Apr 18 18:57:36 2021

                      _c 0076                        _d 0077                        _f 0079  
                      _i 0075                        _u 0078                        pc 0002  
         ___bmul@product 0022                       l82 0088                       l88 0182  
           ___awdiv@sign 002C                       fsr 0004      ___wmul@multiplicand 0022  
                    l200 01C0                      l174 0191                      l327 0082  
                    l176 01A9                      l900 0031                      l910 0047  
                    l902 0035                      l920 0067                      l912 004B  
                    l904 0037                      l922 006E                      l914 004F  
                    l906 003D                      l916 0060                      l908 0040  
                    l924 0074                      l926 0079                      l918 0066  
                    l928 007E                      l890 001D                      l892 0021  
                    l980 0158                      l894 0026                      l990 0160  
                    l982 015A                      l896 0028                      l888 001A  
                    l992 0161                      l984 015B                      l898 002C  
                    l994 0162                      l986 015C                      l978 0151  
                    l996 0165                      l988 015F                      l998 0167  
                    _RB0 0030                      _RB1 0031                      _RB5 0035  
                    _RB6 0036                      _RB7 0037                      u310 0021  
                    u311 0020                      u400 0079                      u320 002C  
                    u401 0078                      u321 002B                      u330 003D  
                    u331 003C                      u350 004F                      u351 004E  
                    u520 01A5                      u345 0041                      u521 01A4  
                    u505 0192                      u370 0060                      u530 01B2  
                    u371 005F                      u531 01B1                      u515 0199  
                    u540 01BF                      u365 0050                      u541 01BE  
                    u390 0074                      u391 0073                      u375 005C  
                    u385 0068                      u490 018B                      u491 018A  
                    _isr 00EA                      fsr0 0004                     l1000 0169  
                   l1010 016E                     l1002 016A                     l1020 0176  
                   l1012 016F                     l1004 016B                     l1030 017B  
                   l1022 0177                     l1014 0170                     l1006 016C  
                   l1040 0183                     l1032 017F                     l1024 0178  
                   l1016 0171                     l1008 016D                     l1050 01A5  
                   l1042 0187                     l1034 0180                     l1026 0179  
                   l1018 0172                     l1060 01B6                     l1044 018B  
                   l1036 0181                     l1028 017A                     l1062 01B8  
                   l1054 01AD                     l1046 0198                     l1064 01BF  
                   l1056 01AE                     l1048 019F                     l1058 01B2  
                   l1068 0083                     ?_isr 0070                     _T0IF 005A  
                   _IOCB 0096                     _RBIF 0058                     i1l77 0146  
                   _TMR0 0001                     _WPUB 0095                     _main 0083  
                   btemp 007E                     start 0012        ___bmul@multiplier 0023  
                  ??_isr 0070                    ?_main 0070          __end_of___awdiv 0083  
                  _ANSEL 0188          ___awdiv@divisor 0026                    i1l940 00F9  
                  i1l932 00EA                    i1l950 0115                    i1l942 00FA  
                  i1l934 00EE                    i1l960 012C                    i1l952 011B  
                  i1l944 0104                    i1l936 00F2                    i1l970 013F  
                  i1l962 0130                    i1l954 011C                    i1l946 010A  
                  i1l938 00F3                    i1l972 0143                    i1l948 010B  
                  i1l956 0125                    i1l964 0133                    i1l974 0145  
                  i1l966 0137                    i1l958 0127                    i1l968 013B  
        ___awdiv@counter 002B                    u41_20 00EE                    u41_21 00ED  
                  u42_20 00F9                    u42_21 00F8                    u43_20 010A  
                  u43_21 0109                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  u44_20 011B                    u44_21 011A                    u45_20 012C  
                  u45_21 012B                    u46_20 0137                    u46_21 0136  
                  u47_20 013B                    u47_21 013A                    u48_20 0143  
                  u48_21 0142                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088                    _TRISE 0089                    _tabla 01C7  
                  _setup 0151                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0015             __end_of_main 00EA  
                 ??_main 002F         ___awdiv@dividend 0028                   ?_setup 0070  
                 _ANSELH 0189                   ___bmul 01AA                   ___wmul 0183  
              ??___awdiv 002A         ___awdiv@quotient 002D                   saved_w 007E  
__end_of__initialization 0016      ___bmul@multiplicand 0020           __pcstackCOMMON 0070  
          __end_of_tabla 01D0            __end_of_setup 0183           _OPTION_REGbits 0081  
                ??_setup 0020               __pnvCOMMON 0075               __pmaintext 0083  
                ?___bmul 0020                  ?___wmul 0020               __pintentry 0004  
             __stringtab 01C1          __size_of___bmul 0017                  ___awdiv 001A  
        __size_of___wmul 0027                  __ptext1 0151                  __ptext2 0183  
                __ptext3 01AA                  __ptext4 001A                  __ptext5 00EA  
           __size_of_isr 0067     end_of_initialization 0016           __end_of___bmul 01C1  
         __end_of___wmul 01AA      start_initialization 0015              __end_of_isr 0151  
               ??___bmul 0021                 ??___wmul 0024              __pbssCOMMON 0079  
              ___latbits 0002            __pcstackBANK0 0020                 ?___awdiv 0026  
              __pstrings 01C1           __size_of_setup 0032        interrupt_function 0004  
         ___wmul@product 0024              __stringbase 01C6        ___wmul@multiplier 0020  
       __size_of___awdiv 0069       __end_of__stringtab 01C7            __size_of_main 0067  
             _INTCONbits 000B                 intlevel1 0000                stringcode 01C1  
             _OSCCONbits 008F                 stringdir 01C1                 stringtab 01C1  
