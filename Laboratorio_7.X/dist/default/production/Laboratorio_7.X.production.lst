

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Apr 24 11:01:20 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210                           
   211                           	psect	strings
   212  01C1                     __pstrings:
   213  01C1                     stringtab:
   214  01C1                     __stringtab:
   215  01C1                     stringcode:	
   216                           ;	String table - string pointers are 1 byte each
   217                           
   218  01C1                     stringdir:
   219  01C1  3001               	movlw	high stringdir
   220  01C2  008A               	movwf	10
   221  01C3  0804               	movf	4,w
   222  01C4  0A84               	incf	4,f
   223  01C5  0782               	addwf	2,f
   224  01C6                     __stringbase:
   225  01C6  3400               	retlw	0
   226  01C7                     __end_of__stringtab:
   227  01C7                     _tabla:
   228  01C7  343F               	retlw	63
   229  01C8  3406               	retlw	6
   230  01C9  345B               	retlw	91
   231  01CA  344F               	retlw	79
   232  01CB  3466               	retlw	102
   233  01CC  346D               	retlw	109
   234  01CD  347D               	retlw	125
   235  01CE  3407               	retlw	7
   236  01CF  347F               	retlw	127
   237  01D0                     __end_of_tabla:
   238                           
   239                           	psect	nvCOMMON
   240  0075                     __pnvCOMMON:
   241  0075                     _i:
   242  0075                     	ds	1
   243  0076                     _c:
   244  0076                     	ds	1
   245  0077                     _d:
   246  0077                     	ds	1
   247  0078                     _u:
   248  0078                     	ds	1
   249  0005                     _PORTA	set	5
   250  0001                     _TMR0	set	1
   251  000B                     _INTCONbits	set	11
   252  0007                     _PORTC	set	7
   253  0006                     _PORTB	set	6
   254  0008                     _PORTD	set	8
   255  0031                     _RB1	set	49
   256  0030                     _RB0	set	48
   257  0058                     _RBIF	set	88
   258  0035                     _RB5	set	53
   259  0036                     _RB6	set	54
   260  0037                     _RB7	set	55
   261  005A                     _T0IF	set	90
   262  008F                     _OSCCONbits	set	143
   263  0095                     _WPUB	set	149
   264  0096                     _IOCB	set	150
   265  0081                     _OPTION_REGbits	set	129
   266  0087                     _TRISC	set	135
   267  0088                     _TRISD	set	136
   268  0086                     _TRISB	set	134
   269  0085                     _TRISA	set	133
   270  0189                     _ANSELH	set	393
   271  0188                     _ANSEL	set	392
   272                           
   273                           	psect	cinit
   274  0015                     start_initialization:	
   275                           ; #config settings
   276                           
   277  0015                     __initialization:
   278                           
   279                           ; Clear objects allocated to COMMON
   280  0015  01F9               	clrf	__pbssCOMMON& (0+127)
   281  0016                     end_of_initialization:	
   282                           ;End of C runtime variable initialization code
   283                           
   284  0016                     __end_of__initialization:
   285  0016  0183               	clrf	3
   286  0017  120A  118A  2883   	ljmp	_main	;jump to C main() function
   287                           
   288                           	psect	bssCOMMON
   289  0079                     __pbssCOMMON:
   290  0079                     _f:
   291  0079                     	ds	1
   292                           
   293                           	psect	cstackCOMMON
   294  0070                     __pcstackCOMMON:
   295  0070                     ?_setup:
   296  0070                     ?_isr:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ??_isr:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     ?_main:	
   303                           ; 1 bytes @ 0x0
   304                           
   305                           
   306                           ; 1 bytes @ 0x0
   307  0070                     	ds	5
   308                           
   309                           	psect	cstackBANK0
   310  0020                     __pcstackBANK0:
   311  0020                     ??_setup:
   312  0020                     ?___bmul:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0020                     ?___wmul:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0020                     ___bmul@multiplicand:	
   319                           ; 2 bytes @ 0x0
   320                           
   321  0020                     ___wmul@multiplier:	
   322                           ; 1 bytes @ 0x0
   323                           
   324                           
   325                           ; 2 bytes @ 0x0
   326  0020                     	ds	1
   327  0021                     ??___bmul:
   328                           
   329                           ; 1 bytes @ 0x1
   330  0021                     	ds	1
   331  0022                     ___bmul@product:
   332  0022                     ___wmul@multiplicand:	
   333                           ; 1 bytes @ 0x2
   334                           
   335                           
   336                           ; 2 bytes @ 0x2
   337  0022                     	ds	1
   338  0023                     ___bmul@multiplier:
   339                           
   340                           ; 1 bytes @ 0x3
   341  0023                     	ds	1
   342  0024                     ??___wmul:
   343  0024                     ___wmul@product:	
   344                           ; 1 bytes @ 0x4
   345                           
   346                           
   347                           ; 2 bytes @ 0x4
   348  0024                     	ds	2
   349  0026                     ?___awdiv:
   350  0026                     ___awdiv@divisor:	
   351                           ; 2 bytes @ 0x6
   352                           
   353                           
   354                           ; 2 bytes @ 0x6
   355  0026                     	ds	2
   356  0028                     ___awdiv@dividend:
   357                           
   358                           ; 2 bytes @ 0x8
   359  0028                     	ds	2
   360  002A                     ??___awdiv:
   361                           
   362                           ; 1 bytes @ 0xA
   363  002A                     	ds	1
   364  002B                     ___awdiv@counter:
   365                           
   366                           ; 1 bytes @ 0xB
   367  002B                     	ds	1
   368  002C                     ___awdiv@sign:
   369                           
   370                           ; 1 bytes @ 0xC
   371  002C                     	ds	1
   372  002D                     ___awdiv@quotient:
   373                           
   374                           ; 2 bytes @ 0xD
   375  002D                     	ds	2
   376  002F                     ??_main:
   377                           
   378                           ; 1 bytes @ 0xF
   379  002F                     	ds	4
   380                           
   381                           	psect	maintext
   382  0083                     __pmaintext:	
   383 ;;
   384 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   385 ;;
   386 ;; *************** function _main *****************
   387 ;; Defined at:
   388 ;;		line 97 in file "Codigo_C.c"
   389 ;; Parameters:    Size  Location     Type
   390 ;;		None
   391 ;; Auto vars:     Size  Location     Type
   392 ;;		None
   393 ;; Return value:  Size  Location     Type
   394 ;;                  1    wreg      void 
   395 ;; Registers used:
   396 ;;		wreg, status,2, status,0, pclath, cstack
   397 ;; Tracked objects:
   398 ;;		On entry : B00/0
   399 ;;		On exit  : 0/0
   400 ;;		Unchanged: 0/0
   401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   402 ;;      Params:         0       0       0       0       0
   403 ;;      Locals:         0       0       0       0       0
   404 ;;      Temps:          0       4       0       0       0
   405 ;;      Totals:         0       4       0       0       0
   406 ;;Total ram usage:        4 bytes
   407 ;; Hardware stack levels required when called:    3
   408 ;; This function calls:
   409 ;;		___awdiv
   410 ;;		___bmul
   411 ;;		___wmul
   412 ;;		_setup
   413 ;; This function is called by:
   414 ;;		Startup code after reset
   415 ;; This function uses a non-reentrant model
   416 ;;
   417                           
   418                           
   419                           ;psect for function _main
   420  0083                     _main:
   421  0083                     l1066:	
   422                           ;incstack = 0
   423                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   424                           
   425                           
   426                           ;Codigo_C.c: 98:     setup();
   427  0083  120A  118A  2151  120A  118A  	fcall	_setup
   428  0088                     l80:	
   429                           ;Codigo_C.c: 101:     while(1){
   430                           
   431                           
   432                           ;Codigo_C.c: 103:         c = PORTA/100;
   433  0088  3064               	movlw	100
   434  0089  1283               	bcf	3,5	;RP0=0, select bank0
   435  008A  1303               	bcf	3,6	;RP1=0, select bank0
   436  008B  00A6               	movwf	___awdiv@divisor
   437  008C  3000               	movlw	0
   438  008D  00A7               	movwf	___awdiv@divisor+1
   439  008E  0805               	movf	5,w	;volatile
   440  008F  00AF               	movwf	??_main
   441  0090  01B0               	clrf	??_main+1
   442  0091  082F               	movf	??_main,w
   443  0092  00A8               	movwf	___awdiv@dividend
   444  0093  0830               	movf	??_main+1,w
   445  0094  00A9               	movwf	___awdiv@dividend+1
   446  0095  120A  118A  201A  120A  118A  	fcall	___awdiv
   447  009A  1283               	bcf	3,5	;RP0=0, select bank0
   448  009B  1303               	bcf	3,6	;RP1=0, select bank0
   449  009C  0826               	movf	?___awdiv,w
   450  009D  00B1               	movwf	??_main+2
   451  009E  0831               	movf	??_main+2,w
   452  009F  00F6               	movwf	_c
   453                           
   454                           ;Codigo_C.c: 104:         d = (PORTA -(c * 100))/10;
   455  00A0  300A               	movlw	10
   456  00A1  00A6               	movwf	___awdiv@divisor
   457  00A2  3000               	movlw	0
   458  00A3  00A7               	movwf	___awdiv@divisor+1
   459  00A4  0876               	movf	_c,w
   460  00A5  00AF               	movwf	??_main
   461  00A6  01B0               	clrf	??_main+1
   462  00A7  082F               	movf	??_main,w
   463  00A8  00A0               	movwf	___wmul@multiplier
   464  00A9  0830               	movf	??_main+1,w
   465  00AA  00A1               	movwf	___wmul@multiplier+1
   466  00AB  309C               	movlw	156
   467  00AC  00A2               	movwf	___wmul@multiplicand
   468  00AD  30FF               	movlw	255
   469  00AE  00A3               	movwf	___wmul@multiplicand+1
   470  00AF  120A  118A  2183  120A  118A  	fcall	___wmul
   471  00B4  1283               	bcf	3,5	;RP0=0, select bank0
   472  00B5  1303               	bcf	3,6	;RP1=0, select bank0
   473  00B6  0805               	movf	5,w	;volatile
   474  00B7  0720               	addwf	?___wmul,w
   475  00B8  00A8               	movwf	___awdiv@dividend
   476  00B9  0821               	movf	?___wmul+1,w
   477  00BA  1803               	skipnc
   478  00BB  0A21               	incf	?___wmul+1,w
   479  00BC  00A9               	movwf	___awdiv@dividend+1
   480  00BD  120A  118A  201A  120A  118A  	fcall	___awdiv
   481  00C2  1283               	bcf	3,5	;RP0=0, select bank0
   482  00C3  1303               	bcf	3,6	;RP1=0, select bank0
   483  00C4  0826               	movf	?___awdiv,w
   484  00C5  00B1               	movwf	??_main+2
   485  00C6  0831               	movf	??_main+2,w
   486  00C7  00F7               	movwf	_d
   487                           
   488                           ;Codigo_C.c: 105:         u = PORTA - (c * 100) - (d *10);
   489  00C8  309C               	movlw	156
   490  00C9  00AF               	movwf	??_main
   491  00CA  082F               	movf	??_main,w
   492  00CB  00A0               	movwf	___bmul@multiplicand
   493  00CC  0876               	movf	_c,w
   494  00CD  120A  118A  21AA  120A  118A  	fcall	___bmul
   495  00D2  1283               	bcf	3,5	;RP0=0, select bank0
   496  00D3  1303               	bcf	3,6	;RP1=0, select bank0
   497  00D4  00B0               	movwf	??_main+1
   498  00D5  30F6               	movlw	246
   499  00D6  00B1               	movwf	??_main+2
   500  00D7  0831               	movf	??_main+2,w
   501  00D8  00A0               	movwf	___bmul@multiplicand
   502  00D9  0877               	movf	_d,w
   503  00DA  120A  118A  21AA  120A  118A  	fcall	___bmul
   504  00DF  1283               	bcf	3,5	;RP0=0, select bank0
   505  00E0  1303               	bcf	3,6	;RP1=0, select bank0
   506  00E1  0730               	addwf	??_main+1,w
   507  00E2  0705               	addwf	5,w	;volatile
   508  00E3  00B2               	movwf	??_main+3
   509  00E4  0832               	movf	??_main+3,w
   510  00E5  00F8               	movwf	_u
   511  00E6  2888               	goto	l80
   512  00E7  120A  118A  2812   	ljmp	start
   513  00EA                     __end_of_main:
   514                           
   515                           	psect	text1
   516  0151                     __ptext1:	
   517 ;; *************** function _setup *****************
   518 ;; Defined at:
   519 ;;		line 111 in file "Codigo_C.c"
   520 ;; Parameters:    Size  Location     Type
   521 ;;		None
   522 ;; Auto vars:     Size  Location     Type
   523 ;;		None
   524 ;; Return value:  Size  Location     Type
   525 ;;                  1    wreg      void 
   526 ;; Registers used:
   527 ;;		wreg, status,2
   528 ;; Tracked objects:
   529 ;;		On entry : 0/0
   530 ;;		On exit  : 0/0
   531 ;;		Unchanged: 0/0
   532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   533 ;;      Params:         0       0       0       0       0
   534 ;;      Locals:         0       0       0       0       0
   535 ;;      Temps:          0       1       0       0       0
   536 ;;      Totals:         0       1       0       0       0
   537 ;;Total ram usage:        1 bytes
   538 ;; Hardware stack levels used:    1
   539 ;; Hardware stack levels required when called:    2
   540 ;; This function calls:
   541 ;;		Nothing
   542 ;; This function is called by:
   543 ;;		_main
   544 ;; This function uses a non-reentrant model
   545 ;;
   546                           
   547                           
   548                           ;psect for function _setup
   549  0151                     _setup:
   550  0151                     l976:	
   551                           ;incstack = 0
   552                           ; Regs used in _setup: [wreg+status,2]
   553                           
   554                           
   555                           ;Codigo_C.c: 113:     ANSEL = 0x00;
   556  0151  1683               	bsf	3,5	;RP0=1, select bank3
   557  0152  1703               	bsf	3,6	;RP1=1, select bank3
   558  0153  0188               	clrf	8	;volatile
   559                           
   560                           ;Codigo_C.c: 114:     ANSELH = 0x00;
   561  0154  0189               	clrf	9	;volatile
   562                           
   563                           ;Codigo_C.c: 116:     TRISA = 0x00;
   564  0155  1683               	bsf	3,5	;RP0=1, select bank1
   565  0156  1303               	bcf	3,6	;RP1=0, select bank1
   566  0157  0185               	clrf	5	;volatile
   567  0158                     l978:
   568                           
   569                           ;Codigo_C.c: 117:     TRISB = 0x03;
   570  0158  3003               	movlw	3
   571  0159  0086               	movwf	6	;volatile
   572  015A                     l980:
   573                           
   574                           ;Codigo_C.c: 118:     TRISD = 0x00;
   575  015A  0188               	clrf	8	;volatile
   576  015B                     l982:
   577                           
   578                           ;Codigo_C.c: 119:     TRISC = 0x00;
   579  015B  0187               	clrf	7	;volatile
   580  015C                     l984:
   581                           
   582                           ;Codigo_C.c: 121:     PORTB = 0x00;
   583  015C  1283               	bcf	3,5	;RP0=0, select bank0
   584  015D  1303               	bcf	3,6	;RP1=0, select bank0
   585  015E  0186               	clrf	6	;volatile
   586  015F                     l986:
   587                           
   588                           ;Codigo_C.c: 122:     PORTA = 0x00;
   589  015F  0185               	clrf	5	;volatile
   590  0160                     l988:
   591                           
   592                           ;Codigo_C.c: 123:     PORTD = 0x00;
   593  0160  0188               	clrf	8	;volatile
   594  0161                     l990:
   595                           
   596                           ;Codigo_C.c: 124:     PORTC = 0x00;
   597  0161  0187               	clrf	7	;volatile
   598  0162                     l992:
   599                           
   600                           ;Codigo_C.c: 126:     OPTION_REGbits.nRBPU=0;
   601  0162  1683               	bsf	3,5	;RP0=1, select bank1
   602  0163  1303               	bcf	3,6	;RP1=0, select bank1
   603  0164  1381               	bcf	1,7	;volatile
   604  0165                     l994:
   605                           
   606                           ;Codigo_C.c: 127:     IOCB=0x03;
   607  0165  3003               	movlw	3
   608  0166  0096               	movwf	22	;volatile
   609  0167                     l996:
   610                           
   611                           ;Codigo_C.c: 128:     WPUB=0x03;
   612  0167  3003               	movlw	3
   613  0168  0095               	movwf	21	;volatile
   614  0169                     l998:
   615                           
   616                           ;Codigo_C.c: 131:     OSCCONbits.IRCF2 =1;
   617  0169  170F               	bsf	15,6	;volatile
   618  016A                     l1000:
   619                           
   620                           ;Codigo_C.c: 132:     OSCCONbits.IRCF1 =1;
   621  016A  168F               	bsf	15,5	;volatile
   622  016B                     l1002:
   623                           
   624                           ;Codigo_C.c: 133:     OSCCONbits.IRCF0 =0;
   625  016B  120F               	bcf	15,4	;volatile
   626  016C                     l1004:
   627                           
   628                           ;Codigo_C.c: 134:     OSCCONbits.SCS =1;
   629  016C  140F               	bsf	15,0	;volatile
   630  016D                     l1006:
   631                           
   632                           ;Codigo_C.c: 137:     OPTION_REGbits.T0CS =0;
   633  016D  1281               	bcf	1,5	;volatile
   634  016E                     l1008:
   635                           
   636                           ;Codigo_C.c: 138:     OPTION_REGbits.PSA =0;
   637  016E  1181               	bcf	1,3	;volatile
   638  016F                     l1010:
   639                           
   640                           ;Codigo_C.c: 139:     OPTION_REGbits.PS2 =1;
   641  016F  1501               	bsf	1,2	;volatile
   642  0170                     l1012:
   643                           
   644                           ;Codigo_C.c: 140:     OPTION_REGbits.PS1 =1;
   645  0170  1481               	bsf	1,1	;volatile
   646  0171                     l1014:
   647                           
   648                           ;Codigo_C.c: 141:     OPTION_REGbits.PS0 =1;
   649  0171  1401               	bsf	1,0	;volatile
   650  0172                     l1016:
   651                           
   652                           ;Codigo_C.c: 142:     TMR0 = 236;
   653  0172  30EC               	movlw	236
   654  0173  1283               	bcf	3,5	;RP0=0, select bank0
   655  0174  1303               	bcf	3,6	;RP1=0, select bank0
   656  0175  0081               	movwf	1	;volatile
   657  0176                     l1018:
   658                           
   659                           ;Codigo_C.c: 145:     INTCONbits.T0IF =0;
   660  0176  110B               	bcf	11,2	;volatile
   661  0177                     l1020:
   662                           
   663                           ;Codigo_C.c: 146:     INTCONbits.T0IE =1;
   664  0177  168B               	bsf	11,5	;volatile
   665  0178                     l1022:
   666                           
   667                           ;Codigo_C.c: 149:     INTCONbits.RBIF =1;
   668  0178  140B               	bsf	11,0	;volatile
   669  0179                     l1024:
   670                           
   671                           ;Codigo_C.c: 150:     INTCONbits.RBIE=1;
   672  0179  158B               	bsf	11,3	;volatile
   673  017A                     l1026:
   674                           
   675                           ;Codigo_C.c: 151:     INTCONbits.GIE=1;
   676  017A  178B               	bsf	11,7	;volatile
   677  017B                     l1028:
   678                           
   679                           ;Codigo_C.c: 153:     i = 4;
   680  017B  3004               	movlw	4
   681  017C  00A0               	movwf	??_setup
   682  017D  0820               	movf	??_setup,w
   683  017E  00F5               	movwf	_i
   684  017F                     l1030:
   685                           
   686                           ;Codigo_C.c: 154:     u = 0;
   687  017F  01F8               	clrf	_u
   688  0180                     l1032:
   689                           
   690                           ;Codigo_C.c: 155:     d = 0;
   691  0180  01F7               	clrf	_d
   692  0181                     l1034:
   693                           
   694                           ;Codigo_C.c: 156:     c = 0;
   695  0181  01F6               	clrf	_c
   696  0182                     l86:
   697  0182  0008               	return
   698  0183                     __end_of_setup:
   699                           
   700                           	psect	text2
   701  0183                     __ptext2:	
   702 ;; *************** function ___wmul *****************
   703 ;; Defined at:
   704 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
   705 ;; Parameters:    Size  Location     Type
   706 ;;  multiplier      2    0[BANK0 ] unsigned int 
   707 ;;  multiplicand    2    2[BANK0 ] unsigned int 
   708 ;; Auto vars:     Size  Location     Type
   709 ;;  product         2    4[BANK0 ] unsigned int 
   710 ;; Return value:  Size  Location     Type
   711 ;;                  2    0[BANK0 ] unsigned int 
   712 ;; Registers used:
   713 ;;		wreg, status,2, status,0
   714 ;; Tracked objects:
   715 ;;		On entry : 0/0
   716 ;;		On exit  : 0/0
   717 ;;		Unchanged: 0/0
   718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   719 ;;      Params:         0       4       0       0       0
   720 ;;      Locals:         0       2       0       0       0
   721 ;;      Temps:          0       0       0       0       0
   722 ;;      Totals:         0       6       0       0       0
   723 ;;Total ram usage:        6 bytes
   724 ;; Hardware stack levels used:    1
   725 ;; Hardware stack levels required when called:    2
   726 ;; This function calls:
   727 ;;		Nothing
   728 ;; This function is called by:
   729 ;;		_main
   730 ;; This function uses a non-reentrant model
   731 ;;
   732                           
   733                           
   734                           ;psect for function ___wmul
   735  0183                     ___wmul:
   736  0183                     l1038:	
   737                           ;incstack = 0
   738                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   739                           
   740  0183  1283               	bcf	3,5	;RP0=0, select bank0
   741  0184  1303               	bcf	3,6	;RP1=0, select bank0
   742  0185  01A4               	clrf	___wmul@product
   743  0186  01A5               	clrf	___wmul@product+1
   744  0187                     l1040:
   745  0187  1C20               	btfss	___wmul@multiplier,0
   746  0188  298A               	goto	u491
   747  0189  298B               	goto	u490
   748  018A                     u491:
   749  018A  2991               	goto	l172
   750  018B                     u490:
   751  018B                     l1042:
   752  018B  0822               	movf	___wmul@multiplicand,w
   753  018C  07A4               	addwf	___wmul@product,f
   754  018D  1803               	skipnc
   755  018E  0AA5               	incf	___wmul@product+1,f
   756  018F  0823               	movf	___wmul@multiplicand+1,w
   757  0190  07A5               	addwf	___wmul@product+1,f
   758  0191                     l172:
   759  0191  3001               	movlw	1
   760  0192                     u505:
   761  0192  1003               	clrc
   762  0193  0DA2               	rlf	___wmul@multiplicand,f
   763  0194  0DA3               	rlf	___wmul@multiplicand+1,f
   764  0195  3EFF               	addlw	-1
   765  0196  1D03               	skipz
   766  0197  2992               	goto	u505
   767  0198                     l1044:
   768  0198  3001               	movlw	1
   769  0199                     u515:
   770  0199  1003               	clrc
   771  019A  0CA1               	rrf	___wmul@multiplier+1,f
   772  019B  0CA0               	rrf	___wmul@multiplier,f
   773  019C  3EFF               	addlw	-1
   774  019D  1D03               	skipz
   775  019E  2999               	goto	u515
   776  019F                     l1046:
   777  019F  0820               	movf	___wmul@multiplier,w
   778  01A0  0421               	iorwf	___wmul@multiplier+1,w
   779  01A1  1D03               	btfss	3,2
   780  01A2  29A4               	goto	u521
   781  01A3  29A5               	goto	u520
   782  01A4                     u521:
   783  01A4  2987               	goto	l1040
   784  01A5                     u520:
   785  01A5                     l1048:
   786  01A5  0825               	movf	___wmul@product+1,w
   787  01A6  00A1               	movwf	?___wmul+1
   788  01A7  0824               	movf	___wmul@product,w
   789  01A8  00A0               	movwf	?___wmul
   790  01A9                     l174:
   791  01A9  0008               	return
   792  01AA                     __end_of___wmul:
   793                           
   794                           	psect	text3
   795  01AA                     __ptext3:	
   796 ;; *************** function ___bmul *****************
   797 ;; Defined at:
   798 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;  multiplier      1    wreg     unsigned char 
   801 ;;  multiplicand    1    0[BANK0 ] unsigned char 
   802 ;; Auto vars:     Size  Location     Type
   803 ;;  multiplier      1    3[BANK0 ] unsigned char 
   804 ;;  product         1    2[BANK0 ] unsigned char 
   805 ;; Return value:  Size  Location     Type
   806 ;;                  1    wreg      unsigned char 
   807 ;; Registers used:
   808 ;;		wreg, status,2, status,0
   809 ;; Tracked objects:
   810 ;;		On entry : 0/0
   811 ;;		On exit  : 0/0
   812 ;;		Unchanged: 0/0
   813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   814 ;;      Params:         0       1       0       0       0
   815 ;;      Locals:         0       2       0       0       0
   816 ;;      Temps:          0       1       0       0       0
   817 ;;      Totals:         0       4       0       0       0
   818 ;;Total ram usage:        4 bytes
   819 ;; Hardware stack levels used:    1
   820 ;; Hardware stack levels required when called:    2
   821 ;; This function calls:
   822 ;;		Nothing
   823 ;; This function is called by:
   824 ;;		_main
   825 ;; This function uses a non-reentrant model
   826 ;;
   827                           
   828                           
   829                           ;psect for function ___bmul
   830  01AA                     ___bmul:
   831                           
   832                           ;incstack = 0
   833                           ; Regs used in ___bmul: [wreg+status,2+status,0]
   834                           ;___bmul@multiplier stored from wreg
   835  01AA  1283               	bcf	3,5	;RP0=0, select bank0
   836  01AB  1303               	bcf	3,6	;RP1=0, select bank0
   837  01AC  00A3               	movwf	___bmul@multiplier
   838  01AD                     l1052:
   839  01AD  01A2               	clrf	___bmul@product
   840  01AE                     l1054:
   841  01AE  1C23               	btfss	___bmul@multiplier,0
   842  01AF  29B1               	goto	u531
   843  01B0  29B2               	goto	u530
   844  01B1                     u531:
   845  01B1  29B6               	goto	l1058
   846  01B2                     u530:
   847  01B2                     l1056:
   848  01B2  0820               	movf	___bmul@multiplicand,w
   849  01B3  00A1               	movwf	??___bmul
   850  01B4  0821               	movf	??___bmul,w
   851  01B5  07A2               	addwf	___bmul@product,f
   852  01B6                     l1058:
   853  01B6  1003               	clrc
   854  01B7  0DA0               	rlf	___bmul@multiplicand,f
   855  01B8                     l1060:
   856  01B8  1003               	clrc
   857  01B9  0CA3               	rrf	___bmul@multiplier,f
   858  01BA  0823               	movf	___bmul@multiplier,w
   859  01BB  1D03               	btfss	3,2
   860  01BC  29BE               	goto	u541
   861  01BD  29BF               	goto	u540
   862  01BE                     u541:
   863  01BE  29AE               	goto	l1054
   864  01BF                     u540:
   865  01BF                     l1062:
   866  01BF  0822               	movf	___bmul@product,w
   867  01C0                     l198:
   868  01C0  0008               	return
   869  01C1                     __end_of___bmul:
   870                           
   871                           	psect	text4
   872  001A                     __ptext4:	
   873 ;; *************** function ___awdiv *****************
   874 ;; Defined at:
   875 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;  divisor         2    6[BANK0 ] int 
   878 ;;  dividend        2    8[BANK0 ] int 
   879 ;; Auto vars:     Size  Location     Type
   880 ;;  quotient        2   13[BANK0 ] int 
   881 ;;  sign            1   12[BANK0 ] unsigned char 
   882 ;;  counter         1   11[BANK0 ] unsigned char 
   883 ;; Return value:  Size  Location     Type
   884 ;;                  2    6[BANK0 ] int 
   885 ;; Registers used:
   886 ;;		wreg, status,2, status,0
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   892 ;;      Params:         0       4       0       0       0
   893 ;;      Locals:         0       4       0       0       0
   894 ;;      Temps:          0       1       0       0       0
   895 ;;      Totals:         0       9       0       0       0
   896 ;;Total ram usage:        9 bytes
   897 ;; Hardware stack levels used:    1
   898 ;; Hardware stack levels required when called:    2
   899 ;; This function calls:
   900 ;;		Nothing
   901 ;; This function is called by:
   902 ;;		_main
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           
   907                           ;psect for function ___awdiv
   908  001A                     ___awdiv:
   909  001A                     l886:	
   910                           ;incstack = 0
   911                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   912                           
   913  001A  1283               	bcf	3,5	;RP0=0, select bank0
   914  001B  1303               	bcf	3,6	;RP1=0, select bank0
   915  001C  01AC               	clrf	___awdiv@sign
   916  001D                     l888:
   917  001D  1FA7               	btfss	___awdiv@divisor+1,7
   918  001E  2820               	goto	u311
   919  001F  2821               	goto	u310
   920  0020                     u311:
   921  0020  2828               	goto	l894
   922  0021                     u310:
   923  0021                     l890:
   924  0021  09A6               	comf	___awdiv@divisor,f
   925  0022  09A7               	comf	___awdiv@divisor+1,f
   926  0023  0AA6               	incf	___awdiv@divisor,f
   927  0024  1903               	skipnz
   928  0025  0AA7               	incf	___awdiv@divisor+1,f
   929  0026                     l892:
   930  0026  01AC               	clrf	___awdiv@sign
   931  0027  0AAC               	incf	___awdiv@sign,f
   932  0028                     l894:
   933  0028  1FA9               	btfss	___awdiv@dividend+1,7
   934  0029  282B               	goto	u321
   935  002A  282C               	goto	u320
   936  002B                     u321:
   937  002B  2835               	goto	l900
   938  002C                     u320:
   939  002C                     l896:
   940  002C  09A8               	comf	___awdiv@dividend,f
   941  002D  09A9               	comf	___awdiv@dividend+1,f
   942  002E  0AA8               	incf	___awdiv@dividend,f
   943  002F  1903               	skipnz
   944  0030  0AA9               	incf	___awdiv@dividend+1,f
   945  0031                     l898:
   946  0031  3001               	movlw	1
   947  0032  00AA               	movwf	??___awdiv
   948  0033  082A               	movf	??___awdiv,w
   949  0034  06AC               	xorwf	___awdiv@sign,f
   950  0035                     l900:
   951  0035  01AD               	clrf	___awdiv@quotient
   952  0036  01AE               	clrf	___awdiv@quotient+1
   953  0037                     l902:
   954  0037  0826               	movf	___awdiv@divisor,w
   955  0038  0427               	iorwf	___awdiv@divisor+1,w
   956  0039  1903               	btfsc	3,2
   957  003A  283C               	goto	u331
   958  003B  283D               	goto	u330
   959  003C                     u331:
   960  003C  2874               	goto	l922
   961  003D                     u330:
   962  003D                     l904:
   963  003D  01AB               	clrf	___awdiv@counter
   964  003E  0AAB               	incf	___awdiv@counter,f
   965  003F  284B               	goto	l910
   966  0040                     l906:
   967  0040  3001               	movlw	1
   968  0041                     u345:
   969  0041  1003               	clrc
   970  0042  0DA6               	rlf	___awdiv@divisor,f
   971  0043  0DA7               	rlf	___awdiv@divisor+1,f
   972  0044  3EFF               	addlw	-1
   973  0045  1D03               	skipz
   974  0046  2841               	goto	u345
   975  0047                     l908:
   976  0047  3001               	movlw	1
   977  0048  00AA               	movwf	??___awdiv
   978  0049  082A               	movf	??___awdiv,w
   979  004A  07AB               	addwf	___awdiv@counter,f
   980  004B                     l910:
   981  004B  1FA7               	btfss	___awdiv@divisor+1,7
   982  004C  284E               	goto	u351
   983  004D  284F               	goto	u350
   984  004E                     u351:
   985  004E  2840               	goto	l906
   986  004F                     u350:
   987  004F                     l912:
   988  004F  3001               	movlw	1
   989  0050                     u365:
   990  0050  1003               	clrc
   991  0051  0DAD               	rlf	___awdiv@quotient,f
   992  0052  0DAE               	rlf	___awdiv@quotient+1,f
   993  0053  3EFF               	addlw	-1
   994  0054  1D03               	skipz
   995  0055  2850               	goto	u365
   996  0056  0827               	movf	___awdiv@divisor+1,w
   997  0057  0229               	subwf	___awdiv@dividend+1,w
   998  0058  1D03               	skipz
   999  0059  285C               	goto	u375
  1000  005A  0826               	movf	___awdiv@divisor,w
  1001  005B  0228               	subwf	___awdiv@dividend,w
  1002  005C                     u375:
  1003  005C  1C03               	skipc
  1004  005D  285F               	goto	u371
  1005  005E  2860               	goto	u370
  1006  005F                     u371:
  1007  005F  2867               	goto	l918
  1008  0060                     u370:
  1009  0060                     l914:
  1010  0060  0826               	movf	___awdiv@divisor,w
  1011  0061  02A8               	subwf	___awdiv@dividend,f
  1012  0062  0827               	movf	___awdiv@divisor+1,w
  1013  0063  1C03               	skipc
  1014  0064  03A9               	decf	___awdiv@dividend+1,f
  1015  0065  02A9               	subwf	___awdiv@dividend+1,f
  1016  0066                     l916:
  1017  0066  142D               	bsf	___awdiv@quotient,0
  1018  0067                     l918:
  1019  0067  3001               	movlw	1
  1020  0068                     u385:
  1021  0068  1003               	clrc
  1022  0069  0CA7               	rrf	___awdiv@divisor+1,f
  1023  006A  0CA6               	rrf	___awdiv@divisor,f
  1024  006B  3EFF               	addlw	-1
  1025  006C  1D03               	skipz
  1026  006D  2868               	goto	u385
  1027  006E                     l920:
  1028  006E  3001               	movlw	1
  1029  006F  02AB               	subwf	___awdiv@counter,f
  1030  0070  1D03               	btfss	3,2
  1031  0071  2873               	goto	u391
  1032  0072  2874               	goto	u390
  1033  0073                     u391:
  1034  0073  284F               	goto	l912
  1035  0074                     u390:
  1036  0074                     l922:
  1037  0074  082C               	movf	___awdiv@sign,w
  1038  0075  1903               	btfsc	3,2
  1039  0076  2878               	goto	u401
  1040  0077  2879               	goto	u400
  1041  0078                     u401:
  1042  0078  287E               	goto	l926
  1043  0079                     u400:
  1044  0079                     l924:
  1045  0079  09AD               	comf	___awdiv@quotient,f
  1046  007A  09AE               	comf	___awdiv@quotient+1,f
  1047  007B  0AAD               	incf	___awdiv@quotient,f
  1048  007C  1903               	skipnz
  1049  007D  0AAE               	incf	___awdiv@quotient+1,f
  1050  007E                     l926:
  1051  007E  082E               	movf	___awdiv@quotient+1,w
  1052  007F  00A7               	movwf	?___awdiv+1
  1053  0080  082D               	movf	___awdiv@quotient,w
  1054  0081  00A6               	movwf	?___awdiv
  1055  0082                     l325:
  1056  0082  0008               	return
  1057  0083                     __end_of___awdiv:
  1058                           
  1059                           	psect	text5
  1060  00EA                     __ptext5:	
  1061 ;; *************** function _isr *****************
  1062 ;; Defined at:
  1063 ;;		line 54 in file "Codigo_C.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;		None
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;		None
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  1    wreg      void 
  1070 ;; Registers used:
  1071 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1077 ;;      Params:         0       0       0       0       0
  1078 ;;      Locals:         0       0       0       0       0
  1079 ;;      Temps:          5       0       0       0       0
  1080 ;;      Totals:         5       0       0       0       0
  1081 ;;Total ram usage:        5 bytes
  1082 ;; Hardware stack levels used:    2
  1083 ;; This function calls:
  1084 ;;		Nothing
  1085 ;; This function is called by:
  1086 ;;		Interrupt level 1
  1087 ;; This function uses a non-reentrant model
  1088 ;;
  1089                           
  1090                           
  1091                           ;psect for function _isr
  1092  00EA                     _isr:
  1093  00EA                     i1l930:
  1094                           
  1095                           ;Codigo_C.c: 57:     if (T0IF==1){
  1096  00EA  1D0B               	btfss	11,2	;volatile
  1097  00EB  28ED               	goto	u41_21
  1098  00EC  28EE               	goto	u41_20
  1099  00ED                     u41_21:
  1100  00ED  2933               	goto	i1l962
  1101  00EE                     u41_20:
  1102  00EE                     i1l932:
  1103                           
  1104                           ;Codigo_C.c: 58:         PORTD++;
  1105  00EE  3001               	movlw	1
  1106  00EF  00F0               	movwf	??_isr
  1107  00F0  0870               	movf	??_isr,w
  1108  00F1  0788               	addwf	8,f	;volatile
  1109  00F2                     i1l934:
  1110                           
  1111                           ;Codigo_C.c: 59:         PORTB =0;
  1112  00F2  0186               	clrf	6	;volatile
  1113  00F3                     i1l936:
  1114                           
  1115                           ;Codigo_C.c: 61:         if (i==4){
  1116  00F3  3004               	movlw	4
  1117  00F4  0675               	xorwf	_i,w
  1118  00F5  1D03               	btfss	3,2
  1119  00F6  28F8               	goto	u42_21
  1120  00F7  28F9               	goto	u42_20
  1121  00F8                     u42_21:
  1122  00F8  2904               	goto	i1l942
  1123  00F9                     u42_20:
  1124  00F9                     i1l938:
  1125                           
  1126                           ;Codigo_C.c: 63:             RB7 = 1;
  1127  00F9  1786               	bsf	6,7	;volatile
  1128  00FA                     i1l940:
  1129                           
  1130                           ;Codigo_C.c: 64:             PORTC = tabla[c];
  1131  00FA  0876               	movf	_c,w
  1132  00FB  3E01               	addlw	low ((_tabla-__stringbase)| (0+32768))
  1133  00FC  0084               	movwf	4
  1134  00FD  120A  118A  21C1  120A  118A  	fcall	stringdir
  1135  0102  0087               	movwf	7	;volatile
  1136                           
  1137                           ;Codigo_C.c: 65:         }
  1138  0103  2925               	goto	i1l954
  1139  0104                     i1l942:
  1140  0104  3003               	movlw	3
  1141  0105  0675               	xorwf	_i,w
  1142  0106  1D03               	btfss	3,2
  1143  0107  2909               	goto	u43_21
  1144  0108  290A               	goto	u43_20
  1145  0109                     u43_21:
  1146  0109  2915               	goto	i1l948
  1147  010A                     u43_20:
  1148  010A                     i1l944:
  1149                           
  1150                           ;Codigo_C.c: 67:             RB6 = 1;
  1151  010A  1706               	bsf	6,6	;volatile
  1152  010B                     i1l946:
  1153                           
  1154                           ;Codigo_C.c: 68:             PORTC = tabla[d];
  1155  010B  0877               	movf	_d,w
  1156  010C  3E01               	addlw	low ((_tabla-__stringbase)| (0+32768))
  1157  010D  0084               	movwf	4
  1158  010E  120A  118A  21C1  120A  118A  	fcall	stringdir
  1159  0113  0087               	movwf	7	;volatile
  1160                           
  1161                           ;Codigo_C.c: 69:         }
  1162  0114  2925               	goto	i1l954
  1163  0115                     i1l948:
  1164  0115  3002               	movlw	2
  1165  0116  0675               	xorwf	_i,w
  1166  0117  1D03               	btfss	3,2
  1167  0118  291A               	goto	u44_21
  1168  0119  291B               	goto	u44_20
  1169  011A                     u44_21:
  1170  011A  2925               	goto	i1l954
  1171  011B                     u44_20:
  1172  011B                     i1l950:
  1173                           
  1174                           ;Codigo_C.c: 71:             RB5 =1;
  1175  011B  1686               	bsf	6,5	;volatile
  1176  011C                     i1l952:
  1177                           
  1178                           ;Codigo_C.c: 72:             PORTC =tabla[u];
  1179  011C  0878               	movf	_u,w
  1180  011D  3E01               	addlw	low ((_tabla-__stringbase)| (0+32768))
  1181  011E  0084               	movwf	4
  1182  011F  120A  118A  21C1  120A  118A  	fcall	stringdir
  1183  0124  0087               	movwf	7	;volatile
  1184  0125                     i1l954:
  1185                           
  1186                           ;Codigo_C.c: 75:         i--;
  1187  0125  3001               	movlw	1
  1188  0126  02F5               	subwf	_i,f
  1189  0127                     i1l956:
  1190                           
  1191                           ;Codigo_C.c: 76:         if(i==1){
  1192  0127  0375               	decf	_i,w
  1193  0128  1D03               	btfss	3,2
  1194  0129  292B               	goto	u45_21
  1195  012A  292C               	goto	u45_20
  1196  012B                     u45_21:
  1197  012B  2930               	goto	i1l960
  1198  012C                     u45_20:
  1199  012C                     i1l958:
  1200                           
  1201                           ;Codigo_C.c: 77:             i=4;
  1202  012C  3004               	movlw	4
  1203  012D  00F0               	movwf	??_isr
  1204  012E  0870               	movf	??_isr,w
  1205  012F  00F5               	movwf	_i
  1206  0130                     i1l960:
  1207                           
  1208                           ;Codigo_C.c: 80:         INTCONbits.T0IF = 0;
  1209  0130  110B               	bcf	11,2	;volatile
  1210                           
  1211                           ;Codigo_C.c: 81:         TMR0= 236;
  1212  0131  30EC               	movlw	236
  1213  0132  0081               	movwf	1	;volatile
  1214  0133                     i1l962:
  1215                           
  1216                           ;Codigo_C.c: 84:     if (RBIF==1){
  1217  0133  1C0B               	btfss	11,0	;volatile
  1218  0134  2936               	goto	u46_21
  1219  0135  2937               	goto	u46_20
  1220  0136                     u46_21:
  1221  0136  2946               	goto	i1l75
  1222  0137                     u46_20:
  1223  0137                     i1l964:
  1224                           
  1225                           ;Codigo_C.c: 86:         if (RB0==0){
  1226  0137  1806               	btfsc	6,0	;volatile
  1227  0138  293A               	goto	u47_21
  1228  0139  293B               	goto	u47_20
  1229  013A                     u47_21:
  1230  013A  293F               	goto	i1l968
  1231  013B                     u47_20:
  1232  013B                     i1l966:
  1233                           
  1234                           ;Codigo_C.c: 87:             PORTA++;
  1235  013B  3001               	movlw	1
  1236  013C  00F0               	movwf	??_isr
  1237  013D  0870               	movf	??_isr,w
  1238  013E  0785               	addwf	5,f	;volatile
  1239  013F                     i1l968:
  1240                           
  1241                           ;Codigo_C.c: 89:         if (RB1==0){
  1242  013F  1886               	btfsc	6,1	;volatile
  1243  0140  2942               	goto	u48_21
  1244  0141  2943               	goto	u48_20
  1245  0142                     u48_21:
  1246  0142  2945               	goto	i1l972
  1247  0143                     u48_20:
  1248  0143                     i1l970:
  1249                           
  1250                           ;Codigo_C.c: 90:             PORTA--;
  1251  0143  3001               	movlw	1
  1252  0144  0285               	subwf	5,f	;volatile
  1253  0145                     i1l972:
  1254                           
  1255                           ;Codigo_C.c: 92:         INTCONbits.RBIF=0;
  1256  0145  100B               	bcf	11,0	;volatile
  1257  0146                     i1l75:
  1258  0146  0874               	movf	??_isr+4,w
  1259  0147  00FF               	movwf	btemp+1
  1260  0148  0873               	movf	??_isr+3,w
  1261  0149  008A               	movwf	10
  1262  014A  0872               	movf	??_isr+2,w
  1263  014B  0084               	movwf	4
  1264  014C  0E71               	swapf	??_isr+1,w
  1265  014D  0083               	movwf	3
  1266  014E  0EFE               	swapf	btemp,f
  1267  014F  0E7E               	swapf	btemp,w
  1268  0150  0009               	retfie
  1269  0151                     __end_of_isr:
  1270  007E                     btemp	set	126	;btemp
  1271  007E                     wtemp0	set	126
  1272                           
  1273                           	psect	intentry
  1274  0004                     __pintentry:	
  1275                           ;incstack = 0
  1276                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath]
  1277                           
  1278  0004                     interrupt_function:
  1279  007E                     saved_w	set	btemp
  1280  0004  00FE               	movwf	btemp
  1281  0005  0E03               	swapf	3,w
  1282  0006  00F1               	movwf	??_isr+1
  1283  0007  0804               	movf	4,w
  1284  0008  00F2               	movwf	??_isr+2
  1285  0009  080A               	movf	10,w
  1286  000A  00F3               	movwf	??_isr+3
  1287  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1288  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1289  000D  087F               	movf	btemp+1,w
  1290  000E  00F4               	movwf	??_isr+4
  1291  000F  120A  118A  28EA   	ljmp	_isr
  1292                           
  1293                           	psect	config
  1294                           
  1295                           ;Config register CONFIG1 @ 0x2007
  1296                           ;	Oscillator Selection bits
  1297                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1298                           ;	Watchdog Timer Enable bit
  1299                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1300                           ;	Power-up Timer Enable bit
  1301                           ;	PWRTE = OFF, PWRT disabled
  1302                           ;	RE3/MCLR pin function select bit
  1303                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1304                           ;	Code Protection bit
  1305                           ;	CP = OFF, Program memory code protection is disabled
  1306                           ;	Data Code Protection bit
  1307                           ;	CPD = OFF, Data memory code protection is disabled
  1308                           ;	Brown Out Reset Selection bits
  1309                           ;	BOREN = OFF, BOR disabled
  1310                           ;	Internal External Switchover bit
  1311                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1312                           ;	Fail-Safe Clock Monitor Enabled bit
  1313                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1314                           ;	Low Voltage Programming Enable bit
  1315                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1316                           ;	In-Circuit Debugger Mode bit
  1317                           ;	DEBUG = 0x1, unprogrammed default
  1318  2007                     	org	8199
  1319  2007  38D4               	dw	14548
  1320                           
  1321                           ;Config register CONFIG2 @ 0x2008
  1322                           ;	Brown-out Reset Selection bit
  1323                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1324                           ;	Flash Program Memory Self Write Enable bits
  1325                           ;	WRT = OFF, Write protection off
  1326  2008                     	org	8200
  1327  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    9
    Data        0
    BSS         1
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     19      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1236
                                             15 BANK0      4     4      0
                            ___awdiv
                             ___bmul
                             ___wmul
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     316
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___wmul (ARG)
   ___bmul
   ___wmul
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      13       5       23.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1D      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Apr 24 11:01:20 2021

                      _c 0076                        _d 0077                        _f 0079  
                      _i 0075                        _u 0078                        pc 0002  
         ___bmul@product 0022                       l80 0088                       l86 0182  
           ___awdiv@sign 002C                       fsr 0004      ___wmul@multiplicand 0022  
                    l172 0191                      l325 0082                      l174 01A9  
                    l198 01C0                      l900 0035                      l910 004B  
                    l902 0037                      l920 006E                      l912 004F  
                    l904 003D                      l914 0060                      l906 0040  
                    l922 0074                      l924 0079                      l916 0066  
                    l908 0047                      l926 007E                      l918 0067  
                    l890 0021                      l892 0026                      l980 015A  
                    l894 0028                      l886 001A                      l990 0161  
                    l982 015B                      l896 002C                      l888 001D  
                    l992 0162                      l984 015C                      l976 0151  
                    l898 0031                      l994 0165                      l986 015F  
                    l978 0158                      l996 0167                      l988 0160  
                    l998 0169                      _RB0 0030                      _RB1 0031  
                    _RB5 0035                      _RB6 0036                      _RB7 0037  
                    u310 0021                      u311 0020                      u400 0079  
                    u320 002C                      u401 0078                      u321 002B  
                    u330 003D                      u331 003C                      u350 004F  
                    u351 004E                      u520 01A5                      u345 0041  
                    u521 01A4                      u505 0192                      u370 0060  
                    u530 01B2                      u371 005F                      u531 01B1  
                    u515 0199                      u540 01BF                      u365 0050  
                    u541 01BE                      u390 0074                      u391 0073  
                    u375 005C                      u385 0068                      u490 018B  
                    u491 018A                      _isr 00EA                      fsr0 0004  
                   l1000 016A                     l1010 016F                     l1002 016B  
                   l1020 0177                     l1012 0170                     l1004 016C  
                   l1030 017F                     l1022 0178                     l1014 0171  
                   l1006 016D                     l1040 0187                     l1032 0180  
                   l1024 0179                     l1016 0172                     l1008 016E  
                   l1042 018B                     l1034 0181                     l1026 017A  
                   l1018 0176                     l1060 01B8                     l1052 01AD  
                   l1044 0198                     l1028 017B                     l1062 01BF  
                   l1054 01AE                     l1046 019F                     l1038 0183  
                   l1056 01B2                     l1048 01A5                     l1058 01B6  
                   l1066 0083                     ?_isr 0070                     _T0IF 005A  
                   _IOCB 0096                     _RBIF 0058                     i1l75 0146  
                   _TMR0 0001                     _WPUB 0095                     _main 0083  
                   btemp 007E                     start 0012        ___bmul@multiplier 0023  
                  ??_isr 0070                    ?_main 0070          __end_of___awdiv 0083  
                  _ANSEL 0188          ___awdiv@divisor 0026                    i1l930 00EA  
                  i1l940 00FA                    i1l932 00EE                    i1l950 011B  
                  i1l942 0104                    i1l934 00F2                    i1l960 0130  
                  i1l952 011C                    i1l944 010A                    i1l936 00F3  
                  i1l970 0143                    i1l946 010B                    i1l954 0125  
                  i1l938 00F9                    i1l962 0133                    i1l972 0145  
                  i1l964 0137                    i1l956 0127                    i1l948 0115  
                  i1l966 013B                    i1l958 012C                    i1l968 013F  
        ___awdiv@counter 002B                    u41_20 00EE                    u41_21 00ED  
                  u42_20 00F9                    u42_21 00F8                    u43_20 010A  
                  u43_21 0109                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    u44_20 011B  
                  u44_21 011A                    u45_20 012C                    u45_21 012B  
                  u46_20 0137                    u46_21 0136                    u47_20 013B  
                  u47_21 013A                    u48_20 0143                    u48_21 0142  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _tabla 01C7                    _setup 0151  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0015             __end_of_main 00EA                   ??_main 002F  
       ___awdiv@dividend 0028                   ?_setup 0070                   _ANSELH 0189  
                 ___bmul 01AA                   ___wmul 0183                ??___awdiv 002A  
       ___awdiv@quotient 002D                   saved_w 007E  __end_of__initialization 0016  
    ___bmul@multiplicand 0020           __pcstackCOMMON 0070            __end_of_tabla 01D0  
          __end_of_setup 0183           _OPTION_REGbits 0081                  ??_setup 0020  
             __pnvCOMMON 0075               __pmaintext 0083                  ?___bmul 0020  
                ?___wmul 0020               __pintentry 0004               __stringtab 01C1  
        __size_of___bmul 0017                  ___awdiv 001A          __size_of___wmul 0027  
                __ptext1 0151                  __ptext2 0183                  __ptext3 01AA  
                __ptext4 001A                  __ptext5 00EA             __size_of_isr 0067  
   end_of_initialization 0016           __end_of___bmul 01C1           __end_of___wmul 01AA  
    start_initialization 0015              __end_of_isr 0151                 ??___bmul 0021  
               ??___wmul 0024              __pbssCOMMON 0079                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0026                __pstrings 01C1  
         __size_of_setup 0032        interrupt_function 0004           ___wmul@product 0024  
            __stringbase 01C6        ___wmul@multiplier 0020         __size_of___awdiv 0069  
     __end_of__stringtab 01C7            __size_of_main 0067               _INTCONbits 000B  
               intlevel1 0000                stringcode 01C1               _OSCCONbits 008F  
               stringdir 01C1                 stringtab 01C1  
