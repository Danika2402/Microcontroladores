

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Apr 24 13:52:56 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209                           
   210                           	psect	strings
   211  0204                     __pstrings:
   212  0204                     stringtab:
   213  0204                     __stringtab:
   214  0204                     stringcode:	
   215                           ;	String table - string pointers are 1 byte each
   216                           
   217  0204                     stringdir:
   218  0204  3002               	movlw	high stringdir
   219  0205  008A               	movwf	10
   220  0206  0804               	movf	4,w
   221  0207  0A84               	incf	4,f
   222  0208  0782               	addwf	2,f
   223  0209                     __stringbase:
   224  0209  3400               	retlw	0
   225  020A                     __end_of__stringtab:
   226  020A                     _tabla:
   227  020A  343F               	retlw	63
   228  020B  3406               	retlw	6
   229  020C  345B               	retlw	91
   230  020D  344F               	retlw	79
   231  020E  3466               	retlw	102
   232  020F  346D               	retlw	109
   233  0210  347D               	retlw	125
   234  0211  3407               	retlw	7
   235  0212  347F               	retlw	127
   236  0213                     __end_of_tabla:
   237  0006                     _PORTB	set	6
   238  0001                     _TMR0	set	1
   239  000B                     _INTCONbits	set	11
   240  0007                     _PORTC	set	7
   241  0008                     _PORTD	set	8
   242  001E                     _ADRESH	set	30
   243  0005                     _PORTA	set	5
   244  001F                     _ADCON0bits	set	31
   245  000C                     _PIR1bits	set	12
   246  0042                     _RD2	set	66
   247  0041                     _RD1	set	65
   248  0040                     _RD0	set	64
   249  005A                     _T0IF	set	90
   250  008C                     _PIE1bits	set	140
   251  009F                     _ADCON1bits	set	159
   252  0081                     _OPTION_REGbits	set	129
   253  008F                     _OSCCONbits	set	143
   254  0088                     _TRISD	set	136
   255  0086                     _TRISB	set	134
   256  0087                     _TRISC	set	135
   257  0085                     _TRISA	set	133
   258  0189                     _ANSELH	set	393
   259  0188                     _ANSEL	set	392
   260                           
   261                           	psect	cinit
   262  0015                     start_initialization:	
   263                           ; #config settings
   264                           
   265  0015                     __initialization:
   266                           
   267                           ; Clear objects allocated to COMMON
   268  0015  01F0               	clrf	__pbssCOMMON& (0+127)
   269  0016  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   270  0017  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   271  0018  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   272  0019  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   273  001A                     end_of_initialization:	
   274                           ;End of C runtime variable initialization code
   275                           
   276  001A                     __end_of__initialization:
   277  001A  0183               	clrf	3
   278  001B  120A  118A  289C   	ljmp	_main	;jump to C main() function
   279                           
   280                           	psect	bssCOMMON
   281  0070                     __pbssCOMMON:
   282  0070                     _p:
   283  0070                     	ds	1
   284  0071                     _i:
   285  0071                     	ds	1
   286  0072                     _c:
   287  0072                     	ds	1
   288  0073                     _d:
   289  0073                     	ds	1
   290  0074                     _u:
   291  0074                     	ds	1
   292                           
   293                           	psect	cstackCOMMON
   294  0075                     __pcstackCOMMON:
   295  0075                     ?_setup:
   296  0075                     ?_isr:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0075                     ??_isr:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0075                     ?_main:	
   303                           ; 1 bytes @ 0x0
   304                           
   305                           
   306                           ; 1 bytes @ 0x0
   307  0075                     	ds	5
   308                           
   309                           	psect	cstackBANK0
   310  0020                     __pcstackBANK0:
   311  0020                     ??_setup:
   312  0020                     ?___bmul:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0020                     ?___wmul:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0020                     ___bmul@multiplicand:	
   319                           ; 2 bytes @ 0x0
   320                           
   321  0020                     ___wmul@multiplier:	
   322                           ; 1 bytes @ 0x0
   323                           
   324                           
   325                           ; 2 bytes @ 0x0
   326  0020                     	ds	1
   327  0021                     ??___bmul:
   328                           
   329                           ; 1 bytes @ 0x1
   330  0021                     	ds	1
   331  0022                     ___bmul@product:
   332  0022                     ___wmul@multiplicand:	
   333                           ; 1 bytes @ 0x2
   334                           
   335                           
   336                           ; 2 bytes @ 0x2
   337  0022                     	ds	1
   338  0023                     ___bmul@multiplier:
   339                           
   340                           ; 1 bytes @ 0x3
   341  0023                     	ds	1
   342  0024                     ??___wmul:
   343  0024                     ___wmul@product:	
   344                           ; 1 bytes @ 0x4
   345                           
   346                           
   347                           ; 2 bytes @ 0x4
   348  0024                     	ds	2
   349  0026                     ?___awdiv:
   350  0026                     ___awdiv@divisor:	
   351                           ; 2 bytes @ 0x6
   352                           
   353                           
   354                           ; 2 bytes @ 0x6
   355  0026                     	ds	2
   356  0028                     ___awdiv@dividend:
   357                           
   358                           ; 2 bytes @ 0x8
   359  0028                     	ds	2
   360  002A                     ??___awdiv:
   361                           
   362                           ; 1 bytes @ 0xA
   363  002A                     	ds	1
   364  002B                     ___awdiv@counter:
   365                           
   366                           ; 1 bytes @ 0xB
   367  002B                     	ds	1
   368  002C                     ___awdiv@sign:
   369                           
   370                           ; 1 bytes @ 0xC
   371  002C                     	ds	1
   372  002D                     ___awdiv@quotient:
   373                           
   374                           ; 2 bytes @ 0xD
   375  002D                     	ds	2
   376  002F                     ??_main:
   377                           
   378                           ; 1 bytes @ 0xF
   379  002F                     	ds	4
   380                           
   381                           	psect	maintext
   382  009C                     __pmaintext:	
   383 ;;
   384 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   385 ;;
   386 ;; *************** function _main *****************
   387 ;; Defined at:
   388 ;;		line 98 in file "ADC.c"
   389 ;; Parameters:    Size  Location     Type
   390 ;;		None
   391 ;; Auto vars:     Size  Location     Type
   392 ;;		None
   393 ;; Return value:  Size  Location     Type
   394 ;;                  1    wreg      void 
   395 ;; Registers used:
   396 ;;		wreg, status,2, status,0, pclath, cstack
   397 ;; Tracked objects:
   398 ;;		On entry : B00/0
   399 ;;		On exit  : 0/0
   400 ;;		Unchanged: 0/0
   401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   402 ;;      Params:         0       0       0       0       0
   403 ;;      Locals:         0       0       0       0       0
   404 ;;      Temps:          0       4       0       0       0
   405 ;;      Totals:         0       4       0       0       0
   406 ;;Total ram usage:        4 bytes
   407 ;; Hardware stack levels required when called:    3
   408 ;; This function calls:
   409 ;;		___awdiv
   410 ;;		___bmul
   411 ;;		___wmul
   412 ;;		_setup
   413 ;; This function is called by:
   414 ;;		Startup code after reset
   415 ;; This function uses a non-reentrant model
   416 ;;
   417                           
   418                           
   419                           ;psect for function _main
   420  009C                     _main:
   421  009C                     l1129:	
   422                           ;incstack = 0
   423                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   424                           
   425                           
   426                           ;ADC.c: 99:     setup();
   427  009C  120A  118A  217E  120A  118A  	fcall	_setup
   428  00A1                     l1131:
   429                           
   430                           ;ADC.c: 101:     _delay((unsigned long)((50)*(4000000/4000000.0)));
   431  00A1  300F               	movlw	15
   432  00A2  1283               	bcf	3,5	;RP0=0, select bank0
   433  00A3  1303               	bcf	3,6	;RP1=0, select bank0
   434  00A4  00AF               	movwf	??_main
   435  00A5                     u557:
   436  00A5  0BAF               	decfsz	??_main,f
   437  00A6  28A5               	goto	u557
   438  00A7  28A8               	nop2
   439  00A8                     l1133:
   440                           
   441                           ;ADC.c: 102:     ADCON0bits.GO_nDONE =1;
   442  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   443  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   444  00AA  149F               	bsf	31,1	;volatile
   445  00AB                     l1135:
   446                           
   447                           ;ADC.c: 107:             c = p/100;
   448  00AB  3064               	movlw	100
   449  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   450  00AD  1303               	bcf	3,6	;RP1=0, select bank0
   451  00AE  00A6               	movwf	___awdiv@divisor
   452  00AF  3000               	movlw	0
   453  00B0  00A7               	movwf	___awdiv@divisor+1
   454  00B1  0870               	movf	_p,w
   455  00B2  00AF               	movwf	??_main
   456  00B3  01B0               	clrf	??_main+1
   457  00B4  082F               	movf	??_main,w
   458  00B5  00A8               	movwf	___awdiv@dividend
   459  00B6  0830               	movf	??_main+1,w
   460  00B7  00A9               	movwf	___awdiv@dividend+1
   461  00B8  120A  118A  2115  120A  118A  	fcall	___awdiv
   462  00BD  1283               	bcf	3,5	;RP0=0, select bank0
   463  00BE  1303               	bcf	3,6	;RP1=0, select bank0
   464  00BF  0826               	movf	?___awdiv,w
   465  00C0  00B1               	movwf	??_main+2
   466  00C1  0831               	movf	??_main+2,w
   467  00C2  00F2               	movwf	_c
   468  00C3                     l1137:
   469                           
   470                           ;ADC.c: 108:             d = (p -(c * 100))/10;
   471  00C3  300A               	movlw	10
   472  00C4  00A6               	movwf	___awdiv@divisor
   473  00C5  3000               	movlw	0
   474  00C6  00A7               	movwf	___awdiv@divisor+1
   475  00C7  0872               	movf	_c,w
   476  00C8  00AF               	movwf	??_main
   477  00C9  01B0               	clrf	??_main+1
   478  00CA  082F               	movf	??_main,w
   479  00CB  00A0               	movwf	___wmul@multiplier
   480  00CC  0830               	movf	??_main+1,w
   481  00CD  00A1               	movwf	___wmul@multiplier+1
   482  00CE  309C               	movlw	156
   483  00CF  00A2               	movwf	___wmul@multiplicand
   484  00D0  30FF               	movlw	255
   485  00D1  00A3               	movwf	___wmul@multiplicand+1
   486  00D2  120A  118A  21C6  120A  118A  	fcall	___wmul
   487  00D7  0870               	movf	_p,w
   488  00D8  1283               	bcf	3,5	;RP0=0, select bank0
   489  00D9  1303               	bcf	3,6	;RP1=0, select bank0
   490  00DA  0720               	addwf	?___wmul,w
   491  00DB  00A8               	movwf	___awdiv@dividend
   492  00DC  0821               	movf	?___wmul+1,w
   493  00DD  1803               	skipnc
   494  00DE  0A21               	incf	?___wmul+1,w
   495  00DF  00A9               	movwf	___awdiv@dividend+1
   496  00E0  120A  118A  2115  120A  118A  	fcall	___awdiv
   497  00E5  1283               	bcf	3,5	;RP0=0, select bank0
   498  00E6  1303               	bcf	3,6	;RP1=0, select bank0
   499  00E7  0826               	movf	?___awdiv,w
   500  00E8  00B1               	movwf	??_main+2
   501  00E9  0831               	movf	??_main+2,w
   502  00EA  00F3               	movwf	_d
   503  00EB                     l1139:
   504                           
   505                           ;ADC.c: 109:             u = p - (c * 100) - (d *10);
   506  00EB  309C               	movlw	156
   507  00EC  00AF               	movwf	??_main
   508  00ED  082F               	movf	??_main,w
   509  00EE  00A0               	movwf	___bmul@multiplicand
   510  00EF  0872               	movf	_c,w
   511  00F0  120A  118A  21ED  120A  118A  	fcall	___bmul
   512  00F5  1283               	bcf	3,5	;RP0=0, select bank0
   513  00F6  1303               	bcf	3,6	;RP1=0, select bank0
   514  00F7  00B0               	movwf	??_main+1
   515  00F8  30F6               	movlw	246
   516  00F9  00B1               	movwf	??_main+2
   517  00FA  0831               	movf	??_main+2,w
   518  00FB  00A0               	movwf	___bmul@multiplicand
   519  00FC  0873               	movf	_d,w
   520  00FD  120A  118A  21ED  120A  118A  	fcall	___bmul
   521  0102  1283               	bcf	3,5	;RP0=0, select bank0
   522  0103  1303               	bcf	3,6	;RP1=0, select bank0
   523  0104  0730               	addwf	??_main+1,w
   524  0105  0770               	addwf	_p,w
   525  0106  00B2               	movwf	??_main+3
   526  0107  0832               	movf	??_main+3,w
   527  0108  00F4               	movwf	_u
   528  0109                     l1141:
   529                           
   530                           ;ADC.c: 111:             ADCON0bits.GO_nDONE =1;
   531  0109  149F               	bsf	31,1	;volatile
   532                           
   533                           ;ADC.c: 112:             _delay((unsigned long)((50)*(4000000/4000000.0)));
   534  010A  300F               	movlw	15
   535  010B  1283               	bcf	3,5	;RP0=0, select bank0
   536  010C  1303               	bcf	3,6	;RP1=0, select bank0
   537  010D  00AF               	movwf	??_main
   538  010E                     u567:
   539  010E  0BAF               	decfsz	??_main,f
   540  010F  290E               	goto	u567
   541  0110  2911               	nop2
   542  0111  28AB               	goto	l1135
   543  0112  120A  118A  2812   	ljmp	start
   544  0115                     __end_of_main:
   545                           
   546                           	psect	text1
   547  017E                     __ptext1:	
   548 ;; *************** function _setup *****************
   549 ;; Defined at:
   550 ;;		line 118 in file "ADC.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;		None
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg, status,2
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   564 ;;      Params:         0       0       0       0       0
   565 ;;      Locals:         0       0       0       0       0
   566 ;;      Temps:          0       1       0       0       0
   567 ;;      Totals:         0       1       0       0       0
   568 ;;Total ram usage:        1 bytes
   569 ;; Hardware stack levels used:    1
   570 ;; Hardware stack levels required when called:    2
   571 ;; This function calls:
   572 ;;		Nothing
   573 ;; This function is called by:
   574 ;;		_main
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           
   579                           ;psect for function _setup
   580  017E                     _setup:
   581  017E                     l1027:	
   582                           ;incstack = 0
   583                           ; Regs used in _setup: [wreg+status,2]
   584                           
   585                           
   586                           ;ADC.c: 119:     ANSEL = 0x00;
   587  017E  1683               	bsf	3,5	;RP0=1, select bank3
   588  017F  1703               	bsf	3,6	;RP1=1, select bank3
   589  0180  0188               	clrf	8	;volatile
   590  0181                     l1029:
   591                           
   592                           ;ADC.c: 120:     ANSELH = 0b00010100;
   593  0181  3014               	movlw	20
   594  0182  0089               	movwf	9	;volatile
   595  0183                     l1031:
   596                           
   597                           ;ADC.c: 122:     TRISA = 0x00;
   598  0183  1683               	bsf	3,5	;RP0=1, select bank1
   599  0184  1303               	bcf	3,6	;RP1=0, select bank1
   600  0185  0185               	clrf	5	;volatile
   601  0186                     l1033:
   602                           
   603                           ;ADC.c: 123:     TRISC = 0x00;
   604  0186  0187               	clrf	7	;volatile
   605  0187                     l1035:
   606                           
   607                           ;ADC.c: 124:     TRISB = 0x03;
   608  0187  3003               	movlw	3
   609  0188  0086               	movwf	6	;volatile
   610                           
   611                           ;ADC.c: 125:     TRISD = 0x00;
   612  0189  0188               	clrf	8	;volatile
   613                           
   614                           ;ADC.c: 127:     PORTA = 0;
   615  018A  1283               	bcf	3,5	;RP0=0, select bank0
   616  018B  1303               	bcf	3,6	;RP1=0, select bank0
   617  018C  0185               	clrf	5	;volatile
   618                           
   619                           ;ADC.c: 128:     PORTB = 0;
   620  018D  0186               	clrf	6	;volatile
   621                           
   622                           ;ADC.c: 129:     PORTC = 0;
   623  018E  0187               	clrf	7	;volatile
   624                           
   625                           ;ADC.c: 130:     PORTD = 0;
   626  018F  0188               	clrf	8	;volatile
   627  0190                     l1037:
   628                           
   629                           ;ADC.c: 133:     OSCCONbits.IRCF2 =1;
   630  0190  1683               	bsf	3,5	;RP0=1, select bank1
   631  0191  1303               	bcf	3,6	;RP1=0, select bank1
   632  0192  170F               	bsf	15,6	;volatile
   633  0193                     l1039:
   634                           
   635                           ;ADC.c: 134:     OSCCONbits.IRCF1 =1;
   636  0193  168F               	bsf	15,5	;volatile
   637  0194                     l1041:
   638                           
   639                           ;ADC.c: 135:     OSCCONbits.IRCF0 =0;
   640  0194  120F               	bcf	15,4	;volatile
   641  0195                     l1043:
   642                           
   643                           ;ADC.c: 136:     OSCCONbits.SCS =1;
   644  0195  140F               	bsf	15,0	;volatile
   645  0196                     l1045:
   646                           
   647                           ;ADC.c: 139:     OPTION_REGbits.T0CS =0;
   648  0196  1281               	bcf	1,5	;volatile
   649  0197                     l1047:
   650                           
   651                           ;ADC.c: 140:     OPTION_REGbits.PSA =0;
   652  0197  1181               	bcf	1,3	;volatile
   653  0198                     l1049:
   654                           
   655                           ;ADC.c: 141:     OPTION_REGbits.PS2 =1;
   656  0198  1501               	bsf	1,2	;volatile
   657  0199                     l1051:
   658                           
   659                           ;ADC.c: 142:     OPTION_REGbits.PS1 =1;
   660  0199  1481               	bsf	1,1	;volatile
   661  019A                     l1053:
   662                           
   663                           ;ADC.c: 143:     OPTION_REGbits.PS0 =1;
   664  019A  1401               	bsf	1,0	;volatile
   665  019B                     l1055:
   666                           
   667                           ;ADC.c: 144:     TMR0 = 236;
   668  019B  30EC               	movlw	236
   669  019C  1283               	bcf	3,5	;RP0=0, select bank0
   670  019D  1303               	bcf	3,6	;RP1=0, select bank0
   671  019E  0081               	movwf	1	;volatile
   672  019F                     l1057:
   673                           
   674                           ;ADC.c: 147:     INTCONbits.T0IF = 0;
   675  019F  110B               	bcf	11,2	;volatile
   676  01A0                     l1059:
   677                           
   678                           ;ADC.c: 148:     INTCONbits.T0IE = 1;
   679  01A0  168B               	bsf	11,5	;volatile
   680  01A1                     l1061:
   681                           
   682                           ;ADC.c: 150:     ADCON0bits.CHS0 = 0;
   683  01A1  111F               	bcf	31,2	;volatile
   684  01A2                     l1063:
   685                           
   686                           ;ADC.c: 151:     ADCON0bits.CHS1 = 0;
   687  01A2  119F               	bcf	31,3	;volatile
   688  01A3                     l1065:
   689                           
   690                           ;ADC.c: 152:     ADCON0bits.CHS2 = 1;
   691  01A3  161F               	bsf	31,4	;volatile
   692  01A4                     l1067:
   693                           
   694                           ;ADC.c: 153:     ADCON0bits.CHS3 = 1;
   695  01A4  169F               	bsf	31,5	;volatile
   696  01A5                     l1069:
   697                           
   698                           ;ADC.c: 156:     ADCON0bits.ADON = 1;
   699  01A5  141F               	bsf	31,0	;volatile
   700  01A6                     l1071:
   701                           
   702                           ;ADC.c: 157:     _delay((unsigned long)((50)*(4000000/4000000.0)));
   703  01A6  300F               	movlw	15
   704  01A7  1283               	bcf	3,5	;RP0=0, select bank0
   705  01A8  1303               	bcf	3,6	;RP1=0, select bank0
   706  01A9  00A0               	movwf	??_setup
   707  01AA                     u577:
   708  01AA  0BA0               	decfsz	??_setup,f
   709  01AB  29AA               	goto	u577
   710  01AC  29AD               	nop2
   711  01AD                     l1073:
   712                           
   713                           ;ADC.c: 159:     ADCON1bits.VCFG0 = 0;
   714  01AD  1683               	bsf	3,5	;RP0=1, select bank1
   715  01AE  1303               	bcf	3,6	;RP1=0, select bank1
   716  01AF  121F               	bcf	31,4	;volatile
   717  01B0                     l1075:
   718                           
   719                           ;ADC.c: 160:     ADCON1bits.VCFG1 = 0;
   720  01B0  129F               	bcf	31,5	;volatile
   721  01B1                     l1077:
   722                           
   723                           ;ADC.c: 162:     ADCON0bits.ADCS0 = 1;
   724  01B1  1283               	bcf	3,5	;RP0=0, select bank0
   725  01B2  1303               	bcf	3,6	;RP1=0, select bank0
   726  01B3  171F               	bsf	31,6	;volatile
   727  01B4                     l1079:
   728                           
   729                           ;ADC.c: 163:     ADCON0bits.ADCS1 = 1;
   730  01B4  179F               	bsf	31,7	;volatile
   731  01B5                     l1081:
   732                           
   733                           ;ADC.c: 165:     INTCONbits.GIE = 1;
   734  01B5  178B               	bsf	11,7	;volatile
   735  01B6                     l1083:
   736                           
   737                           ;ADC.c: 166:     INTCONbits.PEIE =1;
   738  01B6  170B               	bsf	11,6	;volatile
   739  01B7                     l1085:
   740                           
   741                           ;ADC.c: 168:     PIR1bits.ADIF = 0;
   742  01B7  130C               	bcf	12,6	;volatile
   743  01B8                     l1087:
   744                           
   745                           ;ADC.c: 169:     PIE1bits.ADIE = 1;
   746  01B8  1683               	bsf	3,5	;RP0=1, select bank1
   747  01B9  1303               	bcf	3,6	;RP1=0, select bank1
   748  01BA  170C               	bsf	12,6	;volatile
   749  01BB                     l1089:
   750                           
   751                           ;ADC.c: 171:     ADCON1bits.ADFM =0;
   752  01BB  139F               	bcf	31,7	;volatile
   753  01BC                     l1091:
   754                           
   755                           ;ADC.c: 173:     i = 4;
   756  01BC  3004               	movlw	4
   757  01BD  1283               	bcf	3,5	;RP0=0, select bank0
   758  01BE  1303               	bcf	3,6	;RP1=0, select bank0
   759  01BF  00A0               	movwf	??_setup
   760  01C0  0820               	movf	??_setup,w
   761  01C1  00F1               	movwf	_i
   762  01C2                     l1093:
   763                           
   764                           ;ADC.c: 174:     u = 0;
   765  01C2  01F4               	clrf	_u
   766  01C3                     l1095:
   767                           
   768                           ;ADC.c: 175:     d = 0;
   769  01C3  01F3               	clrf	_d
   770  01C4                     l1097:
   771                           
   772                           ;ADC.c: 176:     c = 0;
   773  01C4  01F2               	clrf	_c
   774  01C5                     l89:
   775  01C5  0008               	return
   776  01C6                     __end_of_setup:
   777                           
   778                           	psect	text2
   779  01C6                     __ptext2:	
   780 ;; *************** function ___wmul *****************
   781 ;; Defined at:
   782 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
   783 ;; Parameters:    Size  Location     Type
   784 ;;  multiplier      2    0[BANK0 ] unsigned int 
   785 ;;  multiplicand    2    2[BANK0 ] unsigned int 
   786 ;; Auto vars:     Size  Location     Type
   787 ;;  product         2    4[BANK0 ] unsigned int 
   788 ;; Return value:  Size  Location     Type
   789 ;;                  2    0[BANK0 ] unsigned int 
   790 ;; Registers used:
   791 ;;		wreg, status,2, status,0
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   797 ;;      Params:         0       4       0       0       0
   798 ;;      Locals:         0       2       0       0       0
   799 ;;      Temps:          0       0       0       0       0
   800 ;;      Totals:         0       6       0       0       0
   801 ;;Total ram usage:        6 bytes
   802 ;; Hardware stack levels used:    1
   803 ;; Hardware stack levels required when called:    2
   804 ;; This function calls:
   805 ;;		Nothing
   806 ;; This function is called by:
   807 ;;		_main
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           
   812                           ;psect for function ___wmul
   813  01C6                     ___wmul:
   814  01C6                     l1101:	
   815                           ;incstack = 0
   816                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   817                           
   818  01C6  1283               	bcf	3,5	;RP0=0, select bank0
   819  01C7  1303               	bcf	3,6	;RP1=0, select bank0
   820  01C8  01A4               	clrf	___wmul@product
   821  01C9  01A5               	clrf	___wmul@product+1
   822  01CA                     l1103:
   823  01CA  1C20               	btfss	___wmul@multiplier,0
   824  01CB  29CD               	goto	u491
   825  01CC  29CE               	goto	u490
   826  01CD                     u491:
   827  01CD  29D4               	goto	l175
   828  01CE                     u490:
   829  01CE                     l1105:
   830  01CE  0822               	movf	___wmul@multiplicand,w
   831  01CF  07A4               	addwf	___wmul@product,f
   832  01D0  1803               	skipnc
   833  01D1  0AA5               	incf	___wmul@product+1,f
   834  01D2  0823               	movf	___wmul@multiplicand+1,w
   835  01D3  07A5               	addwf	___wmul@product+1,f
   836  01D4                     l175:
   837  01D4  3001               	movlw	1
   838  01D5                     u505:
   839  01D5  1003               	clrc
   840  01D6  0DA2               	rlf	___wmul@multiplicand,f
   841  01D7  0DA3               	rlf	___wmul@multiplicand+1,f
   842  01D8  3EFF               	addlw	-1
   843  01D9  1D03               	skipz
   844  01DA  29D5               	goto	u505
   845  01DB                     l1107:
   846  01DB  3001               	movlw	1
   847  01DC                     u515:
   848  01DC  1003               	clrc
   849  01DD  0CA1               	rrf	___wmul@multiplier+1,f
   850  01DE  0CA0               	rrf	___wmul@multiplier,f
   851  01DF  3EFF               	addlw	-1
   852  01E0  1D03               	skipz
   853  01E1  29DC               	goto	u515
   854  01E2                     l1109:
   855  01E2  0820               	movf	___wmul@multiplier,w
   856  01E3  0421               	iorwf	___wmul@multiplier+1,w
   857  01E4  1D03               	btfss	3,2
   858  01E5  29E7               	goto	u521
   859  01E6  29E8               	goto	u520
   860  01E7                     u521:
   861  01E7  29CA               	goto	l1103
   862  01E8                     u520:
   863  01E8                     l1111:
   864  01E8  0825               	movf	___wmul@product+1,w
   865  01E9  00A1               	movwf	?___wmul+1
   866  01EA  0824               	movf	___wmul@product,w
   867  01EB  00A0               	movwf	?___wmul
   868  01EC                     l177:
   869  01EC  0008               	return
   870  01ED                     __end_of___wmul:
   871                           
   872                           	psect	text3
   873  01ED                     __ptext3:	
   874 ;; *************** function ___bmul *****************
   875 ;; Defined at:
   876 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;  multiplier      1    wreg     unsigned char 
   879 ;;  multiplicand    1    0[BANK0 ] unsigned char 
   880 ;; Auto vars:     Size  Location     Type
   881 ;;  multiplier      1    3[BANK0 ] unsigned char 
   882 ;;  product         1    2[BANK0 ] unsigned char 
   883 ;; Return value:  Size  Location     Type
   884 ;;                  1    wreg      unsigned char 
   885 ;; Registers used:
   886 ;;		wreg, status,2, status,0
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   892 ;;      Params:         0       1       0       0       0
   893 ;;      Locals:         0       2       0       0       0
   894 ;;      Temps:          0       1       0       0       0
   895 ;;      Totals:         0       4       0       0       0
   896 ;;Total ram usage:        4 bytes
   897 ;; Hardware stack levels used:    1
   898 ;; Hardware stack levels required when called:    2
   899 ;; This function calls:
   900 ;;		Nothing
   901 ;; This function is called by:
   902 ;;		_main
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           
   907                           ;psect for function ___bmul
   908  01ED                     ___bmul:
   909                           
   910                           ;incstack = 0
   911                           ; Regs used in ___bmul: [wreg+status,2+status,0]
   912                           ;___bmul@multiplier stored from wreg
   913  01ED  1283               	bcf	3,5	;RP0=0, select bank0
   914  01EE  1303               	bcf	3,6	;RP1=0, select bank0
   915  01EF  00A3               	movwf	___bmul@multiplier
   916  01F0                     l1115:
   917  01F0  01A2               	clrf	___bmul@product
   918  01F1                     l1117:
   919  01F1  1C23               	btfss	___bmul@multiplier,0
   920  01F2  29F4               	goto	u531
   921  01F3  29F5               	goto	u530
   922  01F4                     u531:
   923  01F4  29F9               	goto	l1121
   924  01F5                     u530:
   925  01F5                     l1119:
   926  01F5  0820               	movf	___bmul@multiplicand,w
   927  01F6  00A1               	movwf	??___bmul
   928  01F7  0821               	movf	??___bmul,w
   929  01F8  07A2               	addwf	___bmul@product,f
   930  01F9                     l1121:
   931  01F9  1003               	clrc
   932  01FA  0DA0               	rlf	___bmul@multiplicand,f
   933  01FB                     l1123:
   934  01FB  1003               	clrc
   935  01FC  0CA3               	rrf	___bmul@multiplier,f
   936  01FD  0823               	movf	___bmul@multiplier,w
   937  01FE  1D03               	btfss	3,2
   938  01FF  2A01               	goto	u541
   939  0200  2A02               	goto	u540
   940  0201                     u541:
   941  0201  29F1               	goto	l1117
   942  0202                     u540:
   943  0202                     l1125:
   944  0202  0822               	movf	___bmul@product,w
   945  0203                     l201:
   946  0203  0008               	return
   947  0204                     __end_of___bmul:
   948                           
   949                           	psect	text4
   950  0115                     __ptext4:	
   951 ;; *************** function ___awdiv *****************
   952 ;; Defined at:
   953 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;  divisor         2    6[BANK0 ] int 
   956 ;;  dividend        2    8[BANK0 ] int 
   957 ;; Auto vars:     Size  Location     Type
   958 ;;  quotient        2   13[BANK0 ] int 
   959 ;;  sign            1   12[BANK0 ] unsigned char 
   960 ;;  counter         1   11[BANK0 ] unsigned char 
   961 ;; Return value:  Size  Location     Type
   962 ;;                  2    6[BANK0 ] int 
   963 ;; Registers used:
   964 ;;		wreg, status,2, status,0
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   970 ;;      Params:         0       4       0       0       0
   971 ;;      Locals:         0       4       0       0       0
   972 ;;      Temps:          0       1       0       0       0
   973 ;;      Totals:         0       9       0       0       0
   974 ;;Total ram usage:        9 bytes
   975 ;; Hardware stack levels used:    1
   976 ;; Hardware stack levels required when called:    2
   977 ;; This function calls:
   978 ;;		Nothing
   979 ;; This function is called by:
   980 ;;		_main
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           
   985                           ;psect for function ___awdiv
   986  0115                     ___awdiv:
   987  0115                     l919:	
   988                           ;incstack = 0
   989                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   990                           
   991  0115  1283               	bcf	3,5	;RP0=0, select bank0
   992  0116  1303               	bcf	3,6	;RP1=0, select bank0
   993  0117  01AC               	clrf	___awdiv@sign
   994  0118                     l921:
   995  0118  1FA7               	btfss	___awdiv@divisor+1,7
   996  0119  291B               	goto	u311
   997  011A  291C               	goto	u310
   998  011B                     u311:
   999  011B  2923               	goto	l927
  1000  011C                     u310:
  1001  011C                     l923:
  1002  011C  09A6               	comf	___awdiv@divisor,f
  1003  011D  09A7               	comf	___awdiv@divisor+1,f
  1004  011E  0AA6               	incf	___awdiv@divisor,f
  1005  011F  1903               	skipnz
  1006  0120  0AA7               	incf	___awdiv@divisor+1,f
  1007  0121                     l925:
  1008  0121  01AC               	clrf	___awdiv@sign
  1009  0122  0AAC               	incf	___awdiv@sign,f
  1010  0123                     l927:
  1011  0123  1FA9               	btfss	___awdiv@dividend+1,7
  1012  0124  2926               	goto	u321
  1013  0125  2927               	goto	u320
  1014  0126                     u321:
  1015  0126  2930               	goto	l933
  1016  0127                     u320:
  1017  0127                     l929:
  1018  0127  09A8               	comf	___awdiv@dividend,f
  1019  0128  09A9               	comf	___awdiv@dividend+1,f
  1020  0129  0AA8               	incf	___awdiv@dividend,f
  1021  012A  1903               	skipnz
  1022  012B  0AA9               	incf	___awdiv@dividend+1,f
  1023  012C                     l931:
  1024  012C  3001               	movlw	1
  1025  012D  00AA               	movwf	??___awdiv
  1026  012E  082A               	movf	??___awdiv,w
  1027  012F  06AC               	xorwf	___awdiv@sign,f
  1028  0130                     l933:
  1029  0130  01AD               	clrf	___awdiv@quotient
  1030  0131  01AE               	clrf	___awdiv@quotient+1
  1031  0132                     l935:
  1032  0132  0826               	movf	___awdiv@divisor,w
  1033  0133  0427               	iorwf	___awdiv@divisor+1,w
  1034  0134  1903               	btfsc	3,2
  1035  0135  2937               	goto	u331
  1036  0136  2938               	goto	u330
  1037  0137                     u331:
  1038  0137  296F               	goto	l955
  1039  0138                     u330:
  1040  0138                     l937:
  1041  0138  01AB               	clrf	___awdiv@counter
  1042  0139  0AAB               	incf	___awdiv@counter,f
  1043  013A  2946               	goto	l943
  1044  013B                     l939:
  1045  013B  3001               	movlw	1
  1046  013C                     u345:
  1047  013C  1003               	clrc
  1048  013D  0DA6               	rlf	___awdiv@divisor,f
  1049  013E  0DA7               	rlf	___awdiv@divisor+1,f
  1050  013F  3EFF               	addlw	-1
  1051  0140  1D03               	skipz
  1052  0141  293C               	goto	u345
  1053  0142                     l941:
  1054  0142  3001               	movlw	1
  1055  0143  00AA               	movwf	??___awdiv
  1056  0144  082A               	movf	??___awdiv,w
  1057  0145  07AB               	addwf	___awdiv@counter,f
  1058  0146                     l943:
  1059  0146  1FA7               	btfss	___awdiv@divisor+1,7
  1060  0147  2949               	goto	u351
  1061  0148  294A               	goto	u350
  1062  0149                     u351:
  1063  0149  293B               	goto	l939
  1064  014A                     u350:
  1065  014A                     l945:
  1066  014A  3001               	movlw	1
  1067  014B                     u365:
  1068  014B  1003               	clrc
  1069  014C  0DAD               	rlf	___awdiv@quotient,f
  1070  014D  0DAE               	rlf	___awdiv@quotient+1,f
  1071  014E  3EFF               	addlw	-1
  1072  014F  1D03               	skipz
  1073  0150  294B               	goto	u365
  1074  0151  0827               	movf	___awdiv@divisor+1,w
  1075  0152  0229               	subwf	___awdiv@dividend+1,w
  1076  0153  1D03               	skipz
  1077  0154  2957               	goto	u375
  1078  0155  0826               	movf	___awdiv@divisor,w
  1079  0156  0228               	subwf	___awdiv@dividend,w
  1080  0157                     u375:
  1081  0157  1C03               	skipc
  1082  0158  295A               	goto	u371
  1083  0159  295B               	goto	u370
  1084  015A                     u371:
  1085  015A  2962               	goto	l951
  1086  015B                     u370:
  1087  015B                     l947:
  1088  015B  0826               	movf	___awdiv@divisor,w
  1089  015C  02A8               	subwf	___awdiv@dividend,f
  1090  015D  0827               	movf	___awdiv@divisor+1,w
  1091  015E  1C03               	skipc
  1092  015F  03A9               	decf	___awdiv@dividend+1,f
  1093  0160  02A9               	subwf	___awdiv@dividend+1,f
  1094  0161                     l949:
  1095  0161  142D               	bsf	___awdiv@quotient,0
  1096  0162                     l951:
  1097  0162  3001               	movlw	1
  1098  0163                     u385:
  1099  0163  1003               	clrc
  1100  0164  0CA7               	rrf	___awdiv@divisor+1,f
  1101  0165  0CA6               	rrf	___awdiv@divisor,f
  1102  0166  3EFF               	addlw	-1
  1103  0167  1D03               	skipz
  1104  0168  2963               	goto	u385
  1105  0169                     l953:
  1106  0169  3001               	movlw	1
  1107  016A  02AB               	subwf	___awdiv@counter,f
  1108  016B  1D03               	btfss	3,2
  1109  016C  296E               	goto	u391
  1110  016D  296F               	goto	u390
  1111  016E                     u391:
  1112  016E  294A               	goto	l945
  1113  016F                     u390:
  1114  016F                     l955:
  1115  016F  082C               	movf	___awdiv@sign,w
  1116  0170  1903               	btfsc	3,2
  1117  0171  2973               	goto	u401
  1118  0172  2974               	goto	u400
  1119  0173                     u401:
  1120  0173  2979               	goto	l959
  1121  0174                     u400:
  1122  0174                     l957:
  1123  0174  09AD               	comf	___awdiv@quotient,f
  1124  0175  09AE               	comf	___awdiv@quotient+1,f
  1125  0176  0AAD               	incf	___awdiv@quotient,f
  1126  0177  1903               	skipnz
  1127  0178  0AAE               	incf	___awdiv@quotient+1,f
  1128  0179                     l959:
  1129  0179  082E               	movf	___awdiv@quotient+1,w
  1130  017A  00A7               	movwf	?___awdiv+1
  1131  017B  082D               	movf	___awdiv@quotient,w
  1132  017C  00A6               	movwf	?___awdiv
  1133  017D                     l328:
  1134  017D  0008               	return
  1135  017E                     __end_of___awdiv:
  1136                           
  1137                           	psect	text5
  1138  001E                     __ptext5:	
  1139 ;; *************** function _isr *****************
  1140 ;; Defined at:
  1141 ;;		line 51 in file "ADC.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;		None
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;		None
  1146 ;; Return value:  Size  Location     Type
  1147 ;;                  1    wreg      void 
  1148 ;; Registers used:
  1149 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1155 ;;      Params:         0       0       0       0       0
  1156 ;;      Locals:         0       0       0       0       0
  1157 ;;      Temps:          5       0       0       0       0
  1158 ;;      Totals:         5       0       0       0       0
  1159 ;;Total ram usage:        5 bytes
  1160 ;; Hardware stack levels used:    2
  1161 ;; This function calls:
  1162 ;;		Nothing
  1163 ;; This function is called by:
  1164 ;;		Interrupt level 1
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           
  1169                           ;psect for function _isr
  1170  001E                     _isr:
  1171  001E                     i1l963:
  1172                           
  1173                           ;ADC.c: 53:     if(PIR1bits.ADIF){
  1174  001E  1F0C               	btfss	12,6	;volatile
  1175  001F  2821               	goto	u41_21
  1176  0020  2822               	goto	u41_20
  1177  0021                     u41_21:
  1178  0021  284C               	goto	i1l983
  1179  0022                     u41_20:
  1180  0022                     i1l965:
  1181                           
  1182                           ;ADC.c: 55:         if (ADCON0bits.CHS == 12){
  1183  0022  0C1F               	rrf	31,w	;volatile
  1184  0023  00F5               	movwf	??_isr
  1185  0024  0C75               	rrf	??_isr,w
  1186  0025  390F               	andlw	15
  1187  0026  3A0C               	xorlw	12
  1188  0027  1D03               	skipz
  1189  0028  282A               	goto	u42_21
  1190  0029  282B               	goto	u42_20
  1191  002A                     u42_21:
  1192  002A  2837               	goto	i1l973
  1193  002B                     u42_20:
  1194  002B                     i1l967:
  1195                           
  1196                           ;ADC.c: 56:             PORTA = ADRESH;
  1197  002B  081E               	movf	30,w	;volatile
  1198  002C  0085               	movwf	5	;volatile
  1199  002D                     i1l969:
  1200                           
  1201                           ;ADC.c: 58:             ADCON0bits.CHS = 10;
  1202  002D  081F               	movf	31,w	;volatile
  1203  002E  39C3               	andlw	-61
  1204  002F  3828               	iorlw	40
  1205  0030  009F               	movwf	31	;volatile
  1206  0031                     i1l971:
  1207                           
  1208                           ;ADC.c: 59:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  1209  0031  3010               	movlw	16
  1210  0032  00F5               	movwf	??_isr
  1211  0033                     u58_27:
  1212  0033  0BF5               	decfsz	??_isr,f
  1213  0034  2833               	goto	u58_27
  1214  0035  0000               	nop
  1215                           
  1216                           ;ADC.c: 61:         } else if (ADCON0bits.CHS == 10){
  1217  0036  2849               	goto	i1l981
  1218  0037                     i1l973:
  1219  0037  0C1F               	rrf	31,w	;volatile
  1220  0038  00F5               	movwf	??_isr
  1221  0039  0C75               	rrf	??_isr,w
  1222  003A  390F               	andlw	15
  1223  003B  3A0A               	xorlw	10
  1224  003C  1D03               	skipz
  1225  003D  283F               	goto	u43_21
  1226  003E  2840               	goto	u43_20
  1227  003F                     u43_21:
  1228  003F  2849               	goto	i1l981
  1229  0040                     u43_20:
  1230  0040                     i1l975:
  1231                           
  1232                           ;ADC.c: 63:             p = ADRESH;
  1233  0040  081E               	movf	30,w	;volatile
  1234  0041  00F5               	movwf	??_isr
  1235  0042  0875               	movf	??_isr,w
  1236  0043  00F0               	movwf	_p
  1237  0044                     i1l977:
  1238                           
  1239                           ;ADC.c: 64:             ADCON0bits.CHS = 12;
  1240  0044  081F               	movf	31,w	;volatile
  1241  0045  39C3               	andlw	-61
  1242  0046  3830               	iorlw	48
  1243  0047  009F               	movwf	31	;volatile
  1244  0048  2831               	goto	i1l971
  1245  0049                     i1l981:
  1246                           
  1247                           ;ADC.c: 68:         PIR1bits.ADIF =0;
  1248  0049  1283               	bcf	3,5	;RP0=0, select bank0
  1249  004A  1303               	bcf	3,6	;RP1=0, select bank0
  1250  004B  130C               	bcf	12,6	;volatile
  1251  004C                     i1l983:
  1252                           
  1253                           ;ADC.c: 71:     if (T0IF){
  1254  004C  1D0B               	btfss	11,2	;volatile
  1255  004D  284F               	goto	u44_21
  1256  004E  2850               	goto	u44_20
  1257  004F                     u44_21:
  1258  004F  2891               	goto	i1l78
  1259  0050                     u44_20:
  1260  0050                     i1l985:
  1261                           
  1262                           ;ADC.c: 72:         PORTD =0;
  1263  0050  0188               	clrf	8	;volatile
  1264  0051                     i1l987:
  1265                           
  1266                           ;ADC.c: 74:         if (i==4){
  1267  0051  3004               	movlw	4
  1268  0052  0671               	xorwf	_i,w
  1269  0053  1D03               	btfss	3,2
  1270  0054  2856               	goto	u45_21
  1271  0055  2857               	goto	u45_20
  1272  0056                     u45_21:
  1273  0056  2862               	goto	i1l993
  1274  0057                     u45_20:
  1275  0057                     i1l989:
  1276                           
  1277                           ;ADC.c: 76:             RD0 = 1;
  1278  0057  1408               	bsf	8,0	;volatile
  1279  0058                     i1l991:
  1280                           
  1281                           ;ADC.c: 77:             PORTC = tabla[c];
  1282  0058  0872               	movf	_c,w
  1283  0059  3E01               	addlw	low ((_tabla-__stringbase)| (0+32768))
  1284  005A  0084               	movwf	4
  1285  005B  120A  118A  2204  120A  118A  	fcall	stringdir
  1286  0060  0087               	movwf	7	;volatile
  1287                           
  1288                           ;ADC.c: 78:         }
  1289  0061  2883               	goto	i1l1005
  1290  0062                     i1l993:
  1291  0062  3003               	movlw	3
  1292  0063  0671               	xorwf	_i,w
  1293  0064  1D03               	btfss	3,2
  1294  0065  2867               	goto	u46_21
  1295  0066  2868               	goto	u46_20
  1296  0067                     u46_21:
  1297  0067  2873               	goto	i1l999
  1298  0068                     u46_20:
  1299  0068                     i1l995:
  1300                           
  1301                           ;ADC.c: 80:             RD1 = 1;
  1302  0068  1488               	bsf	8,1	;volatile
  1303  0069                     i1l997:
  1304                           
  1305                           ;ADC.c: 81:             PORTC = tabla[d];
  1306  0069  0873               	movf	_d,w
  1307  006A  3E01               	addlw	low ((_tabla-__stringbase)| (0+32768))
  1308  006B  0084               	movwf	4
  1309  006C  120A  118A  2204  120A  118A  	fcall	stringdir
  1310  0071  0087               	movwf	7	;volatile
  1311                           
  1312                           ;ADC.c: 82:         }
  1313  0072  2883               	goto	i1l1005
  1314  0073                     i1l999:
  1315  0073  3002               	movlw	2
  1316  0074  0671               	xorwf	_i,w
  1317  0075  1D03               	btfss	3,2
  1318  0076  2878               	goto	u47_21
  1319  0077  2879               	goto	u47_20
  1320  0078                     u47_21:
  1321  0078  2883               	goto	i1l1005
  1322  0079                     u47_20:
  1323  0079                     i1l1001:
  1324                           
  1325                           ;ADC.c: 84:             RD2 =1;
  1326  0079  1508               	bsf	8,2	;volatile
  1327  007A                     i1l1003:
  1328                           
  1329                           ;ADC.c: 85:             PORTC =tabla[u];
  1330  007A  0874               	movf	_u,w
  1331  007B  3E01               	addlw	low ((_tabla-__stringbase)| (0+32768))
  1332  007C  0084               	movwf	4
  1333  007D  120A  118A  2204  120A  118A  	fcall	stringdir
  1334  0082  0087               	movwf	7	;volatile
  1335  0083                     i1l1005:
  1336                           
  1337                           ;ADC.c: 88:         i--;
  1338  0083  3001               	movlw	1
  1339  0084  02F1               	subwf	_i,f
  1340  0085                     i1l1007:
  1341                           
  1342                           ;ADC.c: 89:         if(i==1){
  1343  0085  0371               	decf	_i,w
  1344  0086  1D03               	btfss	3,2
  1345  0087  2889               	goto	u48_21
  1346  0088  288A               	goto	u48_20
  1347  0089                     u48_21:
  1348  0089  288E               	goto	i1l1011
  1349  008A                     u48_20:
  1350  008A                     i1l1009:
  1351                           
  1352                           ;ADC.c: 90:             i=4;
  1353  008A  3004               	movlw	4
  1354  008B  00F5               	movwf	??_isr
  1355  008C  0875               	movf	??_isr,w
  1356  008D  00F1               	movwf	_i
  1357  008E                     i1l1011:
  1358                           
  1359                           ;ADC.c: 93:         INTCONbits.T0IF = 0;
  1360  008E  110B               	bcf	11,2	;volatile
  1361                           
  1362                           ;ADC.c: 94:         TMR0= 236;
  1363  008F  30EC               	movlw	236
  1364  0090  0081               	movwf	1	;volatile
  1365  0091                     i1l78:
  1366  0091  0879               	movf	??_isr+4,w
  1367  0092  00FF               	movwf	btemp+1
  1368  0093  0878               	movf	??_isr+3,w
  1369  0094  008A               	movwf	10
  1370  0095  0877               	movf	??_isr+2,w
  1371  0096  0084               	movwf	4
  1372  0097  0E76               	swapf	??_isr+1,w
  1373  0098  0083               	movwf	3
  1374  0099  0EFE               	swapf	btemp,f
  1375  009A  0E7E               	swapf	btemp,w
  1376  009B  0009               	retfie
  1377  009C                     __end_of_isr:
  1378  007E                     btemp	set	126	;btemp
  1379  007E                     wtemp0	set	126
  1380                           
  1381                           	psect	intentry
  1382  0004                     __pintentry:	
  1383                           ;incstack = 0
  1384                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath]
  1385                           
  1386  0004                     interrupt_function:
  1387  007E                     saved_w	set	btemp
  1388  0004  00FE               	movwf	btemp
  1389  0005  0E03               	swapf	3,w
  1390  0006  00F6               	movwf	??_isr+1
  1391  0007  0804               	movf	4,w
  1392  0008  00F7               	movwf	??_isr+2
  1393  0009  080A               	movf	10,w
  1394  000A  00F8               	movwf	??_isr+3
  1395  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1396  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1397  000D  087F               	movf	btemp+1,w
  1398  000E  00F9               	movwf	??_isr+4
  1399  000F  120A  118A  281E   	ljmp	_isr
  1400                           
  1401                           	psect	config
  1402                           
  1403                           ;Config register CONFIG1 @ 0x2007
  1404                           ;	Oscillator Selection bits
  1405                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1406                           ;	Watchdog Timer Enable bit
  1407                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1408                           ;	Power-up Timer Enable bit
  1409                           ;	PWRTE = OFF, PWRT disabled
  1410                           ;	RE3/MCLR pin function select bit
  1411                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1412                           ;	Code Protection bit
  1413                           ;	CP = OFF, Program memory code protection is disabled
  1414                           ;	Data Code Protection bit
  1415                           ;	CPD = OFF, Data memory code protection is disabled
  1416                           ;	Brown Out Reset Selection bits
  1417                           ;	BOREN = OFF, BOR disabled
  1418                           ;	Internal External Switchover bit
  1419                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1420                           ;	Fail-Safe Clock Monitor Enabled bit
  1421                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1422                           ;	Low Voltage Programming Enable bit
  1423                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1424                           ;	In-Circuit Debugger Mode bit
  1425                           ;	DEBUG = 0x1, unprogrammed default
  1426  2007                     	org	8199
  1427  2007  38D4               	dw	14548
  1428                           
  1429                           ;Config register CONFIG2 @ 0x2008
  1430                           ;	Brown-out Reset Selection bit
  1431                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1432                           ;	Flash Program Memory Self Write Enable bits
  1433                           ;	WRT = OFF, Write protection off
  1434  2008                     	org	8200
  1435  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    9
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     19      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1236
                                             15 BANK0      4     4      0
                            ___awdiv
                             ___bmul
                             ___wmul
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     316
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___wmul (ARG)
   ___bmul
   ___wmul
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      13       5       23.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1D      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Apr 24 13:52:56 2021

                      _c 0072                        _d 0073                        _i 0071  
                      _p 0070                        _u 0074                        pc 0002  
         ___bmul@product 0022                       l89 01C5             ___awdiv@sign 002C  
                     fsr 0004      ___wmul@multiplicand 0022                      l201 0203  
                    l175 01D4                      l328 017D                      l177 01EC  
                    l921 0118                      l931 012C                      l923 011C  
                    l941 0142                      l933 0130                      l925 0121  
                    l951 0162                      l943 0146                      l935 0132  
                    l927 0123                      l919 0115                      l953 0169  
                    l945 014A                      l937 0138                      l929 0127  
                    l947 015B                      l939 013B                      l955 016F  
                    l957 0174                      l949 0161                      l959 0179  
                    _RD0 0040                      _RD1 0041                      _RD2 0042  
                    u310 011C                      u311 011B                      u400 0174  
                    u320 0127                      u401 0173                      u321 0126  
                    u330 0138                      u331 0137                      u350 014A  
                    u351 0149                      u520 01E8                      u345 013C  
                    u521 01E7                      u505 01D5                      u370 015B  
                    u530 01F5                      u371 015A                      u531 01F4  
                    u515 01DC                      u540 0202                      u365 014B  
                    u541 0201                      u390 016F                      u391 016E  
                    u375 0157                      u385 0163                      u490 01CE  
                    u491 01CD                      u557 00A5                      u567 010E  
                    u577 01AA                      _isr 001E                      fsr0 0004  
                   l1101 01C6                     l1111 01E8                     l1103 01CA  
                   l1031 0183                     l1121 01F9                     l1105 01CE  
                   l1041 0194                     l1033 0186                     l1123 01FB  
                   l1115 01F0                     l1107 01DB                     l1051 0199  
                   l1043 0195                     l1035 0187                     l1027 017E  
                   l1131 00A1                     l1125 0202                     l1117 01F1  
                   l1109 01E2                     l1061 01A1                     l1053 019A  
                   l1045 0196                     l1037 0190                     l1029 0181  
                   l1141 0109                     l1133 00A8                     l1119 01F5  
                   l1071 01A6                     l1063 01A2                     l1055 019B  
                   l1047 0197                     l1039 0193                     l1135 00AB  
                   l1081 01B5                     l1073 01AD                     l1065 01A3  
                   l1057 019F                     l1049 0198                     l1137 00C3  
                   l1129 009C                     l1091 01BC                     l1083 01B6  
                   l1075 01B0                     l1067 01A4                     l1059 01A0  
                   l1139 00EB                     l1093 01C2                     l1085 01B7  
                   l1077 01B1                     l1069 01A5                     l1095 01C3  
                   l1087 01B8                     l1079 01B4                     l1097 01C4  
                   l1089 01BB                     ?_isr 0075                     _T0IF 005A  
                   i1l78 0091                     _TMR0 0001                     _main 009C  
                   btemp 007E                     start 0012        ___bmul@multiplier 0023  
                  ??_isr 0075                    ?_main 0075          __end_of___awdiv 017E  
                  _ANSEL 0188          ___awdiv@divisor 0026                    i1l971 0031  
                  i1l963 001E                    i1l981 0049                    i1l973 0037  
                  i1l965 0022                    i1l991 0058                    i1l975 0040  
                  i1l967 002B                    i1l983 004C                    i1l993 0062  
                  i1l985 0050                    i1l977 0044                    i1l969 002D  
                  i1l995 0068                    i1l987 0051                    i1l997 0069  
                  i1l989 0057                    i1l999 0073          ___awdiv@counter 002B  
                  u41_20 0022                    u41_21 0021                    u42_20 002B  
                  u42_21 002A                    u43_20 0040                    u43_21 003F  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    u44_20 0050                    u44_21 004F  
                  u45_20 0057                    u45_21 0056                    u46_20 0068  
                  u46_21 0067                    u47_20 0079                    u47_21 0078  
                  u48_20 008A                    u48_21 0089                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  u58_27 0033                    _tabla 020A                    _setup 017E  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0015             __end_of_main 0115                   ??_main 002F  
                 _ADRESH 001E         ___awdiv@dividend 0028                   ?_setup 0075  
                 _ANSELH 0189                   i1l1001 0079                   i1l1011 008E  
                 i1l1003 007A                   i1l1005 0083                   i1l1007 0085  
                 i1l1009 008A                   ___bmul 01ED                   ___wmul 01C6  
              ??___awdiv 002A         ___awdiv@quotient 002D                   saved_w 007E  
__end_of__initialization 001A      ___bmul@multiplicand 0020           __pcstackCOMMON 0075  
          __end_of_tabla 0213            __end_of_setup 01C6           _OPTION_REGbits 0081  
                ??_setup 0020               __pmaintext 009C                  ?___bmul 0020  
                ?___wmul 0020               __pintentry 0004               __stringtab 0204  
        __size_of___bmul 0017                  ___awdiv 0115          __size_of___wmul 0027  
                __ptext1 017E                  __ptext2 01C6                  __ptext3 01ED  
                __ptext4 0115                  __ptext5 001E             __size_of_isr 007E  
   end_of_initialization 001A           __end_of___bmul 0204           __end_of___wmul 01ED  
    start_initialization 0015              __end_of_isr 009C                 ??___bmul 0021  
               ??___wmul 0024              __pbssCOMMON 0070                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0026                __pstrings 0204  
         __size_of_setup 0048        interrupt_function 0004           ___wmul@product 0024  
               _PIE1bits 008C                 _PIR1bits 000C               _ADCON0bits 001F  
            __stringbase 0209               _ADCON1bits 009F        ___wmul@multiplier 0020  
       __size_of___awdiv 0069       __end_of__stringtab 020A            __size_of_main 0079  
             _INTCONbits 000B                 intlevel1 0000                stringcode 0204  
             _OSCCONbits 008F                 stringdir 0204                 stringtab 0204  
