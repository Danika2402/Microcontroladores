

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Apr 25 22:00:25 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209                           
   210                           	psect	strings
   211  0207                     __pstrings:
   212  0207                     stringtab:
   213  0207                     __stringtab:
   214  0207                     stringcode:	
   215                           ;	String table - string pointers are 1 byte each
   216                           
   217  0207                     stringdir:
   218  0207  3002               	movlw	high stringdir
   219  0208  008A               	movwf	10
   220  0209  0804               	movf	4,w
   221  020A  0A84               	incf	4,f
   222  020B  0782               	addwf	2,f
   223  020C                     __stringbase:
   224  020C  3400               	retlw	0
   225  020D                     __end_of__stringtab:
   226  020D                     _tabla:
   227  020D  347E               	retlw	126
   228  020E  343F               	retlw	63
   229  020F  3406               	retlw	6
   230  0210  345B               	retlw	91
   231  0211  344F               	retlw	79
   232  0212  3466               	retlw	102
   233  0213  346D               	retlw	109
   234  0214  347D               	retlw	125
   235  0215  3407               	retlw	7
   236  0216  347F               	retlw	127
   237  0217                     __end_of_tabla:
   238  0006                     _PORTB	set	6
   239  0001                     _TMR0	set	1
   240  000B                     _INTCONbits	set	11
   241  0007                     _PORTC	set	7
   242  0008                     _PORTD	set	8
   243  001E                     _ADRESH	set	30
   244  0005                     _PORTA	set	5
   245  001F                     _ADCON0bits	set	31
   246  000C                     _PIR1bits	set	12
   247  0042                     _RD2	set	66
   248  0041                     _RD1	set	65
   249  0040                     _RD0	set	64
   250  005A                     _T0IF	set	90
   251  008C                     _PIE1bits	set	140
   252  009F                     _ADCON1bits	set	159
   253  0081                     _OPTION_REGbits	set	129
   254  008F                     _OSCCONbits	set	143
   255  0088                     _TRISD	set	136
   256  0086                     _TRISB	set	134
   257  0087                     _TRISC	set	135
   258  0085                     _TRISA	set	133
   259  0189                     _ANSELH	set	393
   260  0188                     _ANSEL	set	392
   261                           
   262                           	psect	cinit
   263  0015                     start_initialization:	
   264                           ; #config settings
   265                           
   266  0015                     __initialization:
   267                           
   268                           ; Clear objects allocated to COMMON
   269  0015  01F0               	clrf	__pbssCOMMON& (0+127)
   270  0016  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   271  0017  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   272  0018  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   273  0019  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   274  001A                     end_of_initialization:	
   275                           ;End of C runtime variable initialization code
   276                           
   277  001A                     __end_of__initialization:
   278  001A  0183               	clrf	3
   279  001B  120A  118A  289C   	ljmp	_main	;jump to C main() function
   280                           
   281                           	psect	bssCOMMON
   282  0070                     __pbssCOMMON:
   283  0070                     _p:
   284  0070                     	ds	1
   285  0071                     _i:
   286  0071                     	ds	1
   287  0072                     _c:
   288  0072                     	ds	1
   289  0073                     _d:
   290  0073                     	ds	1
   291  0074                     _u:
   292  0074                     	ds	1
   293                           
   294                           	psect	cstackCOMMON
   295  0075                     __pcstackCOMMON:
   296  0075                     ?_setup:
   297  0075                     ?_isr:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0075                     ??_isr:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0075                     ?_main:	
   304                           ; 1 bytes @ 0x0
   305                           
   306                           
   307                           ; 1 bytes @ 0x0
   308  0075                     	ds	5
   309                           
   310                           	psect	cstackBANK0
   311  0020                     __pcstackBANK0:
   312  0020                     ??_setup:
   313  0020                     ?___bmul:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0020                     ?___wmul:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0020                     ___bmul@multiplicand:	
   320                           ; 2 bytes @ 0x0
   321                           
   322  0020                     ___wmul@multiplier:	
   323                           ; 1 bytes @ 0x0
   324                           
   325                           
   326                           ; 2 bytes @ 0x0
   327  0020                     	ds	1
   328  0021                     ??___bmul:
   329                           
   330                           ; 1 bytes @ 0x1
   331  0021                     	ds	1
   332  0022                     ___bmul@product:
   333  0022                     ___wmul@multiplicand:	
   334                           ; 1 bytes @ 0x2
   335                           
   336                           
   337                           ; 2 bytes @ 0x2
   338  0022                     	ds	1
   339  0023                     ___bmul@multiplier:
   340                           
   341                           ; 1 bytes @ 0x3
   342  0023                     	ds	1
   343  0024                     ??___wmul:
   344  0024                     ___wmul@product:	
   345                           ; 1 bytes @ 0x4
   346                           
   347                           
   348                           ; 2 bytes @ 0x4
   349  0024                     	ds	2
   350  0026                     ?___awdiv:
   351  0026                     ___awdiv@divisor:	
   352                           ; 2 bytes @ 0x6
   353                           
   354                           
   355                           ; 2 bytes @ 0x6
   356  0026                     	ds	2
   357  0028                     ___awdiv@dividend:
   358                           
   359                           ; 2 bytes @ 0x8
   360  0028                     	ds	2
   361  002A                     ??___awdiv:
   362                           
   363                           ; 1 bytes @ 0xA
   364  002A                     	ds	1
   365  002B                     ___awdiv@counter:
   366                           
   367                           ; 1 bytes @ 0xB
   368  002B                     	ds	1
   369  002C                     ___awdiv@sign:
   370                           
   371                           ; 1 bytes @ 0xC
   372  002C                     	ds	1
   373  002D                     ___awdiv@quotient:
   374                           
   375                           ; 2 bytes @ 0xD
   376  002D                     	ds	2
   377  002F                     ??_main:
   378                           
   379                           ; 1 bytes @ 0xF
   380  002F                     	ds	4
   381                           
   382                           	psect	maintext
   383  009C                     __pmaintext:	
   384 ;;
   385 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   386 ;;
   387 ;; *************** function _main *****************
   388 ;; Defined at:
   389 ;;		line 99 in file "ADC.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;		None
   392 ;; Auto vars:     Size  Location     Type
   393 ;;		None
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      void 
   396 ;; Registers used:
   397 ;;		wreg, status,2, status,0, pclath, cstack
   398 ;; Tracked objects:
   399 ;;		On entry : B00/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   403 ;;      Params:         0       0       0       0       0
   404 ;;      Locals:         0       0       0       0       0
   405 ;;      Temps:          0       4       0       0       0
   406 ;;      Totals:         0       4       0       0       0
   407 ;;Total ram usage:        4 bytes
   408 ;; Hardware stack levels required when called:    3
   409 ;; This function calls:
   410 ;;		___awdiv
   411 ;;		___bmul
   412 ;;		___wmul
   413 ;;		_setup
   414 ;; This function is called by:
   415 ;;		Startup code after reset
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419                           
   420                           ;psect for function _main
   421  009C                     _main:
   422  009C                     l1129:	
   423                           ;incstack = 0
   424                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   425                           
   426                           
   427                           ;ADC.c: 100:     setup();
   428  009C  120A  118A  217E  120A  118A  	fcall	_setup
   429  00A1                     l1131:
   430                           
   431                           ;ADC.c: 102:     _delay((unsigned long)((50)*(4000000/4000000.0)));
   432  00A1  300F               	movlw	15
   433  00A2  1283               	bcf	3,5	;RP0=0, select bank0
   434  00A3  1303               	bcf	3,6	;RP1=0, select bank0
   435  00A4  00AF               	movwf	??_main
   436  00A5                     u557:
   437  00A5  0BAF               	decfsz	??_main,f
   438  00A6  28A5               	goto	u557
   439  00A7  28A8               	nop2
   440  00A8                     l1133:
   441                           
   442                           ;ADC.c: 103:     ADCON0bits.GO_nDONE =1;
   443  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   444  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   445  00AA  149F               	bsf	31,1	;volatile
   446  00AB                     l1135:
   447                           
   448                           ;ADC.c: 108:             c = p/100;
   449  00AB  3064               	movlw	100
   450  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   451  00AD  1303               	bcf	3,6	;RP1=0, select bank0
   452  00AE  00A6               	movwf	___awdiv@divisor
   453  00AF  3000               	movlw	0
   454  00B0  00A7               	movwf	___awdiv@divisor+1
   455  00B1  0870               	movf	_p,w
   456  00B2  00AF               	movwf	??_main
   457  00B3  01B0               	clrf	??_main+1
   458  00B4  082F               	movf	??_main,w
   459  00B5  00A8               	movwf	___awdiv@dividend
   460  00B6  0830               	movf	??_main+1,w
   461  00B7  00A9               	movwf	___awdiv@dividend+1
   462  00B8  120A  118A  2115  120A  118A  	fcall	___awdiv
   463  00BD  1283               	bcf	3,5	;RP0=0, select bank0
   464  00BE  1303               	bcf	3,6	;RP1=0, select bank0
   465  00BF  0826               	movf	?___awdiv,w
   466  00C0  00B1               	movwf	??_main+2
   467  00C1  0831               	movf	??_main+2,w
   468  00C2  00F2               	movwf	_c
   469  00C3                     l1137:
   470                           
   471                           ;ADC.c: 109:             d = (p -(c * 100))/10;
   472  00C3  300A               	movlw	10
   473  00C4  00A6               	movwf	___awdiv@divisor
   474  00C5  3000               	movlw	0
   475  00C6  00A7               	movwf	___awdiv@divisor+1
   476  00C7  0872               	movf	_c,w
   477  00C8  00AF               	movwf	??_main
   478  00C9  01B0               	clrf	??_main+1
   479  00CA  082F               	movf	??_main,w
   480  00CB  00A0               	movwf	___wmul@multiplier
   481  00CC  0830               	movf	??_main+1,w
   482  00CD  00A1               	movwf	___wmul@multiplier+1
   483  00CE  309C               	movlw	156
   484  00CF  00A2               	movwf	___wmul@multiplicand
   485  00D0  30FF               	movlw	255
   486  00D1  00A3               	movwf	___wmul@multiplicand+1
   487  00D2  120A  118A  21C9  120A  118A  	fcall	___wmul
   488  00D7  0870               	movf	_p,w
   489  00D8  1283               	bcf	3,5	;RP0=0, select bank0
   490  00D9  1303               	bcf	3,6	;RP1=0, select bank0
   491  00DA  0720               	addwf	?___wmul,w
   492  00DB  00A8               	movwf	___awdiv@dividend
   493  00DC  0821               	movf	?___wmul+1,w
   494  00DD  1803               	skipnc
   495  00DE  0A21               	incf	?___wmul+1,w
   496  00DF  00A9               	movwf	___awdiv@dividend+1
   497  00E0  120A  118A  2115  120A  118A  	fcall	___awdiv
   498  00E5  1283               	bcf	3,5	;RP0=0, select bank0
   499  00E6  1303               	bcf	3,6	;RP1=0, select bank0
   500  00E7  0826               	movf	?___awdiv,w
   501  00E8  00B1               	movwf	??_main+2
   502  00E9  0831               	movf	??_main+2,w
   503  00EA  00F3               	movwf	_d
   504  00EB                     l1139:
   505                           
   506                           ;ADC.c: 110:             u = p - (c * 100) - (d *10);
   507  00EB  309C               	movlw	156
   508  00EC  00AF               	movwf	??_main
   509  00ED  082F               	movf	??_main,w
   510  00EE  00A0               	movwf	___bmul@multiplicand
   511  00EF  0872               	movf	_c,w
   512  00F0  120A  118A  21F0  120A  118A  	fcall	___bmul
   513  00F5  1283               	bcf	3,5	;RP0=0, select bank0
   514  00F6  1303               	bcf	3,6	;RP1=0, select bank0
   515  00F7  00B0               	movwf	??_main+1
   516  00F8  30F6               	movlw	246
   517  00F9  00B1               	movwf	??_main+2
   518  00FA  0831               	movf	??_main+2,w
   519  00FB  00A0               	movwf	___bmul@multiplicand
   520  00FC  0873               	movf	_d,w
   521  00FD  120A  118A  21F0  120A  118A  	fcall	___bmul
   522  0102  1283               	bcf	3,5	;RP0=0, select bank0
   523  0103  1303               	bcf	3,6	;RP1=0, select bank0
   524  0104  0730               	addwf	??_main+1,w
   525  0105  0770               	addwf	_p,w
   526  0106  00B2               	movwf	??_main+3
   527  0107  0832               	movf	??_main+3,w
   528  0108  00F4               	movwf	_u
   529  0109                     l1141:
   530                           
   531                           ;ADC.c: 112:             ADCON0bits.GO_nDONE =1;
   532  0109  149F               	bsf	31,1	;volatile
   533                           
   534                           ;ADC.c: 113:             _delay((unsigned long)((50)*(4000000/4000000.0)));
   535  010A  300F               	movlw	15
   536  010B  1283               	bcf	3,5	;RP0=0, select bank0
   537  010C  1303               	bcf	3,6	;RP1=0, select bank0
   538  010D  00AF               	movwf	??_main
   539  010E                     u567:
   540  010E  0BAF               	decfsz	??_main,f
   541  010F  290E               	goto	u567
   542  0110  2911               	nop2
   543  0111  28AB               	goto	l1135
   544  0112  120A  118A  2812   	ljmp	start
   545  0115                     __end_of_main:
   546                           
   547                           	psect	text1
   548  017E                     __ptext1:	
   549 ;; *************** function _setup *****************
   550 ;; Defined at:
   551 ;;		line 119 in file "ADC.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;		None
   554 ;; Auto vars:     Size  Location     Type
   555 ;;		None
   556 ;; Return value:  Size  Location     Type
   557 ;;                  1    wreg      void 
   558 ;; Registers used:
   559 ;;		wreg, status,2
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   565 ;;      Params:         0       0       0       0       0
   566 ;;      Locals:         0       0       0       0       0
   567 ;;      Temps:          0       1       0       0       0
   568 ;;      Totals:         0       1       0       0       0
   569 ;;Total ram usage:        1 bytes
   570 ;; Hardware stack levels used:    1
   571 ;; Hardware stack levels required when called:    2
   572 ;; This function calls:
   573 ;;		Nothing
   574 ;; This function is called by:
   575 ;;		_main
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           
   580                           ;psect for function _setup
   581  017E                     _setup:
   582  017E                     l1027:	
   583                           ;incstack = 0
   584                           ; Regs used in _setup: [wreg+status,2]
   585                           
   586                           
   587                           ;ADC.c: 120:     ANSEL = 0x00;
   588  017E  1683               	bsf	3,5	;RP0=1, select bank3
   589  017F  1703               	bsf	3,6	;RP1=1, select bank3
   590  0180  0188               	clrf	8	;volatile
   591  0181                     l1029:
   592                           
   593                           ;ADC.c: 121:     ANSELH = 0b00010100;
   594  0181  3014               	movlw	20
   595  0182  0089               	movwf	9	;volatile
   596  0183                     l1031:
   597                           
   598                           ;ADC.c: 123:     TRISA = 0x00;
   599  0183  1683               	bsf	3,5	;RP0=1, select bank1
   600  0184  1303               	bcf	3,6	;RP1=0, select bank1
   601  0185  0185               	clrf	5	;volatile
   602  0186                     l1033:
   603                           
   604                           ;ADC.c: 124:     TRISC = 0x00;
   605  0186  0187               	clrf	7	;volatile
   606  0187                     l1035:
   607                           
   608                           ;ADC.c: 125:     TRISB = 0x03;
   609  0187  3003               	movlw	3
   610  0188  0086               	movwf	6	;volatile
   611                           
   612                           ;ADC.c: 126:     TRISD = 0x00;
   613  0189  0188               	clrf	8	;volatile
   614                           
   615                           ;ADC.c: 128:     PORTA = 0;
   616  018A  1283               	bcf	3,5	;RP0=0, select bank0
   617  018B  1303               	bcf	3,6	;RP1=0, select bank0
   618  018C  0185               	clrf	5	;volatile
   619                           
   620                           ;ADC.c: 129:     PORTB = 0;
   621  018D  0186               	clrf	6	;volatile
   622                           
   623                           ;ADC.c: 130:     PORTC = 0;
   624  018E  0187               	clrf	7	;volatile
   625                           
   626                           ;ADC.c: 131:     PORTD = 0;
   627  018F  0188               	clrf	8	;volatile
   628  0190                     l1037:
   629                           
   630                           ;ADC.c: 134:     OSCCONbits.IRCF2 =1;
   631  0190  1683               	bsf	3,5	;RP0=1, select bank1
   632  0191  1303               	bcf	3,6	;RP1=0, select bank1
   633  0192  170F               	bsf	15,6	;volatile
   634  0193                     l1039:
   635                           
   636                           ;ADC.c: 135:     OSCCONbits.IRCF1 =1;
   637  0193  168F               	bsf	15,5	;volatile
   638  0194                     l1041:
   639                           
   640                           ;ADC.c: 136:     OSCCONbits.IRCF0 =0;
   641  0194  120F               	bcf	15,4	;volatile
   642  0195                     l1043:
   643                           
   644                           ;ADC.c: 137:     OSCCONbits.SCS =1;
   645  0195  140F               	bsf	15,0	;volatile
   646  0196                     l1045:
   647                           
   648                           ;ADC.c: 140:     OPTION_REGbits.T0CS =0;
   649  0196  1281               	bcf	1,5	;volatile
   650  0197                     l1047:
   651                           
   652                           ;ADC.c: 141:     OPTION_REGbits.PSA =0;
   653  0197  1181               	bcf	1,3	;volatile
   654  0198                     l1049:
   655                           
   656                           ;ADC.c: 142:     OPTION_REGbits.PS2 =1;
   657  0198  1501               	bsf	1,2	;volatile
   658  0199                     l1051:
   659                           
   660                           ;ADC.c: 143:     OPTION_REGbits.PS1 =1;
   661  0199  1481               	bsf	1,1	;volatile
   662  019A                     l1053:
   663                           
   664                           ;ADC.c: 144:     OPTION_REGbits.PS0 =1;
   665  019A  1401               	bsf	1,0	;volatile
   666  019B                     l1055:
   667                           
   668                           ;ADC.c: 145:     TMR0 = 236;
   669  019B  30EC               	movlw	236
   670  019C  1283               	bcf	3,5	;RP0=0, select bank0
   671  019D  1303               	bcf	3,6	;RP1=0, select bank0
   672  019E  0081               	movwf	1	;volatile
   673  019F                     l1057:
   674                           
   675                           ;ADC.c: 148:     INTCONbits.T0IF = 0;
   676  019F  110B               	bcf	11,2	;volatile
   677  01A0                     l1059:
   678                           
   679                           ;ADC.c: 149:     INTCONbits.T0IE = 1;
   680  01A0  168B               	bsf	11,5	;volatile
   681  01A1                     l1061:
   682                           
   683                           ;ADC.c: 151:     ADCON0bits.CHS0 = 0;
   684  01A1  111F               	bcf	31,2	;volatile
   685  01A2                     l1063:
   686                           
   687                           ;ADC.c: 152:     ADCON0bits.CHS1 = 0;
   688  01A2  119F               	bcf	31,3	;volatile
   689  01A3                     l1065:
   690                           
   691                           ;ADC.c: 153:     ADCON0bits.CHS2 = 1;
   692  01A3  161F               	bsf	31,4	;volatile
   693  01A4                     l1067:
   694                           
   695                           ;ADC.c: 154:     ADCON0bits.CHS3 = 1;
   696  01A4  169F               	bsf	31,5	;volatile
   697  01A5                     l1069:
   698                           
   699                           ;ADC.c: 157:     ADCON0bits.ADON = 1;
   700  01A5  141F               	bsf	31,0	;volatile
   701  01A6                     l1071:
   702                           
   703                           ;ADC.c: 158:     _delay((unsigned long)((50)*(4000000/4000000.0)));
   704  01A6  300F               	movlw	15
   705  01A7  1283               	bcf	3,5	;RP0=0, select bank0
   706  01A8  1303               	bcf	3,6	;RP1=0, select bank0
   707  01A9  00A0               	movwf	??_setup
   708  01AA                     u577:
   709  01AA  0BA0               	decfsz	??_setup,f
   710  01AB  29AA               	goto	u577
   711  01AC  29AD               	nop2
   712  01AD                     l1073:
   713                           
   714                           ;ADC.c: 159:     ADCON0bits.GO_nDONE = 1;
   715  01AD  1283               	bcf	3,5	;RP0=0, select bank0
   716  01AE  1303               	bcf	3,6	;RP1=0, select bank0
   717  01AF  149F               	bsf	31,1	;volatile
   718  01B0                     l1075:
   719                           
   720                           ;ADC.c: 161:     ADCON1bits.VCFG0 = 0;
   721  01B0  1683               	bsf	3,5	;RP0=1, select bank1
   722  01B1  1303               	bcf	3,6	;RP1=0, select bank1
   723  01B2  121F               	bcf	31,4	;volatile
   724  01B3                     l1077:
   725                           
   726                           ;ADC.c: 162:     ADCON1bits.VCFG1 = 0;
   727  01B3  129F               	bcf	31,5	;volatile
   728  01B4                     l1079:
   729                           
   730                           ;ADC.c: 164:     ADCON0bits.ADCS0 = 1;
   731  01B4  1283               	bcf	3,5	;RP0=0, select bank0
   732  01B5  1303               	bcf	3,6	;RP1=0, select bank0
   733  01B6  171F               	bsf	31,6	;volatile
   734  01B7                     l1081:
   735                           
   736                           ;ADC.c: 165:     ADCON0bits.ADCS1 = 1;
   737  01B7  179F               	bsf	31,7	;volatile
   738  01B8                     l1083:
   739                           
   740                           ;ADC.c: 167:     INTCONbits.GIE = 1;
   741  01B8  178B               	bsf	11,7	;volatile
   742  01B9                     l1085:
   743                           
   744                           ;ADC.c: 168:     INTCONbits.PEIE =1;
   745  01B9  170B               	bsf	11,6	;volatile
   746  01BA                     l1087:
   747                           
   748                           ;ADC.c: 170:     PIR1bits.ADIF = 0;
   749  01BA  130C               	bcf	12,6	;volatile
   750  01BB                     l1089:
   751                           
   752                           ;ADC.c: 171:     PIE1bits.ADIE = 1;
   753  01BB  1683               	bsf	3,5	;RP0=1, select bank1
   754  01BC  1303               	bcf	3,6	;RP1=0, select bank1
   755  01BD  170C               	bsf	12,6	;volatile
   756  01BE                     l1091:
   757                           
   758                           ;ADC.c: 173:     ADCON1bits.ADFM =0;
   759  01BE  139F               	bcf	31,7	;volatile
   760  01BF                     l1093:
   761                           
   762                           ;ADC.c: 175:     i = 4;
   763  01BF  3004               	movlw	4
   764  01C0  1283               	bcf	3,5	;RP0=0, select bank0
   765  01C1  1303               	bcf	3,6	;RP1=0, select bank0
   766  01C2  00A0               	movwf	??_setup
   767  01C3  0820               	movf	??_setup,w
   768  01C4  00F1               	movwf	_i
   769  01C5                     l1095:
   770                           
   771                           ;ADC.c: 176:     u = 0;
   772  01C5  01F4               	clrf	_u
   773  01C6                     l1097:
   774                           
   775                           ;ADC.c: 177:     d = 0;
   776  01C6  01F3               	clrf	_d
   777  01C7                     l1099:
   778                           
   779                           ;ADC.c: 178:     c = 0;
   780  01C7  01F2               	clrf	_c
   781  01C8                     l89:
   782  01C8  0008               	return
   783  01C9                     __end_of_setup:
   784                           
   785                           	psect	text2
   786  01C9                     __ptext2:	
   787 ;; *************** function ___wmul *****************
   788 ;; Defined at:
   789 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;  multiplier      2    0[BANK0 ] unsigned int 
   792 ;;  multiplicand    2    2[BANK0 ] unsigned int 
   793 ;; Auto vars:     Size  Location     Type
   794 ;;  product         2    4[BANK0 ] unsigned int 
   795 ;; Return value:  Size  Location     Type
   796 ;;                  2    0[BANK0 ] unsigned int 
   797 ;; Registers used:
   798 ;;		wreg, status,2, status,0
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   804 ;;      Params:         0       4       0       0       0
   805 ;;      Locals:         0       2       0       0       0
   806 ;;      Temps:          0       0       0       0       0
   807 ;;      Totals:         0       6       0       0       0
   808 ;;Total ram usage:        6 bytes
   809 ;; Hardware stack levels used:    1
   810 ;; Hardware stack levels required when called:    2
   811 ;; This function calls:
   812 ;;		Nothing
   813 ;; This function is called by:
   814 ;;		_main
   815 ;; This function uses a non-reentrant model
   816 ;;
   817                           
   818                           
   819                           ;psect for function ___wmul
   820  01C9                     ___wmul:
   821  01C9                     l1101:	
   822                           ;incstack = 0
   823                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   824                           
   825  01C9  1283               	bcf	3,5	;RP0=0, select bank0
   826  01CA  1303               	bcf	3,6	;RP1=0, select bank0
   827  01CB  01A4               	clrf	___wmul@product
   828  01CC  01A5               	clrf	___wmul@product+1
   829  01CD                     l1103:
   830  01CD  1C20               	btfss	___wmul@multiplier,0
   831  01CE  29D0               	goto	u491
   832  01CF  29D1               	goto	u490
   833  01D0                     u491:
   834  01D0  29D7               	goto	l175
   835  01D1                     u490:
   836  01D1                     l1105:
   837  01D1  0822               	movf	___wmul@multiplicand,w
   838  01D2  07A4               	addwf	___wmul@product,f
   839  01D3  1803               	skipnc
   840  01D4  0AA5               	incf	___wmul@product+1,f
   841  01D5  0823               	movf	___wmul@multiplicand+1,w
   842  01D6  07A5               	addwf	___wmul@product+1,f
   843  01D7                     l175:
   844  01D7  3001               	movlw	1
   845  01D8                     u505:
   846  01D8  1003               	clrc
   847  01D9  0DA2               	rlf	___wmul@multiplicand,f
   848  01DA  0DA3               	rlf	___wmul@multiplicand+1,f
   849  01DB  3EFF               	addlw	-1
   850  01DC  1D03               	skipz
   851  01DD  29D8               	goto	u505
   852  01DE                     l1107:
   853  01DE  3001               	movlw	1
   854  01DF                     u515:
   855  01DF  1003               	clrc
   856  01E0  0CA1               	rrf	___wmul@multiplier+1,f
   857  01E1  0CA0               	rrf	___wmul@multiplier,f
   858  01E2  3EFF               	addlw	-1
   859  01E3  1D03               	skipz
   860  01E4  29DF               	goto	u515
   861  01E5                     l1109:
   862  01E5  0820               	movf	___wmul@multiplier,w
   863  01E6  0421               	iorwf	___wmul@multiplier+1,w
   864  01E7  1D03               	btfss	3,2
   865  01E8  29EA               	goto	u521
   866  01E9  29EB               	goto	u520
   867  01EA                     u521:
   868  01EA  29CD               	goto	l1103
   869  01EB                     u520:
   870  01EB                     l1111:
   871  01EB  0825               	movf	___wmul@product+1,w
   872  01EC  00A1               	movwf	?___wmul+1
   873  01ED  0824               	movf	___wmul@product,w
   874  01EE  00A0               	movwf	?___wmul
   875  01EF                     l177:
   876  01EF  0008               	return
   877  01F0                     __end_of___wmul:
   878                           
   879                           	psect	text3
   880  01F0                     __ptext3:	
   881 ;; *************** function ___bmul *****************
   882 ;; Defined at:
   883 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;  multiplier      1    wreg     unsigned char 
   886 ;;  multiplicand    1    0[BANK0 ] unsigned char 
   887 ;; Auto vars:     Size  Location     Type
   888 ;;  multiplier      1    3[BANK0 ] unsigned char 
   889 ;;  product         1    2[BANK0 ] unsigned char 
   890 ;; Return value:  Size  Location     Type
   891 ;;                  1    wreg      unsigned char 
   892 ;; Registers used:
   893 ;;		wreg, status,2, status,0
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   899 ;;      Params:         0       1       0       0       0
   900 ;;      Locals:         0       2       0       0       0
   901 ;;      Temps:          0       1       0       0       0
   902 ;;      Totals:         0       4       0       0       0
   903 ;;Total ram usage:        4 bytes
   904 ;; Hardware stack levels used:    1
   905 ;; Hardware stack levels required when called:    2
   906 ;; This function calls:
   907 ;;		Nothing
   908 ;; This function is called by:
   909 ;;		_main
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           
   914                           ;psect for function ___bmul
   915  01F0                     ___bmul:
   916                           
   917                           ;incstack = 0
   918                           ; Regs used in ___bmul: [wreg+status,2+status,0]
   919                           ;___bmul@multiplier stored from wreg
   920  01F0  1283               	bcf	3,5	;RP0=0, select bank0
   921  01F1  1303               	bcf	3,6	;RP1=0, select bank0
   922  01F2  00A3               	movwf	___bmul@multiplier
   923  01F3                     l1115:
   924  01F3  01A2               	clrf	___bmul@product
   925  01F4                     l1117:
   926  01F4  1C23               	btfss	___bmul@multiplier,0
   927  01F5  29F7               	goto	u531
   928  01F6  29F8               	goto	u530
   929  01F7                     u531:
   930  01F7  29FC               	goto	l1121
   931  01F8                     u530:
   932  01F8                     l1119:
   933  01F8  0820               	movf	___bmul@multiplicand,w
   934  01F9  00A1               	movwf	??___bmul
   935  01FA  0821               	movf	??___bmul,w
   936  01FB  07A2               	addwf	___bmul@product,f
   937  01FC                     l1121:
   938  01FC  1003               	clrc
   939  01FD  0DA0               	rlf	___bmul@multiplicand,f
   940  01FE                     l1123:
   941  01FE  1003               	clrc
   942  01FF  0CA3               	rrf	___bmul@multiplier,f
   943  0200  0823               	movf	___bmul@multiplier,w
   944  0201  1D03               	btfss	3,2
   945  0202  2A04               	goto	u541
   946  0203  2A05               	goto	u540
   947  0204                     u541:
   948  0204  29F4               	goto	l1117
   949  0205                     u540:
   950  0205                     l1125:
   951  0205  0822               	movf	___bmul@product,w
   952  0206                     l201:
   953  0206  0008               	return
   954  0207                     __end_of___bmul:
   955                           
   956                           	psect	text4
   957  0115                     __ptext4:	
   958 ;; *************** function ___awdiv *****************
   959 ;; Defined at:
   960 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;  divisor         2    6[BANK0 ] int 
   963 ;;  dividend        2    8[BANK0 ] int 
   964 ;; Auto vars:     Size  Location     Type
   965 ;;  quotient        2   13[BANK0 ] int 
   966 ;;  sign            1   12[BANK0 ] unsigned char 
   967 ;;  counter         1   11[BANK0 ] unsigned char 
   968 ;; Return value:  Size  Location     Type
   969 ;;                  2    6[BANK0 ] int 
   970 ;; Registers used:
   971 ;;		wreg, status,2, status,0
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   977 ;;      Params:         0       4       0       0       0
   978 ;;      Locals:         0       4       0       0       0
   979 ;;      Temps:          0       1       0       0       0
   980 ;;      Totals:         0       9       0       0       0
   981 ;;Total ram usage:        9 bytes
   982 ;; Hardware stack levels used:    1
   983 ;; Hardware stack levels required when called:    2
   984 ;; This function calls:
   985 ;;		Nothing
   986 ;; This function is called by:
   987 ;;		_main
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           
   992                           ;psect for function ___awdiv
   993  0115                     ___awdiv:
   994  0115                     l919:	
   995                           ;incstack = 0
   996                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   997                           
   998  0115  1283               	bcf	3,5	;RP0=0, select bank0
   999  0116  1303               	bcf	3,6	;RP1=0, select bank0
  1000  0117  01AC               	clrf	___awdiv@sign
  1001  0118                     l921:
  1002  0118  1FA7               	btfss	___awdiv@divisor+1,7
  1003  0119  291B               	goto	u311
  1004  011A  291C               	goto	u310
  1005  011B                     u311:
  1006  011B  2923               	goto	l927
  1007  011C                     u310:
  1008  011C                     l923:
  1009  011C  09A6               	comf	___awdiv@divisor,f
  1010  011D  09A7               	comf	___awdiv@divisor+1,f
  1011  011E  0AA6               	incf	___awdiv@divisor,f
  1012  011F  1903               	skipnz
  1013  0120  0AA7               	incf	___awdiv@divisor+1,f
  1014  0121                     l925:
  1015  0121  01AC               	clrf	___awdiv@sign
  1016  0122  0AAC               	incf	___awdiv@sign,f
  1017  0123                     l927:
  1018  0123  1FA9               	btfss	___awdiv@dividend+1,7
  1019  0124  2926               	goto	u321
  1020  0125  2927               	goto	u320
  1021  0126                     u321:
  1022  0126  2930               	goto	l933
  1023  0127                     u320:
  1024  0127                     l929:
  1025  0127  09A8               	comf	___awdiv@dividend,f
  1026  0128  09A9               	comf	___awdiv@dividend+1,f
  1027  0129  0AA8               	incf	___awdiv@dividend,f
  1028  012A  1903               	skipnz
  1029  012B  0AA9               	incf	___awdiv@dividend+1,f
  1030  012C                     l931:
  1031  012C  3001               	movlw	1
  1032  012D  00AA               	movwf	??___awdiv
  1033  012E  082A               	movf	??___awdiv,w
  1034  012F  06AC               	xorwf	___awdiv@sign,f
  1035  0130                     l933:
  1036  0130  01AD               	clrf	___awdiv@quotient
  1037  0131  01AE               	clrf	___awdiv@quotient+1
  1038  0132                     l935:
  1039  0132  0826               	movf	___awdiv@divisor,w
  1040  0133  0427               	iorwf	___awdiv@divisor+1,w
  1041  0134  1903               	btfsc	3,2
  1042  0135  2937               	goto	u331
  1043  0136  2938               	goto	u330
  1044  0137                     u331:
  1045  0137  296F               	goto	l955
  1046  0138                     u330:
  1047  0138                     l937:
  1048  0138  01AB               	clrf	___awdiv@counter
  1049  0139  0AAB               	incf	___awdiv@counter,f
  1050  013A  2946               	goto	l943
  1051  013B                     l939:
  1052  013B  3001               	movlw	1
  1053  013C                     u345:
  1054  013C  1003               	clrc
  1055  013D  0DA6               	rlf	___awdiv@divisor,f
  1056  013E  0DA7               	rlf	___awdiv@divisor+1,f
  1057  013F  3EFF               	addlw	-1
  1058  0140  1D03               	skipz
  1059  0141  293C               	goto	u345
  1060  0142                     l941:
  1061  0142  3001               	movlw	1
  1062  0143  00AA               	movwf	??___awdiv
  1063  0144  082A               	movf	??___awdiv,w
  1064  0145  07AB               	addwf	___awdiv@counter,f
  1065  0146                     l943:
  1066  0146  1FA7               	btfss	___awdiv@divisor+1,7
  1067  0147  2949               	goto	u351
  1068  0148  294A               	goto	u350
  1069  0149                     u351:
  1070  0149  293B               	goto	l939
  1071  014A                     u350:
  1072  014A                     l945:
  1073  014A  3001               	movlw	1
  1074  014B                     u365:
  1075  014B  1003               	clrc
  1076  014C  0DAD               	rlf	___awdiv@quotient,f
  1077  014D  0DAE               	rlf	___awdiv@quotient+1,f
  1078  014E  3EFF               	addlw	-1
  1079  014F  1D03               	skipz
  1080  0150  294B               	goto	u365
  1081  0151  0827               	movf	___awdiv@divisor+1,w
  1082  0152  0229               	subwf	___awdiv@dividend+1,w
  1083  0153  1D03               	skipz
  1084  0154  2957               	goto	u375
  1085  0155  0826               	movf	___awdiv@divisor,w
  1086  0156  0228               	subwf	___awdiv@dividend,w
  1087  0157                     u375:
  1088  0157  1C03               	skipc
  1089  0158  295A               	goto	u371
  1090  0159  295B               	goto	u370
  1091  015A                     u371:
  1092  015A  2962               	goto	l951
  1093  015B                     u370:
  1094  015B                     l947:
  1095  015B  0826               	movf	___awdiv@divisor,w
  1096  015C  02A8               	subwf	___awdiv@dividend,f
  1097  015D  0827               	movf	___awdiv@divisor+1,w
  1098  015E  1C03               	skipc
  1099  015F  03A9               	decf	___awdiv@dividend+1,f
  1100  0160  02A9               	subwf	___awdiv@dividend+1,f
  1101  0161                     l949:
  1102  0161  142D               	bsf	___awdiv@quotient,0
  1103  0162                     l951:
  1104  0162  3001               	movlw	1
  1105  0163                     u385:
  1106  0163  1003               	clrc
  1107  0164  0CA7               	rrf	___awdiv@divisor+1,f
  1108  0165  0CA6               	rrf	___awdiv@divisor,f
  1109  0166  3EFF               	addlw	-1
  1110  0167  1D03               	skipz
  1111  0168  2963               	goto	u385
  1112  0169                     l953:
  1113  0169  3001               	movlw	1
  1114  016A  02AB               	subwf	___awdiv@counter,f
  1115  016B  1D03               	btfss	3,2
  1116  016C  296E               	goto	u391
  1117  016D  296F               	goto	u390
  1118  016E                     u391:
  1119  016E  294A               	goto	l945
  1120  016F                     u390:
  1121  016F                     l955:
  1122  016F  082C               	movf	___awdiv@sign,w
  1123  0170  1903               	btfsc	3,2
  1124  0171  2973               	goto	u401
  1125  0172  2974               	goto	u400
  1126  0173                     u401:
  1127  0173  2979               	goto	l959
  1128  0174                     u400:
  1129  0174                     l957:
  1130  0174  09AD               	comf	___awdiv@quotient,f
  1131  0175  09AE               	comf	___awdiv@quotient+1,f
  1132  0176  0AAD               	incf	___awdiv@quotient,f
  1133  0177  1903               	skipnz
  1134  0178  0AAE               	incf	___awdiv@quotient+1,f
  1135  0179                     l959:
  1136  0179  082E               	movf	___awdiv@quotient+1,w
  1137  017A  00A7               	movwf	?___awdiv+1
  1138  017B  082D               	movf	___awdiv@quotient,w
  1139  017C  00A6               	movwf	?___awdiv
  1140  017D                     l328:
  1141  017D  0008               	return
  1142  017E                     __end_of___awdiv:
  1143                           
  1144                           	psect	text5
  1145  001E                     __ptext5:	
  1146 ;; *************** function _isr *****************
  1147 ;; Defined at:
  1148 ;;		line 52 in file "ADC.c"
  1149 ;; Parameters:    Size  Location     Type
  1150 ;;		None
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;		None
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  1    wreg      void 
  1155 ;; Registers used:
  1156 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1162 ;;      Params:         0       0       0       0       0
  1163 ;;      Locals:         0       0       0       0       0
  1164 ;;      Temps:          5       0       0       0       0
  1165 ;;      Totals:         5       0       0       0       0
  1166 ;;Total ram usage:        5 bytes
  1167 ;; Hardware stack levels used:    2
  1168 ;; This function calls:
  1169 ;;		Nothing
  1170 ;; This function is called by:
  1171 ;;		Interrupt level 1
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           
  1176                           ;psect for function _isr
  1177  001E                     _isr:
  1178  001E                     i1l963:
  1179                           
  1180                           ;ADC.c: 54:     if(PIR1bits.ADIF){
  1181  001E  1F0C               	btfss	12,6	;volatile
  1182  001F  2821               	goto	u41_21
  1183  0020  2822               	goto	u41_20
  1184  0021                     u41_21:
  1185  0021  284C               	goto	i1l983
  1186  0022                     u41_20:
  1187  0022                     i1l965:
  1188                           
  1189                           ;ADC.c: 56:         if (ADCON0bits.CHS == 12){
  1190  0022  0C1F               	rrf	31,w	;volatile
  1191  0023  00F5               	movwf	??_isr
  1192  0024  0C75               	rrf	??_isr,w
  1193  0025  390F               	andlw	15
  1194  0026  3A0C               	xorlw	12
  1195  0027  1D03               	skipz
  1196  0028  282A               	goto	u42_21
  1197  0029  282B               	goto	u42_20
  1198  002A                     u42_21:
  1199  002A  2837               	goto	i1l973
  1200  002B                     u42_20:
  1201  002B                     i1l967:
  1202                           
  1203                           ;ADC.c: 57:             PORTA = ADRESH;
  1204  002B  081E               	movf	30,w	;volatile
  1205  002C  0085               	movwf	5	;volatile
  1206  002D                     i1l969:
  1207                           
  1208                           ;ADC.c: 59:             ADCON0bits.CHS = 10;
  1209  002D  081F               	movf	31,w	;volatile
  1210  002E  39C3               	andlw	-61
  1211  002F  3828               	iorlw	40
  1212  0030  009F               	movwf	31	;volatile
  1213  0031                     i1l971:
  1214                           
  1215                           ;ADC.c: 60:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  1216  0031  3010               	movlw	16
  1217  0032  00F5               	movwf	??_isr
  1218  0033                     u58_27:
  1219  0033  0BF5               	decfsz	??_isr,f
  1220  0034  2833               	goto	u58_27
  1221  0035  0000               	nop
  1222                           
  1223                           ;ADC.c: 62:         } else if (ADCON0bits.CHS == 10){
  1224  0036  2849               	goto	i1l981
  1225  0037                     i1l973:
  1226  0037  0C1F               	rrf	31,w	;volatile
  1227  0038  00F5               	movwf	??_isr
  1228  0039  0C75               	rrf	??_isr,w
  1229  003A  390F               	andlw	15
  1230  003B  3A0A               	xorlw	10
  1231  003C  1D03               	skipz
  1232  003D  283F               	goto	u43_21
  1233  003E  2840               	goto	u43_20
  1234  003F                     u43_21:
  1235  003F  2849               	goto	i1l981
  1236  0040                     u43_20:
  1237  0040                     i1l975:
  1238                           
  1239                           ;ADC.c: 64:             p = ADRESH;
  1240  0040  081E               	movf	30,w	;volatile
  1241  0041  00F5               	movwf	??_isr
  1242  0042  0875               	movf	??_isr,w
  1243  0043  00F0               	movwf	_p
  1244  0044                     i1l977:
  1245                           
  1246                           ;ADC.c: 65:             ADCON0bits.CHS = 12;
  1247  0044  081F               	movf	31,w	;volatile
  1248  0045  39C3               	andlw	-61
  1249  0046  3830               	iorlw	48
  1250  0047  009F               	movwf	31	;volatile
  1251  0048  2831               	goto	i1l971
  1252  0049                     i1l981:
  1253                           
  1254                           ;ADC.c: 69:         PIR1bits.ADIF =0;
  1255  0049  1283               	bcf	3,5	;RP0=0, select bank0
  1256  004A  1303               	bcf	3,6	;RP1=0, select bank0
  1257  004B  130C               	bcf	12,6	;volatile
  1258  004C                     i1l983:
  1259                           
  1260                           ;ADC.c: 72:     if (T0IF){
  1261  004C  1D0B               	btfss	11,2	;volatile
  1262  004D  284F               	goto	u44_21
  1263  004E  2850               	goto	u44_20
  1264  004F                     u44_21:
  1265  004F  2891               	goto	i1l78
  1266  0050                     u44_20:
  1267  0050                     i1l985:
  1268                           
  1269                           ;ADC.c: 73:         PORTD =0;
  1270  0050  0188               	clrf	8	;volatile
  1271  0051                     i1l987:
  1272                           
  1273                           ;ADC.c: 75:         if (i==4){
  1274  0051  3004               	movlw	4
  1275  0052  0671               	xorwf	_i,w
  1276  0053  1D03               	btfss	3,2
  1277  0054  2856               	goto	u45_21
  1278  0055  2857               	goto	u45_20
  1279  0056                     u45_21:
  1280  0056  2862               	goto	i1l993
  1281  0057                     u45_20:
  1282  0057                     i1l989:
  1283                           
  1284                           ;ADC.c: 77:             RD0 = 1;
  1285  0057  1408               	bsf	8,0	;volatile
  1286  0058                     i1l991:
  1287                           
  1288                           ;ADC.c: 78:             PORTC = tabla[c];
  1289  0058  0872               	movf	_c,w
  1290  0059  3E01               	addlw	low ((_tabla-__stringbase)| (0+32768))
  1291  005A  0084               	movwf	4
  1292  005B  120A  118A  2207  120A  118A  	fcall	stringdir
  1293  0060  0087               	movwf	7	;volatile
  1294                           
  1295                           ;ADC.c: 79:         }
  1296  0061  2883               	goto	i1l1005
  1297  0062                     i1l993:
  1298  0062  3003               	movlw	3
  1299  0063  0671               	xorwf	_i,w
  1300  0064  1D03               	btfss	3,2
  1301  0065  2867               	goto	u46_21
  1302  0066  2868               	goto	u46_20
  1303  0067                     u46_21:
  1304  0067  2873               	goto	i1l999
  1305  0068                     u46_20:
  1306  0068                     i1l995:
  1307                           
  1308                           ;ADC.c: 81:             RD1 = 1;
  1309  0068  1488               	bsf	8,1	;volatile
  1310  0069                     i1l997:
  1311                           
  1312                           ;ADC.c: 82:             PORTC = tabla[d];
  1313  0069  0873               	movf	_d,w
  1314  006A  3E01               	addlw	low ((_tabla-__stringbase)| (0+32768))
  1315  006B  0084               	movwf	4
  1316  006C  120A  118A  2207  120A  118A  	fcall	stringdir
  1317  0071  0087               	movwf	7	;volatile
  1318                           
  1319                           ;ADC.c: 83:         }
  1320  0072  2883               	goto	i1l1005
  1321  0073                     i1l999:
  1322  0073  3002               	movlw	2
  1323  0074  0671               	xorwf	_i,w
  1324  0075  1D03               	btfss	3,2
  1325  0076  2878               	goto	u47_21
  1326  0077  2879               	goto	u47_20
  1327  0078                     u47_21:
  1328  0078  2883               	goto	i1l1005
  1329  0079                     u47_20:
  1330  0079                     i1l1001:
  1331                           
  1332                           ;ADC.c: 85:             RD2 =1;
  1333  0079  1508               	bsf	8,2	;volatile
  1334  007A                     i1l1003:
  1335                           
  1336                           ;ADC.c: 86:             PORTC =tabla[u];
  1337  007A  0874               	movf	_u,w
  1338  007B  3E01               	addlw	low ((_tabla-__stringbase)| (0+32768))
  1339  007C  0084               	movwf	4
  1340  007D  120A  118A  2207  120A  118A  	fcall	stringdir
  1341  0082  0087               	movwf	7	;volatile
  1342  0083                     i1l1005:
  1343                           
  1344                           ;ADC.c: 89:         i--;
  1345  0083  3001               	movlw	1
  1346  0084  02F1               	subwf	_i,f
  1347  0085                     i1l1007:
  1348                           
  1349                           ;ADC.c: 90:         if(i==1){
  1350  0085  0371               	decf	_i,w
  1351  0086  1D03               	btfss	3,2
  1352  0087  2889               	goto	u48_21
  1353  0088  288A               	goto	u48_20
  1354  0089                     u48_21:
  1355  0089  288E               	goto	i1l1011
  1356  008A                     u48_20:
  1357  008A                     i1l1009:
  1358                           
  1359                           ;ADC.c: 91:             i=4;
  1360  008A  3004               	movlw	4
  1361  008B  00F5               	movwf	??_isr
  1362  008C  0875               	movf	??_isr,w
  1363  008D  00F1               	movwf	_i
  1364  008E                     i1l1011:
  1365                           
  1366                           ;ADC.c: 94:         INTCONbits.T0IF = 0;
  1367  008E  110B               	bcf	11,2	;volatile
  1368                           
  1369                           ;ADC.c: 95:         TMR0= 236;
  1370  008F  30EC               	movlw	236
  1371  0090  0081               	movwf	1	;volatile
  1372  0091                     i1l78:
  1373  0091  0879               	movf	??_isr+4,w
  1374  0092  00FF               	movwf	btemp+1
  1375  0093  0878               	movf	??_isr+3,w
  1376  0094  008A               	movwf	10
  1377  0095  0877               	movf	??_isr+2,w
  1378  0096  0084               	movwf	4
  1379  0097  0E76               	swapf	??_isr+1,w
  1380  0098  0083               	movwf	3
  1381  0099  0EFE               	swapf	btemp,f
  1382  009A  0E7E               	swapf	btemp,w
  1383  009B  0009               	retfie
  1384  009C                     __end_of_isr:
  1385  007E                     btemp	set	126	;btemp
  1386  007E                     wtemp0	set	126
  1387                           
  1388                           	psect	intentry
  1389  0004                     __pintentry:	
  1390                           ;incstack = 0
  1391                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath]
  1392                           
  1393  0004                     interrupt_function:
  1394  007E                     saved_w	set	btemp
  1395  0004  00FE               	movwf	btemp
  1396  0005  0E03               	swapf	3,w
  1397  0006  00F6               	movwf	??_isr+1
  1398  0007  0804               	movf	4,w
  1399  0008  00F7               	movwf	??_isr+2
  1400  0009  080A               	movf	10,w
  1401  000A  00F8               	movwf	??_isr+3
  1402  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1403  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1404  000D  087F               	movf	btemp+1,w
  1405  000E  00F9               	movwf	??_isr+4
  1406  000F  120A  118A  281E   	ljmp	_isr
  1407                           
  1408                           	psect	config
  1409                           
  1410                           ;Config register CONFIG1 @ 0x2007
  1411                           ;	Oscillator Selection bits
  1412                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1413                           ;	Watchdog Timer Enable bit
  1414                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1415                           ;	Power-up Timer Enable bit
  1416                           ;	PWRTE = OFF, PWRT disabled
  1417                           ;	RE3/MCLR pin function select bit
  1418                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1419                           ;	Code Protection bit
  1420                           ;	CP = OFF, Program memory code protection is disabled
  1421                           ;	Data Code Protection bit
  1422                           ;	CPD = OFF, Data memory code protection is disabled
  1423                           ;	Brown Out Reset Selection bits
  1424                           ;	BOREN = OFF, BOR disabled
  1425                           ;	Internal External Switchover bit
  1426                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1427                           ;	Fail-Safe Clock Monitor Enabled bit
  1428                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1429                           ;	Low Voltage Programming Enable bit
  1430                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1431                           ;	In-Circuit Debugger Mode bit
  1432                           ;	DEBUG = 0x1, unprogrammed default
  1433  2007                     	org	8199
  1434  2007  38D4               	dw	14548
  1435                           
  1436                           ;Config register CONFIG2 @ 0x2008
  1437                           ;	Brown-out Reset Selection bit
  1438                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1439                           ;	Flash Program Memory Self Write Enable bits
  1440                           ;	WRT = OFF, Write protection off
  1441  2008                     	org	8200
  1442  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     19      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1236
                                             15 BANK0      4     4      0
                            ___awdiv
                             ___bmul
                             ___wmul
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     316
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___wmul (ARG)
   ___bmul
   ___wmul
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      13       5       23.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1D      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Apr 25 22:00:25 2021

                      _c 0072                        _d 0073                        _i 0071  
                      _p 0070                        _u 0074                        pc 0002  
         ___bmul@product 0022                       l89 01C8             ___awdiv@sign 002C  
                     fsr 0004      ___wmul@multiplicand 0022                      l201 0206  
                    l175 01D7                      l328 017D                      l177 01EF  
                    l921 0118                      l931 012C                      l923 011C  
                    l941 0142                      l933 0130                      l925 0121  
                    l951 0162                      l943 0146                      l935 0132  
                    l927 0123                      l919 0115                      l953 0169  
                    l945 014A                      l937 0138                      l929 0127  
                    l947 015B                      l939 013B                      l955 016F  
                    l957 0174                      l949 0161                      l959 0179  
                    _RD0 0040                      _RD1 0041                      _RD2 0042  
                    u310 011C                      u311 011B                      u400 0174  
                    u320 0127                      u401 0173                      u321 0126  
                    u330 0138                      u331 0137                      u350 014A  
                    u351 0149                      u520 01EB                      u345 013C  
                    u521 01EA                      u505 01D8                      u370 015B  
                    u530 01F8                      u371 015A                      u531 01F7  
                    u515 01DF                      u540 0205                      u365 014B  
                    u541 0204                      u390 016F                      u391 016E  
                    u375 0157                      u385 0163                      u490 01D1  
                    u491 01D0                      u557 00A5                      u567 010E  
                    u577 01AA                      _isr 001E                      fsr0 0004  
                   l1101 01C9                     l1111 01EB                     l1103 01CD  
                   l1031 0183                     l1121 01FC                     l1105 01D1  
                   l1041 0194                     l1033 0186                     l1123 01FE  
                   l1115 01F3                     l1107 01DE                     l1051 0199  
                   l1043 0195                     l1035 0187                     l1027 017E  
                   l1131 00A1                     l1125 0205                     l1117 01F4  
                   l1109 01E5                     l1061 01A1                     l1053 019A  
                   l1045 0196                     l1037 0190                     l1029 0181  
                   l1141 0109                     l1133 00A8                     l1119 01F8  
                   l1071 01A6                     l1063 01A2                     l1055 019B  
                   l1047 0197                     l1039 0193                     l1135 00AB  
                   l1081 01B7                     l1073 01AD                     l1065 01A3  
                   l1057 019F                     l1049 0198                     l1137 00C3  
                   l1129 009C                     l1091 01BE                     l1083 01B8  
                   l1075 01B0                     l1067 01A4                     l1059 01A0  
                   l1139 00EB                     l1093 01BF                     l1085 01B9  
                   l1077 01B3                     l1069 01A5                     l1095 01C5  
                   l1087 01BA                     l1079 01B4                     l1097 01C6  
                   l1089 01BB                     l1099 01C7                     ?_isr 0075  
                   _T0IF 005A                     i1l78 0091                     _TMR0 0001  
                   _main 009C                     btemp 007E                     start 0012  
      ___bmul@multiplier 0023                    ??_isr 0075                    ?_main 0075  
        __end_of___awdiv 017E                    _ANSEL 0188          ___awdiv@divisor 0026  
                  i1l971 0031                    i1l963 001E                    i1l981 0049  
                  i1l973 0037                    i1l965 0022                    i1l991 0058  
                  i1l975 0040                    i1l967 002B                    i1l983 004C  
                  i1l993 0062                    i1l985 0050                    i1l977 0044  
                  i1l969 002D                    i1l995 0068                    i1l987 0051  
                  i1l997 0069                    i1l989 0057                    i1l999 0073  
        ___awdiv@counter 002B                    u41_20 0022                    u41_21 0021  
                  u42_20 002B                    u42_21 002A                    u43_20 0040  
                  u43_21 003F                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    u44_20 0050  
                  u44_21 004F                    u45_20 0057                    u45_21 0056  
                  u46_20 0068                    u46_21 0067                    u47_20 0079  
                  u47_21 0078                    u48_20 008A                    u48_21 0089  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    u58_27 0033                    _tabla 020D  
                  _setup 017E                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0015             __end_of_main 0115  
                 ??_main 002F                   _ADRESH 001E         ___awdiv@dividend 0028  
                 ?_setup 0075                   _ANSELH 0189                   i1l1001 0079  
                 i1l1011 008E                   i1l1003 007A                   i1l1005 0083  
                 i1l1007 0085                   i1l1009 008A                   ___bmul 01F0  
                 ___wmul 01C9                ??___awdiv 002A         ___awdiv@quotient 002D  
                 saved_w 007E  __end_of__initialization 001A      ___bmul@multiplicand 0020  
         __pcstackCOMMON 0075            __end_of_tabla 0217            __end_of_setup 01C9  
         _OPTION_REGbits 0081                  ??_setup 0020               __pmaintext 009C  
                ?___bmul 0020                  ?___wmul 0020               __pintentry 0004  
             __stringtab 0207          __size_of___bmul 0017                  ___awdiv 0115  
        __size_of___wmul 0027                  __ptext1 017E                  __ptext2 01C9  
                __ptext3 01F0                  __ptext4 0115                  __ptext5 001E  
           __size_of_isr 007E     end_of_initialization 001A           __end_of___bmul 0207  
         __end_of___wmul 01F0      start_initialization 0015              __end_of_isr 009C  
               ??___bmul 0021                 ??___wmul 0024              __pbssCOMMON 0070  
              ___latbits 0002            __pcstackBANK0 0020                 ?___awdiv 0026  
              __pstrings 0207           __size_of_setup 004B        interrupt_function 0004  
         ___wmul@product 0024                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F              __stringbase 020C               _ADCON1bits 009F  
      ___wmul@multiplier 0020         __size_of___awdiv 0069       __end_of__stringtab 020D  
          __size_of_main 0079               _INTCONbits 000B                 intlevel1 0000  
              stringcode 0207               _OSCCONbits 008F                 stringdir 0207  
               stringtab 0207  
