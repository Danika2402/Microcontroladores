

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Jun 03 01:06:21 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208                           
   209                           	psect	idataCOMMON
   210  00D7                     __pidataCOMMON:
   211                           
   212                           ;initializer for _RB0_old
   213  00D7  3401               	retlw	1
   214  000D                     _PIR2bits	set	13
   215  0007                     _PORTC	set	7
   216  0008                     _PORTD	set	8
   217  001E                     _ADRESH	set	30
   218  001F                     _ADCON0bits	set	31
   219  0006                     _PORTB	set	6
   220  000B                     _INTCONbits	set	11
   221  0031                     _RB1	set	49
   222  0030                     _RB0	set	48
   223  009F                     _ADCON1bits	set	159
   224  008F                     _OSCCONbits	set	143
   225  0096                     _IOCB	set	150
   226  0095                     _WPUB	set	149
   227  0081                     _OPTION_REGbits	set	129
   228  0088                     _TRISD	set	136
   229  0087                     _TRISC	set	135
   230  0086                     _TRISB	set	134
   231  010C                     _EEDAT	set	268
   232  010D                     _EEADR	set	269
   233  018D                     _EECON2	set	397
   234  018C                     _EECON1bits	set	396
   235  0189                     _ANSELH	set	393
   236  0188                     _ANSEL	set	392
   237                           
   238                           	psect	cinit
   239  000F                     start_initialization:	
   240                           ; #config settings
   241                           
   242  000F                     __initialization:
   243                           
   244                           ; Initialize objects allocated to COMMON
   245  000F  120A  118A  20D7  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   246  0014  00F7               	movwf	__pdataCOMMON& (0+127)
   247                           
   248                           ; Clear objects allocated to COMMON
   249  0015  01F6               	clrf	__pbssCOMMON& (0+127)
   250  0016                     end_of_initialization:	
   251                           ;End of C runtime variable initialization code
   252                           
   253  0016                     __end_of__initialization:
   254  0016  0183               	clrf	3
   255  0017  120A  118A  281A   	ljmp	_main	;jump to C main() function
   256                           
   257                           	psect	bssCOMMON
   258  0076                     __pbssCOMMON:
   259  0076                     _adc_val:
   260  0076                     	ds	1
   261                           
   262                           	psect	dataCOMMON
   263  0077                     __pdataCOMMON:
   264  0077                     _RB0_old:
   265  0077                     	ds	1
   266                           
   267                           	psect	cstackCOMMON
   268  0070                     __pcstackCOMMON:
   269  0070                     ?_setup:
   270  0070                     ?_readEEPROM:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0070                     ?_isr:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0070                     ??_isr:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0070                     ?_main:	
   280                           ; 1 bytes @ 0x0
   281                           
   282                           
   283                           ; 1 bytes @ 0x0
   284  0070                     	ds	2
   285  0072                     ??_setup:
   286  0072                     ?_writeEEPROM:	
   287                           ; 1 bytes @ 0x2
   288                           
   289  0072                     ??_readEEPROM:	
   290                           ; 1 bytes @ 0x2
   291                           
   292  0072                     writeEEPROM@address:	
   293                           ; 1 bytes @ 0x2
   294                           
   295                           
   296                           ; 1 bytes @ 0x2
   297  0072                     	ds	1
   298  0073                     ??_writeEEPROM:
   299  0073                     writeEEPROM@data:	
   300                           ; 1 bytes @ 0x3
   301                           
   302  0073                     readEEPROM@address:	
   303                           ; 1 bytes @ 0x3
   304                           
   305                           
   306                           ; 1 bytes @ 0x3
   307  0073                     	ds	1
   308  0074                     readEEPROM@data:
   309                           
   310                           ; 1 bytes @ 0x4
   311  0074                     	ds	1
   312  0075                     ??_main:
   313                           
   314                           ; 1 bytes @ 0x5
   315  0075                     	ds	1
   316                           
   317                           	psect	maintext
   318  001A                     __pmaintext:	
   319 ;;
   320 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   321 ;;
   322 ;; *************** function _main *****************
   323 ;; Defined at:
   324 ;;		line 42 in file "eeprom.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;		None
   327 ;; Auto vars:     Size  Location     Type
   328 ;;		None
   329 ;; Return value:  Size  Location     Type
   330 ;;                  1    wreg      void 
   331 ;; Registers used:
   332 ;;		wreg, status,2, status,0, pclath, cstack
   333 ;; Tracked objects:
   334 ;;		On entry : B00/0
   335 ;;		On exit  : 0/0
   336 ;;		Unchanged: 0/0
   337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   338 ;;      Params:         0       0       0       0       0
   339 ;;      Locals:         0       0       0       0       0
   340 ;;      Temps:          1       0       0       0       0
   341 ;;      Totals:         1       0       0       0       0
   342 ;;Total ram usage:        1 bytes
   343 ;; Hardware stack levels required when called:    2
   344 ;; This function calls:
   345 ;;		_readEEPROM
   346 ;;		_setup
   347 ;;		_writeEEPROM
   348 ;; This function is called by:
   349 ;;		Startup code after reset
   350 ;; This function uses a non-reentrant model
   351 ;;
   352                           
   353                           
   354                           ;psect for function _main
   355  001A                     _main:
   356  001A                     l777:	
   357                           ;incstack = 0
   358                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   359                           
   360                           
   361                           ;eeprom.c: 44:     setup();
   362  001A  120A  118A  2061  120A  118A  	fcall	_setup
   363  001F                     l779:
   364                           
   365                           ;eeprom.c: 46:         _delay((unsigned long)((100)*(4000000/4000000.0)));
   366  001F  3021               	movlw	33
   367  0020  00F5               	movwf	??_main
   368  0021                     u127:
   369  0021  0BF5               	decfsz	??_main,f
   370  0022  2821               	goto	u127
   371  0023                     l781:
   372                           
   373                           ;eeprom.c: 48:         if(ADCON0bits.GO == 0){
   374  0023  1283               	bcf	3,5	;RP0=0, select bank0
   375  0024  1303               	bcf	3,6	;RP1=0, select bank0
   376  0025  189F               	btfsc	31,1	;volatile
   377  0026  2828               	goto	u81
   378  0027  2829               	goto	u80
   379  0028                     u81:
   380  0028  2836               	goto	l787
   381  0029                     u80:
   382  0029                     l783:
   383                           
   384                           ;eeprom.c: 49:             adc_val = ADRESH;
   385  0029  081E               	movf	30,w	;volatile
   386  002A  00F5               	movwf	??_main
   387  002B  0875               	movf	??_main,w
   388  002C  00F6               	movwf	_adc_val
   389                           
   390                           ;eeprom.c: 50:             PORTD = adc_val;
   391  002D  0876               	movf	_adc_val,w
   392  002E  0088               	movwf	8	;volatile
   393                           
   394                           ;eeprom.c: 51:             _delay((unsigned long)((100)*(4000000/4000000.0)));
   395  002F  3021               	movlw	33
   396  0030  00F5               	movwf	??_main
   397  0031                     u137:
   398  0031  0BF5               	decfsz	??_main,f
   399  0032  2831               	goto	u137
   400  0033                     l785:
   401                           
   402                           ;eeprom.c: 52:             ADCON0bits.GO = 1;
   403  0033  1283               	bcf	3,5	;RP0=0, select bank0
   404  0034  1303               	bcf	3,6	;RP1=0, select bank0
   405  0035  149F               	bsf	31,1	;volatile
   406  0036                     l787:
   407                           
   408                           ;eeprom.c: 55:         if(RB0 == 1 && RB0_old == 0){
   409  0036  1C06               	btfss	6,0	;volatile
   410  0037  2839               	goto	u91
   411  0038  283A               	goto	u90
   412  0039                     u91:
   413  0039  2849               	goto	l793
   414  003A                     u90:
   415  003A                     l789:
   416  003A  0877               	movf	_RB0_old,w
   417  003B  1D03               	btfss	3,2
   418  003C  283E               	goto	u101
   419  003D  283F               	goto	u100
   420  003E                     u101:
   421  003E  2849               	goto	l793
   422  003F                     u100:
   423  003F                     l791:
   424                           
   425                           ;eeprom.c: 56:             writeEEPROM(adc_val, 0x5);
   426  003F  3005               	movlw	5
   427  0040  00F5               	movwf	??_main
   428  0041  0875               	movf	??_main,w
   429  0042  00F2               	movwf	writeEEPROM@address
   430  0043  0876               	movf	_adc_val,w
   431  0044  120A  118A  2099  120A  118A  	fcall	_writeEEPROM
   432  0049                     l793:
   433                           
   434                           ;eeprom.c: 59:         RB0_old = RB0;
   435  0049  3000               	movlw	0
   436  004A  1283               	bcf	3,5	;RP0=0, select bank0
   437  004B  1303               	bcf	3,6	;RP1=0, select bank0
   438  004C  1806               	btfsc	6,0	;volatile
   439  004D  3001               	movlw	1
   440  004E  00F7               	movwf	_RB0_old
   441  004F                     l795:
   442                           
   443                           ;eeprom.c: 61:         if(RB1 == 0){
   444  004F  1886               	btfsc	6,1	;volatile
   445  0050  2852               	goto	u111
   446  0051  2853               	goto	u110
   447  0052                     u111:
   448  0052  2854               	goto	l799
   449  0053                     u110:
   450  0053                     l797:
   451  0053  0063               	sleep	;# 
   452  0054                     l799:
   453                           
   454                           ;eeprom.c: 64:         PORTC = (char)readEEPROM(0x05);
   455  0054  3005               	movlw	5
   456  0055  120A  118A  20B6  120A  118A  	fcall	_readEEPROM
   457  005A  1283               	bcf	3,5	;RP0=0, select bank0
   458  005B  1303               	bcf	3,6	;RP1=0, select bank0
   459  005C  0087               	movwf	7	;volatile
   460  005D  281F               	goto	l779
   461  005E  120A  118A  280C   	ljmp	start
   462  0061                     __end_of_main:
   463                           
   464                           	psect	text1
   465  0099                     __ptext1:	
   466 ;; *************** function _writeEEPROM *****************
   467 ;; Defined at:
   468 ;;		line 105 in file "eeprom.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;  data            1    wreg     unsigned char 
   471 ;;  address         1    2[COMMON] unsigned char 
   472 ;; Auto vars:     Size  Location     Type
   473 ;;  data            1    3[COMMON] unsigned char 
   474 ;; Return value:  Size  Location     Type
   475 ;;                  1    wreg      void 
   476 ;; Registers used:
   477 ;;		wreg
   478 ;; Tracked objects:
   479 ;;		On entry : 0/0
   480 ;;		On exit  : 0/0
   481 ;;		Unchanged: 0/0
   482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   483 ;;      Params:         1       0       0       0       0
   484 ;;      Locals:         1       0       0       0       0
   485 ;;      Temps:          0       0       0       0       0
   486 ;;      Totals:         2       0       0       0       0
   487 ;;Total ram usage:        2 bytes
   488 ;; Hardware stack levels used:    1
   489 ;; Hardware stack levels required when called:    1
   490 ;; This function calls:
   491 ;;		Nothing
   492 ;; This function is called by:
   493 ;;		_main
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497                           
   498                           ;psect for function _writeEEPROM
   499  0099                     _writeEEPROM:
   500                           
   501                           ;incstack = 0
   502                           ; Regs used in _writeEEPROM: [wreg]
   503                           ;writeEEPROM@data stored from wreg
   504  0099  00F3               	movwf	writeEEPROM@data
   505  009A                     l767:
   506                           
   507                           ;eeprom.c: 107:     EEADR = address;
   508  009A  0872               	movf	writeEEPROM@address,w
   509  009B  1283               	bcf	3,5	;RP0=0, select bank2
   510  009C  1703               	bsf	3,6	;RP1=1, select bank2
   511  009D  008D               	movwf	13	;volatile
   512                           
   513                           ;eeprom.c: 108:     EEDAT = data;
   514  009E  0873               	movf	writeEEPROM@data,w
   515  009F  008C               	movwf	12	;volatile
   516  00A0                     l769:
   517                           
   518                           ;eeprom.c: 110:     EECON1bits.EEPGD = 0;
   519  00A0  1683               	bsf	3,5	;RP0=1, select bank3
   520  00A1  1703               	bsf	3,6	;RP1=1, select bank3
   521  00A2  138C               	bcf	12,7	;volsfr
   522  00A3                     l771:
   523                           
   524                           ;eeprom.c: 111:     EECON1bits.WREN = 1;
   525  00A3  150C               	bsf	12,2	;volsfr
   526  00A4                     l773:
   527                           
   528                           ;eeprom.c: 113:     INTCONbits.GIE = 0;
   529  00A4  138B               	bcf	11,7	;volatile
   530                           
   531                           ;eeprom.c: 115:     EECON2 = 0x55;
   532  00A5  3055               	movlw	85
   533  00A6  008D               	movwf	13	;volsfr
   534                           
   535                           ;eeprom.c: 116:     EECON2 = 0xAA;
   536  00A7  30AA               	movlw	170
   537  00A8  008D               	movwf	13	;volsfr
   538  00A9                     l775:
   539                           
   540                           ;eeprom.c: 117:     EECON1bits.WR = 1;
   541  00A9  148C               	bsf	12,1	;volsfr
   542  00AA                     l81:	
   543                           ;eeprom.c: 119:     while(!PIR2bits.EEIF);
   544                           
   545  00AA  1283               	bcf	3,5	;RP0=0, select bank0
   546  00AB  1303               	bcf	3,6	;RP1=0, select bank0
   547  00AC  1E0D               	btfss	13,4	;volatile
   548  00AD  28AF               	goto	u71
   549  00AE  28B0               	goto	u70
   550  00AF                     u71:
   551  00AF  28AA               	goto	l81
   552  00B0                     u70:
   553  00B0                     l83:
   554                           
   555                           ;eeprom.c: 120:     PIR2bits.EEIF = 0;
   556  00B0  120D               	bcf	13,4	;volatile
   557                           
   558                           ;eeprom.c: 121:     EECON1bits.WREN = 1;
   559  00B1  1683               	bsf	3,5	;RP0=1, select bank3
   560  00B2  1703               	bsf	3,6	;RP1=1, select bank3
   561  00B3  150C               	bsf	12,2	;volsfr
   562                           
   563                           ;eeprom.c: 122:     INTCONbits.GIE = 0;
   564  00B4  138B               	bcf	11,7	;volatile
   565  00B5                     l84:	
   566                           ;eeprom.c: 124:     return;
   567                           
   568  00B5  0008               	return
   569  00B6                     __end_of_writeEEPROM:
   570                           
   571                           	psect	text2
   572  0061                     __ptext2:	
   573 ;; *************** function _setup *****************
   574 ;; Defined at:
   575 ;;		line 68 in file "eeprom.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;		None
   578 ;; Auto vars:     Size  Location     Type
   579 ;;		None
   580 ;; Return value:  Size  Location     Type
   581 ;;                  1    wreg      void 
   582 ;; Registers used:
   583 ;;		wreg, status,2, status,0
   584 ;; Tracked objects:
   585 ;;		On entry : 0/0
   586 ;;		On exit  : 0/0
   587 ;;		Unchanged: 0/0
   588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   589 ;;      Params:         0       0       0       0       0
   590 ;;      Locals:         0       0       0       0       0
   591 ;;      Temps:          1       0       0       0       0
   592 ;;      Totals:         1       0       0       0       0
   593 ;;Total ram usage:        1 bytes
   594 ;; Hardware stack levels used:    1
   595 ;; Hardware stack levels required when called:    1
   596 ;; This function calls:
   597 ;;		Nothing
   598 ;; This function is called by:
   599 ;;		_main
   600 ;; This function uses a non-reentrant model
   601 ;;
   602                           
   603                           
   604                           ;psect for function _setup
   605  0061                     _setup:
   606  0061                     l679:	
   607                           ;incstack = 0
   608                           ; Regs used in _setup: [wreg+status,2+status,0]
   609                           
   610                           
   611                           ;eeprom.c: 70:     ANSEL =0b00100000;
   612  0061  3020               	movlw	32
   613  0062  1683               	bsf	3,5	;RP0=1, select bank3
   614  0063  1703               	bsf	3,6	;RP1=1, select bank3
   615  0064  0088               	movwf	8	;volatile
   616  0065                     l681:
   617                           
   618                           ;eeprom.c: 71:     ANSELH = 0x00;
   619  0065  0189               	clrf	9	;volatile
   620  0066                     l683:
   621                           
   622                           ;eeprom.c: 73:     TRISB = 0b111;
   623  0066  3007               	movlw	7
   624  0067  1683               	bsf	3,5	;RP0=1, select bank1
   625  0068  1303               	bcf	3,6	;RP1=0, select bank1
   626  0069  0086               	movwf	6	;volatile
   627                           
   628                           ;eeprom.c: 74:     TRISC = 0x00;
   629  006A  0187               	clrf	7	;volatile
   630                           
   631                           ;eeprom.c: 75:     TRISD = 0x00;
   632  006B  0188               	clrf	8	;volatile
   633                           
   634                           ;eeprom.c: 77:     PORTB = 0x00;
   635  006C  1283               	bcf	3,5	;RP0=0, select bank0
   636  006D  1303               	bcf	3,6	;RP1=0, select bank0
   637  006E  0186               	clrf	6	;volatile
   638                           
   639                           ;eeprom.c: 78:     PORTC = 0x00;
   640  006F  0187               	clrf	7	;volatile
   641                           
   642                           ;eeprom.c: 79:     PORTD = 0x00;
   643  0070  0188               	clrf	8	;volatile
   644  0071                     l685:
   645                           
   646                           ;eeprom.c: 81:     OPTION_REGbits.nRBPU = 0;
   647  0071  1683               	bsf	3,5	;RP0=1, select bank1
   648  0072  1303               	bcf	3,6	;RP1=0, select bank1
   649  0073  1381               	bcf	1,7	;volatile
   650  0074                     l687:
   651                           
   652                           ;eeprom.c: 82:     WPUB = 0b111;
   653  0074  3007               	movlw	7
   654  0075  0095               	movwf	21	;volatile
   655  0076                     l689:
   656                           
   657                           ;eeprom.c: 84:     INTCONbits.RBIE = 1;
   658  0076  158B               	bsf	11,3	;volatile
   659  0077                     l691:
   660                           
   661                           ;eeprom.c: 85:     INTCONbits.RBIF = 0;
   662  0077  100B               	bcf	11,0	;volatile
   663  0078                     l693:
   664                           
   665                           ;eeprom.c: 86:     IOCB = 0b0100;
   666  0078  3004               	movlw	4
   667  0079  0096               	movwf	22	;volatile
   668  007A                     l695:
   669                           
   670                           ;eeprom.c: 87:     INTCONbits.GIE = 0;
   671  007A  138B               	bcf	11,7	;volatile
   672  007B                     l697:
   673                           
   674                           ;eeprom.c: 89:     OSCCONbits.IRCF = 0b110;
   675  007B  080F               	movf	15,w	;volatile
   676  007C  398F               	andlw	-113
   677  007D  3860               	iorlw	96
   678  007E  008F               	movwf	15	;volatile
   679  007F                     l699:
   680                           
   681                           ;eeprom.c: 90:     OSCCONbits.SCS = 1;
   682  007F  140F               	bsf	15,0	;volatile
   683  0080                     l701:
   684                           
   685                           ;eeprom.c: 92:     ADCON1bits.ADFM = 0;
   686  0080  139F               	bcf	31,7	;volatile
   687  0081                     l703:
   688                           
   689                           ;eeprom.c: 93:     ADCON1bits.VCFG0= 0;
   690  0081  121F               	bcf	31,4	;volatile
   691  0082                     l705:
   692                           
   693                           ;eeprom.c: 94:     ADCON1bits.VCFG1= 0;
   694  0082  129F               	bcf	31,5	;volatile
   695  0083                     l707:
   696                           
   697                           ;eeprom.c: 96:     ADCON0bits.ADCS = 0b01;
   698  0083  1283               	bcf	3,5	;RP0=0, select bank0
   699  0084  1303               	bcf	3,6	;RP1=0, select bank0
   700  0085  081F               	movf	31,w	;volatile
   701  0086  393F               	andlw	-193
   702  0087  3840               	iorlw	64
   703  0088  009F               	movwf	31	;volatile
   704  0089                     l709:
   705                           
   706                           ;eeprom.c: 97:     ADCON0bits.CHS = 5;
   707  0089  081F               	movf	31,w	;volatile
   708  008A  39C3               	andlw	-61
   709  008B  3814               	iorlw	20
   710  008C  009F               	movwf	31	;volatile
   711  008D                     l711:
   712                           
   713                           ;eeprom.c: 98:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   714  008D  3021               	movlw	33
   715  008E  00F2               	movwf	??_setup
   716  008F                     u147:
   717  008F  0BF2               	decfsz	??_setup,f
   718  0090  288F               	goto	u147
   719  0091                     l713:
   720                           
   721                           ;eeprom.c: 99:     ADCON0bits.ADON = 1;
   722  0091  1283               	bcf	3,5	;RP0=0, select bank0
   723  0092  1303               	bcf	3,6	;RP1=0, select bank0
   724  0093  141F               	bsf	31,0	;volatile
   725  0094                     l715:
   726                           
   727                           ;eeprom.c: 100:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   728  0094  3021               	movlw	33
   729  0095  00F2               	movwf	??_setup
   730  0096                     u157:
   731  0096  0BF2               	decfsz	??_setup,f
   732  0097  2896               	goto	u157
   733  0098                     l78:
   734  0098  0008               	return
   735  0099                     __end_of_setup:
   736                           
   737                           	psect	text3
   738  00B6                     __ptext3:	
   739 ;; *************** function _readEEPROM *****************
   740 ;; Defined at:
   741 ;;		line 126 in file "eeprom.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;  address         1    wreg     unsigned char 
   744 ;; Auto vars:     Size  Location     Type
   745 ;;  address         1    3[COMMON] unsigned char 
   746 ;;  data            1    4[COMMON] char 
   747 ;; Return value:  Size  Location     Type
   748 ;;                  1    wreg      char 
   749 ;; Registers used:
   750 ;;		wreg
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   756 ;;      Params:         0       0       0       0       0
   757 ;;      Locals:         2       0       0       0       0
   758 ;;      Temps:          1       0       0       0       0
   759 ;;      Totals:         3       0       0       0       0
   760 ;;Total ram usage:        3 bytes
   761 ;; Hardware stack levels used:    1
   762 ;; Hardware stack levels required when called:    1
   763 ;; This function calls:
   764 ;;		Nothing
   765 ;; This function is called by:
   766 ;;		_main
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770                           
   771                           ;psect for function _readEEPROM
   772  00B6                     _readEEPROM:
   773                           
   774                           ;incstack = 0
   775                           ; Regs used in _readEEPROM: [wreg]
   776                           ;readEEPROM@address stored from wreg
   777  00B6  00F3               	movwf	readEEPROM@address
   778  00B7                     l729:
   779                           
   780                           ;eeprom.c: 128:     EEADR = address;
   781  00B7  0873               	movf	readEEPROM@address,w
   782  00B8  1283               	bcf	3,5	;RP0=0, select bank2
   783  00B9  1703               	bsf	3,6	;RP1=1, select bank2
   784  00BA  008D               	movwf	13	;volatile
   785  00BB                     l731:
   786                           
   787                           ;eeprom.c: 129:     EECON1bits.EEPGD = 0;
   788  00BB  1683               	bsf	3,5	;RP0=1, select bank3
   789  00BC  1703               	bsf	3,6	;RP1=1, select bank3
   790  00BD  138C               	bcf	12,7	;volsfr
   791  00BE                     l733:
   792                           
   793                           ;eeprom.c: 130:     EECON1bits.RD = 1;
   794  00BE  140C               	bsf	12,0	;volsfr
   795                           
   796                           ;eeprom.c: 131:     int8_t data = (int8_t)EEDAT;
   797  00BF  1283               	bcf	3,5	;RP0=0, select bank2
   798  00C0  1703               	bsf	3,6	;RP1=1, select bank2
   799  00C1  080C               	movf	12,w	;volatile
   800  00C2  00F2               	movwf	??_readEEPROM
   801  00C3  0872               	movf	??_readEEPROM,w
   802  00C4  00F4               	movwf	readEEPROM@data
   803                           
   804                           ;eeprom.c: 133:     return data;
   805  00C5  0874               	movf	readEEPROM@data,w
   806  00C6                     l87:
   807  00C6  0008               	return
   808  00C7                     __end_of_readEEPROM:
   809                           
   810                           	psect	text4
   811  00C7                     __ptext4:	
   812 ;; *************** function _isr *****************
   813 ;; Defined at:
   814 ;;		line 33 in file "eeprom.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;		None
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		wreg
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   828 ;;      Params:         0       0       0       0       0
   829 ;;      Locals:         0       0       0       0       0
   830 ;;      Temps:          2       0       0       0       0
   831 ;;      Totals:         2       0       0       0       0
   832 ;;Total ram usage:        2 bytes
   833 ;; Hardware stack levels used:    1
   834 ;; This function calls:
   835 ;;		Nothing
   836 ;; This function is called by:
   837 ;;		Interrupt level 1
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           
   842                           ;psect for function _isr
   843  00C7                     _isr:
   844  00C7                     i1l737:
   845                           
   846                           ;eeprom.c: 34:     if(INTCONbits.RBIF){
   847  00C7  1C0B               	btfss	11,0	;volatile
   848  00C8  28CA               	goto	u2_21
   849  00C9  28CB               	goto	u2_20
   850  00CA                     u2_21:
   851  00CA  28D0               	goto	i1l64
   852  00CB                     u2_20:
   853  00CB                     i1l739:
   854                           
   855                           ;eeprom.c: 37:         PORTB = PORTB;
   856  00CB  1283               	bcf	3,5	;RP0=0, select bank0
   857  00CC  1303               	bcf	3,6	;RP1=0, select bank0
   858  00CD  0806               	movf	6,w	;volatile
   859  00CE  0086               	movwf	6	;volatile
   860  00CF                     i1l741:
   861                           
   862                           ;eeprom.c: 38:         INTCONbits.RBIF = 0;
   863  00CF  100B               	bcf	11,0	;volatile
   864  00D0                     i1l64:
   865  00D0  0871               	movf	??_isr+1,w
   866  00D1  008A               	movwf	10
   867  00D2  0E70               	swapf	??_isr,w
   868  00D3  0083               	movwf	3
   869  00D4  0EFE               	swapf	btemp,f
   870  00D5  0E7E               	swapf	btemp,w
   871  00D6  0009               	retfie
   872  00D7                     __end_of_isr:
   873  007E                     btemp	set	126	;btemp
   874  007E                     wtemp0	set	126
   875                           
   876                           	psect	intentry
   877  0004                     __pintentry:	
   878                           ;incstack = 0
   879                           ; Regs used in _isr: [wreg]
   880                           
   881  0004                     interrupt_function:
   882  007E                     saved_w	set	btemp
   883  0004  00FE               	movwf	btemp
   884  0005  0E03               	swapf	3,w
   885  0006  00F0               	movwf	??_isr
   886  0007  080A               	movf	10,w
   887  0008  00F1               	movwf	??_isr+1
   888  0009  120A  118A  28C7   	ljmp	_isr
   889                           
   890                           	psect	config
   891                           
   892                           ;Config register CONFIG1 @ 0x2007
   893                           ;	Oscillator Selection bits
   894                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   895                           ;	Watchdog Timer Enable bit
   896                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   897                           ;	Power-up Timer Enable bit
   898                           ;	PWRTE = OFF, PWRT disabled
   899                           ;	RE3/MCLR pin function select bit
   900                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   901                           ;	Code Protection bit
   902                           ;	CP = OFF, Program memory code protection is disabled
   903                           ;	Data Code Protection bit
   904                           ;	CPD = OFF, Data memory code protection is disabled
   905                           ;	Brown Out Reset Selection bits
   906                           ;	BOREN = OFF, BOR disabled
   907                           ;	Internal External Switchover bit
   908                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   909                           ;	Fail-Safe Clock Monitor Enabled bit
   910                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   911                           ;	Low Voltage Programming Enable bit
   912                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
   913                           ;	In-Circuit Debugger Mode bit
   914                           ;	DEBUG = 0x1, unprogrammed default
   915  2007                     	org	8199
   916  2007  38D4               	dw	14548
   917                           
   918                           ;Config register CONFIG2 @ 0x2008
   919                           ;	Brown-out Reset Selection bit
   920                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   921                           ;	Flash Program Memory Self Write Enable bits
   922                           ;	WRT = OFF, Write protection off
   923  2008                     	org	8200
   924  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_readEEPROM

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     150
                                              5 COMMON     1     1      0
                         _readEEPROM
                              _setup
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (1) _writeEEPROM                                          2     1      1     120
                                              2 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readEEPROM                                           3     3      0      30
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _readEEPROM
   _setup
   _writeEEPROM

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       8      12        0.0%
ABS                  0      0       8       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Jun 03 01:06:21 2021

                     l81 00AA                       l83 00B0                       l84 00B5  
                     l78 0098                       l87 00C6                       u70 00B0  
                     u71 00AF                       u80 0029                       u81 0028  
                     u90 003A                       u91 0039                      l701 0080  
                    l711 008D                      l703 0081                      l713 0091  
                    l705 0082                      l731 00BB                      l715 0094  
                    l707 0083                      l733 00BE                      l709 0089  
                    l729 00B7                      l681 0065                      l691 0077  
                    l683 0066                      l771 00A3                      l693 0078  
                    l685 0071                      l773 00A4                      l781 0023  
                    l695 007A                      l687 0074                      l679 0061  
                    l775 00A9                      l767 009A                      l791 003F  
                    l783 0029                      l697 007B                      l689 0076  
                    l769 00A0                      l793 0049                      l785 0033  
                    l777 001A                      l699 007F                      l795 004F  
                    l787 0036                      l779 001F                      l797 0053  
                    l789 003A                      l799 0054                      _RB0 0030  
                    _RB1 0031                      u100 003F                      u101 003E  
                    u110 0053                      u111 0052                      u127 0021  
                    u137 0031                      u147 008F                      u157 0096  
                    _isr 00C7                     ?_isr 0070                     _IOCB 0096  
                   i1l64 00D0                     _WPUB 0095                     u2_20 00CB  
                   u2_21 00CA                     _main 001A                     btemp 007E  
                   start 000C              _writeEEPROM 0099                    ??_isr 0070  
     writeEEPROM@address 0072                    ?_main 0070                    _EEADR 010D  
                  _EEDAT 010C                    _ANSEL 0188                    i1l741 00CF  
                  i1l737 00C7                    i1l739 00CB                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _setup 0061  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0061                   ??_main 0075  
                 _ADRESH 001E                   _EECON2 018D                   ?_setup 0070  
                 _ANSELH 0189             __pdataCOMMON 0077                   saved_w 007E  
__end_of__initialization 0016          writeEEPROM@data 0073           __pcstackCOMMON 0070  
          __end_of_setup 0099           _OPTION_REGbits 0081                  ??_setup 0072  
             __pmaintext 001A             ?_writeEEPROM 0072               __pintentry 0004  
                _RB0_old 0077               _readEEPROM 00B6                  _adc_val 0076  
                __ptext1 0099                  __ptext2 0061                  __ptext3 00B6  
                __ptext4 00C7             __size_of_isr 0010     end_of_initialization 0016  
      readEEPROM@address 0073              ?_readEEPROM 0070     __size_of_writeEEPROM 001D  
          __pidataCOMMON 00D7      start_initialization 000F              __end_of_isr 00D7  
    __size_of_readEEPROM 0011              __pbssCOMMON 0076                ___latbits 0002  
         __size_of_setup 0038        interrupt_function 0004                 _PIR2bits 000D  
             _ADCON0bits 001F               _ADCON1bits 009F             ??_readEEPROM 0072  
             _EECON1bits 018C       __end_of_readEEPROM 00C7            __size_of_main 0047  
          ??_writeEEPROM 0073               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F           readEEPROM@data 0074      __end_of_writeEEPROM 00B6  
